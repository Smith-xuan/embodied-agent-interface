You are a helpful assistant to map abstract edge and node goals into concrete goals. Abstract goals contains some wildcards that describe groups of objects satisfying some properties. You will be provided a node+property dictionary describing object candidates and their properties, where keys are object names and values are their properties. Your task is to replace all wildcards in the edge and node goals with concrete object names in the provided dictionary. In edge abstract goal, a wildcard can be replaced by an object only when the object contains all the properties that the wildcard desired! In node abstract goal, one dictionary should be chosen if its 'name' value appears in the keys of node+property dictionary.

Edge wildcard format: Edge wildcards start and end with ?. Between the two ? are the properties the wildcard desired. Each property is wrapped with angled brackets in the format <Property.{some property}: {property id}>. For example, wildcard ?[<Property.GRABBABLE: 2>, <Property.MOVABLE: 22>, <Property.CREAM: 23>]? can be matched to any object that have all three properties [<Property.GRABBABLE: 2>, <Property.MOVABLE: 22>, <Property.CREAM: 23>]. If node+property dictionary is {soap: [<Property.GRABBABLE: 2>, <Property.MOVABLE: 22>, <Property.CREAM: 23>]}, then ?[<Property.GRABBABLE: 2>, <Property.MOVABLE: 22>, <Property.CREAM: 23>]? can be replaced by soap.

OR operator in the edge wildcard: Some wildcards contain | as OR operator and concatenating multiple wildcards. As long as one wildcard is satisfied, the whole wildcard can be replaced by that object. For example, the wildcard ?[<Property.GRABBABLE: 2>, <Property.MOVABLE: 22>, <Property.CREAM: 23>]?|?[<Property.GRABBABLE: 2>, <Property.POURABLE: 10>, <Property.MOVABLE: 22>]? has | inside. It can match to any object that either has properties [<Property.GRABBABLE: 2>, <Property.MOVABLE: 22>, <Property.CREAM: 23>] or has properties [<Property.GRABBABLE: 2>, <Property.POURABLE: 10>, <Property.MOVABLE: 22>]. If you got {detergent: [<Property.GRABBABLE: 2>, <Property.POURABLE: 10>, <Property.MOVABLE: 22>]} as node+property dictionary, even though detergent does not satisfy [<Property.GRABBABLE: 2>, <Property.MOVABLE: 22>, <Property.CREAM: 23>], it satisfies [<Property.GRABBABLE: 2>, <Property.POURABLE: 10>, <Property.MOVABLE: 22>]. So you can replace ?[<Property.GRABBABLE: 2>, <Property.MOVABLE: 22>, <Property.CREAM: 23>]?|?[<Property.GRABBABLE: 2>, <Property.POURABLE: 10>, <Property.MOVABLE: 22>]? by detergent.

Node wildcard format: Node wildcard contains |. Node wildcard is several node state dictionaries concatenating with |. You should choose only one dictionary out of all by checking the 'name' key of each dictionary. If the value of the 'name' key, which is the object name, appears in the given node+property dictionary, you should select that one. If not just skip it. Only one dictionary can be selected. For example, if the node wildcard is {'name': 'laptop', 'state': 'ON'}|{'name': 'computer', 'state': 'ON'}, and node+property dictionary is {computer: [...]}, you should replace {'name': 'laptop', 'state': 'ON'}|{'name': 'computer', 'state': 'ON'} by {'name': 'computer', 'state': 'ON'}.

If no | in node abstract goals, output all node goals the same as input.

Notice: Keep everything that is not wildcard in the abstract goals unchanged! Only replace wildcard but nothing else. For example, if the complete edge abstract goal is {'from_name': 'character', 'relation': 'HOLDS_RH', 'to_name': '?[<Property.GRABBABLE: 2>, <Property.MOVABLE: 22>, <Property.CREAM: 23>]?|?[<Property.GRABBABLE: 2>, <Property.COVER_OBJECT: 19>, <Property.MOVABLE: 22>]?'}, if you replace the wildcard with detergent, you should return {'from_name': 'character', 'relation': 'HOLDS_RH', 'to_name': 'detergent'}

IMPORTANT: If there is no wildcard in abstract goals, you should keep it and output it as original. Do not leave out any input goals. 

The edge abstract goals are: 
<edge_goals>

The node abstract goals are:
<node_goals>

The node+property dictionary is: 
<node+property>

Please map the wildcards in the abstract goals to specific objects (in edge goal) or dictionaries (in node goal). Make sure the number of output goals is the same as the number of input goals.  Output the edge goals and node goals in json format: {'concrete edge goals': YOUR CONCRETE EDGE GOAL OUTPUT, 'concrete node goals': YOUR CONCRETE NODE GOAL OUTPUT}. 
[
    {
        "identifier": "27_2",
        "llm_output": "{\n    \"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n                (clothes ?obj1)  ; obj1 must be a piece of clothing\\n                (hangable ?obj2)  ; obj2 must be an object suitable for hanging clothes\\n                (next_to ?char ?obj2)  ; character must be next to obj2\\n            )\\n  :effect (and\\n            (not (holds_rh ?char ?obj1))  ; obj1 is no longer held in the right hand\\n            (not (holds_lh ?char ?obj1))  ; obj1 is no longer held in the left hand\\n            (ontop ?obj1 ?obj2)  ; obj1 is now on top of obj2\\n        )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)  ; character must be next to obj\\n  :effect ()\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (has_switch ?obj)  ; obj must have a switch\\n                (plugged_in ?obj)  ; obj must be plugged in\\n                (closed ?obj)  ; obj must be closed\\n                (next_to ?char ?obj)  ; character must be next to obj\\n            )\\n  :effect (on ?obj)\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (grabbable ?obj)  ; obj must be grabbable\\n                (next_to ?char ?obj)  ; character must be next to obj\\n            )\\n  :effect (or\\n            (holds_rh ?char ?obj)  ; character holds obj in the right hand\\n            (holds_lh ?char ?obj)  ; character holds obj in the left hand\\n        )\\n)\\n\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (can_open ?obj)  ; obj must be openable\\n                (obj_inside ?obj ?obj)  ; obj should contain itself (dummy precondition for now)\\n                (next_to ?char ?obj)  ; character must be next to obj\\n            )\\n  :effect (closed ?obj)\\n)\\n\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (can_open ?obj)  ; obj must be openable\\n                (closed ?obj)  ; obj must be closed\\n                (next_to ?char ?obj)  ; character must be next to obj\\n            )\\n  :effect (open ?obj)\\n)\"\n}"
    },
    {
        "identifier": "417_1",
        "llm_output": "{\n  \"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and (sittable ?obj1) (clothes ?obj2) (grabbable ?obj2) (next_to ?char ?obj1) (next_to ?char ?obj2))\\n  :effect (and (on_char ?obj2 ?char) (next_to ?char ?obj2))\\n\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (on char))\\n  :effect (on ?obj)\\n\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (holds_rh ?char ?obj)\\n\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (can_open ?obj) (open ?obj) (next_to ?char ?obj))\\n  :effect (closed ?obj)\\n\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (can_open ?obj) (closed ?obj) (next_to ?char ?obj))\\n  :effect (open ?obj)\\n\\n)\"\n}"
    },
    {
        "identifier": "850_1",
        "llm_output": "{\n    \"output\": \"(:action switch_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "954_2",
        "llm_output": "{\n\t\"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n                (and\\n                    (movable ?obj2)\\n                    (obj_next_to ?char ?obj2)\\n                )\\n                (or\\n                    (and\\n                        (clothes ?obj1)\\n                        (clothes ?obj2)\\n                        (hangable ?obj2)\\n                    )\\n                    (and\\n                        (eatable ?obj1)\\n                        (person ?char)\\n                    )\\n                )\\n            )\\n  :effect (and\\n             (not (obj_next_to ?char ?obj2))\\n             (ontop ?obj1 ?obj2)\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (has_switch ?obj)\\n                 (on_char ?obj ?char)\\n                )\\n  :effect (on ?obj)\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (grabbable ?obj)\\n                 (next_to ?char ?obj)\\n                )\\n  :effect (and\\n              (not (next_to ?char ?obj))\\n              (or (holds_rh ?char ?obj) (holds_lh ?char ?obj))\\n            )\\n)\\n\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (can_open ?obj)\\n                 (next_to ?char ?obj)\\n                )\\n  :effect (closed ?obj)\\n)\\n\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (can_open ?obj)\\n                 (next_to ?char ?obj)\\n                 (closed ?obj)\\n                )\\n  :effect (not (closed ?obj))\\n)\"\n}"
    },
    {
        "identifier": "11_1",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (plugged_out ?obj)\\n                  (has_switch ?obj)\\n                  (movable ?obj)\\n                  (inside_room ?obj bedroom)\\n                  (inside ?char dining_room)\\n              )\\n  :effect (plugged_in ?obj)\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (on ?obj))\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "120_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_switch ?obj)\\n    (plugged_in ?obj)\\n    (clean ?obj)\\n    (obj_next_to ?obj ?char)\\n    (off ?obj)\\n  )\\n  :effect (and\\n    (not (off ?obj))\\n    (on ?obj)\\n  )\\n)\"\n}"
    },
    {
        "identifier": "125_2",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (plugged_out ?obj)\\n                   (has_plug ?obj)\\n                   (has_switch ?char)\\n                   (obj_next_to ?char ?obj)\\n                   (inside_room ?obj ?room)\\n                   (inside_room ?char ?room)\\n                )\\n  :effect (and\\n             (plugged_in ?obj)\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and\\n             (next_to ?char ?obj)\\n           )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (on ?obj)\\n                   (plugged_in ?obj)\\n                   (has_switch ?char)\\n                   (obj_next_to ?char ?obj)\\n                   (inside_room ?obj ?room)\\n                   (inside_room ?char ?room)\\n                )\\n  :effect (and\\n             (on ?obj)\\n           )\\n)\\n\"}"
    },
    {
        "identifier": "150_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (inside ?char ?obj)\\n                   (obj_next_to ?char ?obj)\\n               )\\n  :effect (next_to ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_switch ?obj)\\n                   (plugged_in ?obj)\\n                   (off ?obj)\\n                   (obj_inside ?obj ?char)\\n               )\\n  :effect (and\\n                 (on ?obj)\\n                 (not (off ?obj))\\n               )\\n)\"\n}"
    },
    {
        "identifier": "160_1",
        "llm_output": "{\n\t\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (exists (?dest - object)\\n                    (and\\n                        (next_to ?char ?obj)\\n                        (movable ?obj)\\n                        (obj_next_to ?obj ?dest)\\n                        (exists (?dir - object)\\n                            (containers ?dir)\\n                            (obj_inside dir home_office)\\n                            (obj_inside dest dir)\\n                        )\\n                    )\\n                 )\\n             )\\n  :effect (next_to ?char ?dest)\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (has_switch ?obj)\\n                  (on_char ?obj ?char)\\n                  (plugged_in ?obj)\\n              )\\n  :effect (and\\n                  (on ?obj)\\n              )\\n)\"\n}"
    },
    {
        "identifier": "180_2",
        "llm_output": "{\"output\": \"(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (plugged_in ?obj)\\n                   (clean ?obj)\\n                   (has_switch ?obj)\\n                   (has_plug ?obj)\\n                   (obj_next_to ?obj ?obj)\\n                   (inside ?char bathroom)\\n                   (sitting ?char)\\n                   (off ?obj)\\n                   (inside_room ?obj bathroom)\\n                   (inside_room ?obj dining_room)\\n                 )\\n  :effect (and\\n             (on ?obj)\\n             (plugged_in ?obj)\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (sitting ?char)\\n                   (inside ?char ?obj)\\n                 )\\n  :effect (and\\n             (not (inside ?char ?obj))\\n             (next_to ?char ?obj)\\n           )\\n)\\n\\n(:action standup\\n  :parameters (?char - character)\\n  :precondition (sitting ?char)\\n  :effect (not (sitting ?char))\\n)\\n\"}"
    },
    {
        "identifier": "205_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (inside ?char ?obj)  ; character is inside the object\\n                 (obj_inside ?obj ?char)  ; the object is inside the character\\n             )\\n  :effect (next_to ?char ?obj)  ; character is now next to the object\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_switch ?obj)  ; the object must have a switch\\n                   (obj_next_to ?char ?obj)  ; the object is next to the character\\n                   (plugged_in ?obj)  ; the object must be plugged in\\n                   (clean ?obj)  ; the object must be clean\\n               )\\n  :effect (and\\n               (on ?obj)  ; the object is turned on\\n           )\\n)\"\n}"
    },
    {
        "identifier": "222_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (inside ?char ?obj)\\n                    (obj_next_to ?char ?obj)\\n                )\\n  :effect (next_to ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_switch ?obj)\\n                    (plugged_in ?obj)\\n                    (obj_next_to ?char ?obj)\\n                )\\n  :effect (and\\n                (on ?obj)\\n            )\\n)\"\n}"
    },
    {
        "identifier": "232_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (on ?char)\\n                (plugged_in ?obj)\\n                (obj_next_to ?obj ?char)\\n              )\\n  :effect (next_to ?char ?obj)\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (on ?obj)\\n                (plugged_in ?obj)\\n                (obj_next_to ?obj ?char)\\n              )\\n  :effect (on ?obj)\\n)\\n\"}"
    },
    {
        "identifier": "310_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (inside ?char ?obj) (obj_next_to ?char ?obj))\\n  :effect ()\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (inside ?char ?obj) (plugged_in ?obj))\\n  :effect (and (on ?obj) (not (off ?obj)))\\n)\"}"
    },
    {
        "identifier": "311_1",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (obj_inside ?obj ?room) (has_switch ?obj) (plugged_out ?obj) (movable ?obj) (clean ?obj))\\n  :effect (plugged_in ?obj))\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (inside_room ?char ?room) (movable ?char) (movable ?obj) (obj_next_to ?char ?obj))\\n  :effect ())\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (inside_room ?char ?room) (on ?obj) (plugged_in ?obj) (has_switch ?obj) (cle...\"}"
    },
    {
        "identifier": "331_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (inside_room ?obj ?room)\\n                    (inside ?char ?room)\\n                    (obj_next_to ?char ?obj)\\n                )\\n  :effect (and\\n                    (next_to ?char ?obj)\\n                )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_switch ?obj)\\n                    (next_to ?char ?obj)\\n                )\\n  :effect (and\\n                    (on ?obj)\\n                )\\n)\\n\"}"
    },
    {
        "identifier": "345_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (inside ?char ?obj)\\n                 )\\n  :effect (next_to ?char ?obj)\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (on_char ?obj ?char)\\n                   (has_switch ?obj)\\n                   (plugged_in ?obj)\\n                 )\\n  :effect (and\\n             (on ?obj)\\n           )\\n)\"}"
    },
    {
        "identifier": "392_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (obj_next_to ?char ?obj)  ; character must be next to the object\\n  )\\n  :effect (next_to ?char ?obj)  ; character is now next to the object\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (has_switch ?obj)  ; object must have a switch\\n      (obj_next_to ?char ?obj)  ; character must be next to the object\\n      (off ?obj)  ; object must be off\\n  )\\n  :effect (and\\n      (on ?obj)  ; object is now on\\n      (not (off ?obj))  ; object is no longer off\\n  )\\n)\"\n}"
    },
    {
        "identifier": "394_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (between ?char ?obj ?object)\\n                   (obj_next_to ?char ?obj)\\n                )\\n  :effect (next_to ?char ?obj)\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_switch ?obj)\\n                   (clean ?obj)\\n                   (has_plug ?obj)\\n                   (plugged_in ?obj)\\n                   (obj_next_to ?obj ?obj)\\n                   (off ?obj)\\n                   (next_to ?char ?obj)\\n                )\\n  :effect (and\\n              (on ?obj)\\n              (plugged_in ?obj)\\n            )\\n)\\n\"}"
    },
    {
        "identifier": "432_1",
        "llm_output": "{\n    \"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (plugged_out ?obj)\\n    (has_plug ?obj)\\n    (movable ?obj)\\n    (inside ?char bathroom)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (not (plugged_out ?obj))\\n    (plugged_in ?obj)\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (plugged_in ?obj)\\n    (has_switch ?obj)\\n    (inside_room ?obj ?char)\\n  )\\n  :effect (on ?obj)\\n)\\n\"\n}"
    },
    {
        "identifier": "443_2",
        "llm_output": "{\n    \"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (has_switch ?obj)\\n                  (plugged_out ?obj)\\n                  (inside_room ?obj bedroom)\\n                  (movable ?obj)\\n                  (inside character ?char dining_room)\\n              )\\n  :effect (and\\n              (not (plugged_out ?obj))\\n              (plugged_in ?obj)\\n          )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (inside character ?char dining_room)\\n                  (inside_room ?obj dining_room)\\n              )\\n  :effect ()\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (plugged_in ?obj)\\n                  (clean ?obj)\\n              )\\n  :effect (and\\n              (on ?obj)\\n              (not (off ?obj))\\n          )\\n)\"\n}"
    },
    {
        "identifier": "445_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\"}"
    },
    {
        "identifier": "511_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect () \\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect () \\n)\"}"
    },
    {
        "identifier": "585_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (exists (?room - object) (inside_room ?obj ?room))\\n                   (obj_next_to ?char ?obj)\\n                 )\\n  :effect (and\\n             (next_to ?char ?obj)\\n           )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (can_open ?obj)\\n                   (has_switch ?obj)\\n                   (plugged_in ?obj)\\n                   (clean ?obj)\\n                   (obj_next_to ?char ?obj)\\n                 )\\n  :effect (and\\n             (on ?obj)\\n           )\\n)\"\n}"
    },
    {
        "identifier": "604_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (obj_next_to ?char ?obj)\\n                )\\n  :effect (and\\n             (next_to ?char ?obj)\\n          )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_switch ?obj)\\n                   (obj_next_to ?char ?obj)\\n                   (plugged_in ?obj)\\n                )\\n  :effect (and\\n             (on ?obj)\\n          )\\n)\\n\"}"
    },
    {
        "identifier": "616_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "705_1",
        "llm_output": "{\n    \"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (plugged_out ?obj) (movable ?obj) (inside ?char ?obj))\\n  :effect (plugged_in ?obj))\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (inside_room ?obj ?room) (next_to ?char ?obj))\\n  :effect ((not (inside_room ?obj ?room)) (inside_room ?obj room)))\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (on ?obj) (has_switch ?obj) (plugged_in ?obj))\\n  :effect ())\\n\"\n}"
    },
    {
        "identifier": "708_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (not (inside_room ?obj ?)) (inside_room ?obj ?room) (next_to ?char ?obj))\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (on ?char ?obj))\\n  :effect (and (not (off ?obj)) (on ?obj))\\n)\"\n}"
    },
    {
        "identifier": "715_2",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (plugged_out ?obj) (has_plug ?obj) (clean ?obj) (movable ?obj) (next_to ?char ?obj))\\n  :effect (plugged_in ?obj))\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (movable ?char) (obj_next_to ?char ?obj))\\n  :effect (next_to ?char ?obj))\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (plugged_in ?obj) (has_switch ?obj) (next_to ?char ?obj))\\n  :effect (on ?obj))\"}"
    },
    {
        "identifier": "737_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect () \\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\" }"
    },
    {
        "identifier": "780_1",
        "llm_output": "{\"output\":\"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n              (inside_room ?obj ?room)\\n              (inside ?char ?room)\\n              (next_to ?char ?obj)\\n           )\\n  :effect (next_to ?char ?obj)\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n              (has_switch ?obj)\\n              (plugged_in ?obj)\\n              (off ?obj)\\n              (next_to ?char ?obj)\\n           )\\n  :effect (and\\n              (not (off ?obj))\\n              (on ?obj)\\n           )\\n)\\n\"}"
    },
    {
        "identifier": "812_1",
        "llm_output": "{\n  \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (inside ?char ?obj)\\n                   (obj_next_to ?char ?obj)\\n                 )\\n  :effect ()\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_switch ?obj)\\n                   (plugged_in ?obj)\\n                   (on_char ?obj ?char)\\n                 )\\n  :effect (and\\n               (on ?obj)\\n             )\\n)\"\n}"
    },
    {
        "identifier": "835_2",
        "llm_output": "{\n    \"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (has_switch ?obj)\\n                  (obj_inside ?obj ?room)\\n                  (plugged_out ?obj)\\n                  (movable ?obj)\\n                  (inside ?char ?room)\\n                  (clean ?obj)\\n              )\\n  :effect (and\\n             (plugged_in ?obj)\\n          )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (inside ?char ?room)\\n                  (obj_next_to ?char ?obj)\\n              )\\n  :effect ()\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (plugged_in ?obj)\\n                  (off ?obj)\\n                  (on_char ?obj ?char)\\n              )\\n  :effect (and\\n             (on ?obj)\\n          )\\n)\"\n}"
    },
    {
        "identifier": "85_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (obj_next_to ?char ?obj)  ; character is next to the object\\n                 )\\n  :effect (and\\n                    (next_to ?char ?obj)  ; character is now close to the object\\n                 )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_switch ?obj)  ; the object has a switch\\n                    (obj_next_to ?char ?obj)  ; character is next to the object\\n                    (plugged_in ?obj)  ; the object is plugged in\\n                    (not (on ?obj))  ; the object is not already turned on\\n                 )\\n  :effect (and\\n                    (on ?obj)  ; the object is now turned on\\n                    (not (off ?obj))  ; the object is no longer off\\n                 )\\n)\"\n}"
    },
    {
        "identifier": "874_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n  (obj_next_to ?char ?obj)  ; character is next to the object\\n  (inside ?char ?room)  ; character is inside a room\\n  )\\n  :effect (next_to ?char ?char)\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n  (has_switch ?obj)  ; object has a switch\\n  (plugged_in ?obj)  ; object is plugged in\\n  (off ?obj)  ; object is turned off\\n  (has_plug ?obj)  ; object has a plug\\n  (obj_next_to ?char ?obj)  ; character is next to the object\\n  )\\n  :effect (and\\n  (on ?obj)  ; object is now turned on\\n  (not (off ?obj))  ; object is not turned off\\n)\\n)\"}"
    },
    {
        "identifier": "491_2",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (movable ?obj)\\n      (grabbable ?obj)\\n      (inside_room ?obj ?room)\\n      (inside ?char ?room)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n  )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "696_1",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)\\n                   (next_to ?char ?obj)\\n                 )\\n  :effect (and\\n             (holds_lh ?char ?obj)\\n           )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (movable ?char)\\n                   (holding ?char ?obj)\\n                   (next_to ?char ?obj)\\n                 )\\n  :effect (next_to ?char ?obj)\\n)\\n\"}"
    },
    {
        "identifier": "1004_2",
        "llm_output": "{\n    \"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (obj_next_to ?char ?obj)\\n                   (closed ?obj)\\n                   (has_switch ?obj)\\n               )\\n  :effect (and\\n               (not (closed ?obj))\\n               (open ?obj)\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "152_2",
        "llm_output": "{\"output\": \"(:action put_inside\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n                (movable ?obj1)\\n                (inside ?char ?obj2)\\n                (next_to ?char ?obj2)\\n            )\\n  :effect (and\\n                (obj_inside ?obj1 ?obj2)\\n                (not (next_to ?char ?obj2))\\n            )\\n)\\n\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (has_switch ?obj)\\n                (has_plug ?obj)\\n            )\\n  :effect (and\\n                (open ?obj)\\n                (plugged_in ?obj)\\n            )\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (grabbable ?obj)\\n                (next_to ?char ?obj)\\n            )\\n  :effect (and\\n                (holds_rh ?char ?obj)\\n                (not (next_to ?char ?obj))\\n            )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\" }"
    },
    {
        "identifier": "298_2",
        "llm_output": "{\"output\": \"(:action put_inside\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n                   (movable ?obj1)  ; The object to be put inside should be movable\\n                   (grabbable ?obj1)  ; The object to be put inside should be grabbable\\n                   (movable ?obj2)  ; The destination object should be movable\\n                   (containers ?obj2)  ; The destination object should be a container\\n                   (obj_next_to ?char ?obj1)  ; The character should be next to the object to be put inside\\n                   (obj_next_to ?obj1 ?obj2)  ; The object to be put inside should be next to the destination object\\n               )\\n  :effect (and\\n             (obj_inside ?obj1 ?obj2)  ; The object is now inside the container\\n             (not (obj_next_to ?obj1 ?obj2))  ; The object is no longer next to the container\\n           )\\n)\\n\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (can_open ?obj)  ; The object should be openable\\n                   (closed ?obj)  ; The object should be closed initially\\n                   (has_switch ?obj)  ; The object should have a switch\\n                   (next_to ?char ?obj)  ; The character should be next to the object to open it\\n               )\\n  :effect (and\\n             (open ?obj)  ; The object is now open\\n             (not (closed ?obj))  ; The object is no longer closed\\n           )\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)  ; The object should be grabbable\\n                   (next_to ?char ?obj)  ; The character should be next to the object to grab it\\n               )\\n  :effect (and\\n             (grabbable ?char ?obj)  ; The character is now holding the object\\n             (not (next_to ?char ?obj))  ; The object is no longer next to the character\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (movable ?char)  ; The character should be movable\\n                   (movable ?obj)  ; The object should be movable\\n                   (next_to ?char ?obj)  ; The character should be next to the object to walk towards it\\n               )\\n  :effect (next_to ?char ?obj)  ; The character is now next to the object\\n)\\n\"}"
    },
    {
        "identifier": "609_2",
        "llm_output": "{\"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (clean ?obj)\\n                   (has_switch ?obj)\\n                   (not (open ?obj))\\n                   (closed ?obj)\\n                   (has_plug ?obj)\\n                   (inside_room ?obj ?room)\\n                   (plugged_in ?obj)\\n                 )\\n  :effect (and\\n             (not (closed ?obj))\\n             (open ?obj)\\n           )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (inside ?char ?room)\\n                   (inside_room ?obj ?room)\\n                 )\\n  :effect (and\\n             (next_to ?char ?obj)\\n             (not (inside ?char ?room))\\n           )\\n)\" }"
    },
    {
        "identifier": "703_2",
        "llm_output": "{\n    \"output\": \"(:action put_inside\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and (grabbable ?obj1) (movable ?obj1) (inside_room ?obj2 ?obj2) (next_to ?char ?obj1) (obj_next_to ?obj1 ?obj2) (containers ?obj2))\\n  :effect (and (obj_inside ?obj1 ?obj2))\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (can_open ?obj) (next_to ?char ?obj) (has_switch ?obj) (closed ?obj) (plugged_in ?obj))\\n  :effect (and (open ?obj))\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (grabbable ?obj))\\n  :effect (and (obj_next_to ?obj ?char))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and)\\n)\"\n}"
    },
    {
        "identifier": "772_1",
        "llm_output": "{\n    \"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (inside_room ?obj bathroom) ; the object must be in the bathroom\\n                    (has_switch ?obj) ; the object must have a switch\\n                    (closed ?obj) ; the object must be closed\\n                    (plugged_in ?obj)) ; the object must be plugged in\\n  :effect (and\\n                    (open ?obj)) ; open the object\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj) ; the character must be next to the object\\n  :effect () ; no effect\\n)\"\n}"
    },
    {
        "identifier": "837_2",
        "llm_output": "{\n    \"output\": \"(:action put_inside\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n                   (grabbable ?obj1)\\n                   (movable ?obj1)\\n                   (movable ?obj2)\\n                   (inside_room ?char bedroom)\\n                   (next_to ?char ?obj2)\\n               )\\n  :effect (and\\n               (not (obj_next_to ?obj1 ?obj2))\\n               (obj_inside ?obj1 ?obj2)\\n           )\\n)\\n\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (can_open ?obj)\\n                   (closed ?obj)\\n                   (next_to ?char ?obj)\\n               )\\n  :effect (and\\n               (not (closed ?obj))\\n               (open ?obj)\\n           )\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)\\n                   (movable ?obj)\\n                   (next_to ?char ?obj)\\n               )\\n  :effect (and\\n               (not (next_to ?char ?obj))\\n               (holds_rh ?char ?obj)\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "158_1",
        "llm_output": "{\"output\": \"(:action walk_into\\n  :parameters (?char - character ?room - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action standup\\n  :parameters (?char - character)\\n  :precondition ()\\n  :effect ()\\n)\"}"
    },
    {
        "identifier": "323_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (next_to ?char ?obj))\\n)\\n\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (ontop ?char ?obj))\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "430_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (inside ?char ?obj)\\n)\\n\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (sittable ?obj)\\n  :effect (sitting ?char)\\n)\"\n}"
    },
    {
        "identifier": "478_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (inside ?char ?obj) (not (next_to ?char ?obj)))\\n)\\n\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (inside_room ?obj ?char))\\n  :effect (sitting ?char)\\n)\"\n}"
    },
    {
        "identifier": "496_1",
        "llm_output": "{\"output\": \"(:action walk_into\\n  :parameters (?char - character ?room - object)\\n  :precondition (inside_room ?room ?path)\\n  :effect (inside ?char ?room)\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (inside_room ?obj ?room) (next_to ?char ?obj))\\n  :effect (facing ?char ?obj)\\n)\"}"
    },
    {
        "identifier": "624_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ())\\n\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (next_to ?char ?obj))\\n  :effect ())\\n\"\n}"
    },
    {
        "identifier": "188_1",
        "llm_output": "{\n\t\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (next_to ?char ?obj))\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (and (holds_rh ?char ?obj))\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (facing ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (holds_rh ?char ?obj))\\n  :effect (and (on ?obj) (on_char ?obj ?char))\\n)\"\n}"
    },
    {
        "identifier": "803_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (grabbable ?obj))\\n  :effect (holds_rh ?char ?obj)\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (lookable ?obj))\\n  :effect (facing ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj) (off ?obj))\\n  :effect (on ?obj)\\n)\\n\"}"
    },
    {
        "identifier": "960_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (and (holds_rh ?char ?obj))\\n)\\n\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (lookable ?obj))\\n  :effect (facing ?char ?obj)\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (plugged_in ?obj) (facing ?char ?obj) (on ?obj) (holds_rh ?char ?obj))\\n  :effect (and (on ?obj) (on_char ?obj ?char) (on ?obj))\\n)\"\n}"
    },
    {
        "identifier": "101_2",
        "llm_output": "{\n    \"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_plug ?obj)  ; The object must have plug\\n                    (plugged_out ?obj)  ; The object must be unplugged\\n                    (grabbable ?obj)  ; The object must be grabbable\\n                    (next_to ?char ?obj)  ; The character must be next to the object\\n                 )\\n  :effect (and\\n             (plugged_in ?obj)  ; The object is now plugged in\\n             (not (plugged_out ?obj))  ; The object is no longer unplugged\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)  ; The character must be next to the object\\n  :effect ()\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_switch ?obj)  ; The object must have a switch\\n                    (on ?obj)  ; The object is currently off\\n                    (next_to ?char ?obj)  ; The character must be next to the object\\n                 )\\n  :effect (and\\n             (on ?obj)  ; The object is now turned on\\n             (not (off ?obj))  ; The object is no longer off\\n           )\\n)\" \n}"
    },
    {
        "identifier": "1068_1",
        "llm_output": "{\n    \"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (plugged_out ?obj)  ; The object should be plugged out\\n                    (has_switch ?obj)  ; The object should have a switch\\n                    (inside_room ?obj ?char)  ; The object should be in the same room as the character\\n                    (lookable ?obj)  ; The object should be lookable\\n                    (clean ?obj)  ; The object should be clean\\n                 )\\n  :effect (and\\n             (not (plugged_out ?obj))  ; The object is no longer plugged out\\n             (plugged_in ?obj)  ; The object is now plugged in\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)  ; The character should be next to the object\\n  :effect ()\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (plugged_in ?obj)  ; The object should be plugged in\\n                    (has_switch ?obj)  ; The object should have a switch\\n                    (inside_room ?obj ?char)  ; The object should be in the same room as the character\\n                 )\\n  :effect (and\\n             (not (off ?obj))  ; The object is no longer off\\n             (on ?obj)  ; The object is now on\\n           )\\n)\"\n}"
    },
    {
        "identifier": "153_2",
        "llm_output": "{\n  \"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (plugged_out ?obj) (has_plug ?obj) (inside ?obj ?room) (next_to ?char ?obj))\\n  :effect (and (plugged_in ?obj) (not (plugged_out ?obj)))\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (on ?obj) (next_to ?char ?obj))\\n  :effect (and (on ?obj) (not (off ?obj)))\\n)\\n\"\n}"
    },
    {
        "identifier": "196_2",
        "llm_output": "{\n    \"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_plug ?obj)  ; object should have a plug\\n                    (plugged_out ?obj)  ; object should currently be unplugged\\n                    (next_to ?char ?obj)  ; character should be next to the object to plug in\\n                )\\n  :effect (and\\n             (not (plugged_out ?obj))  ; object is no longer unplugged\\n             (plugged_in ?obj)  ; object is now plugged in\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (next_to ?char ?obj)  ; character should be next to the destination object to walk towards\\n                    (surfaces ?obj)  ; destination object should have surfaces to walk on\\n                )\\n  :effect (and\\n             (inside ?char ?obj)  ; character is now inside the destination object\\n           )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_switch ?obj)  ; object should have a switch\\n                    (on ?obj)  ; object should currently be off\\n                    (next_to ?char ?obj)  ; character should be next to the object to switch it on\\n                )\\n  :effect (and\\n             (not (off ?obj))  ; object is no longer off\\n             (on ?obj)  ; object is now turned on\\n           )\\n)\"\n}"
    },
    {
        "identifier": "198_1",
        "llm_output": "{\n    \"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (plugged_out ?obj)\\n                   (has_plug ?obj)\\n                   (next_to ?char ?obj)\\n                 )\\n  :effect (plugged_in ?obj)\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and\\n             (not (next_to ?char ?obj))\\n             (next_to ?char ?obj)\\n           )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (on ?obj)\\n                   (has_switch ?obj)\\n                   (next_to ?char ?obj)\\n                 )\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "201_2",
        "llm_output": "{\n    \"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (plugged_out ?obj)\\n                   (movable ?obj)\\n                   (plugged_in ?obj)\\n               )\\n  :effect (plugged_in ?obj)\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (inside_room ?obj ?room)\\n                    (obj_next_to ?obj ?room)\\n                    (inside ?char ?room)\\n                )\\n  :effect (and\\n              (next_to ?char ?obj)\\n              (inside ?char ?obj)\\n           )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_switch ?obj)\\n                    (plugged_in ?obj)\\n                    (off ?obj)\\n                    (next_to ?char ?obj)\\n                )\\n  :effect (and\\n              (on ?obj)\\n              (not (off ?obj))\\n           )\\n)\"\n}"
    },
    {
        "identifier": "232_1",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (plugged_out ?obj)\\n                   (has_plug ?obj)\\n                   (grabbable ?obj)\\n                   (next_to ?char ?obj)\\n              )\\n  :effect (and\\n               (not (plugged_out ?obj))\\n               (plugged_in ?obj)\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (inside_room ?obj ?room)\\n                   (inside_room ?char ?room)\\n                   (obj_next_to ?char ?obj)\\n              )\\n  :effect (next_to ?char ?obj)\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (plugged_in ?obj)\\n                   (has_switch ?obj)\\n                   (obj_inside ?obj ?room)\\n                   (clean ?obj)\\n                   (movable ?char)\\n                   (movable ?obj)\\n                   (facing ?char ?obj)\\n                   (lookable ?obj)\\n              )\\n  :effect (and\\n               (not (off ?obj))\\n               (on ?obj)\\n           )\\n)\\n\"}"
    },
    {
        "identifier": "234_1",
        "llm_output": "{\n    \"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_plug ?obj)\\n                   (has_switch ?obj)\\n                   (next_to ?char ?obj)\\n                )\\n  :effect (plugged_in ?obj)\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (movable ?char)\\n                   (obj_inside ?char ?obj)\\n                   (next_to ?char ?obj)\\n                )\\n  :effect\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_switch ?obj)\\n                   (plugged_in ?obj)\\n                   (movable ?char)\\n                   (next_to ?char ?obj)\\n                )\\n  :effect (on ?obj)\\n)\"\n}"
    },
    {
        "identifier": "343_2",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_switch ?obj)  ; The object must have a switch\\n                   (has_plug ?obj)  ; The object must have a plug\\n                   (off ?obj)  ; The object should be off\\n                   (next_to ?char ?obj)  ; The character should be next to the object\\n               )\\n  :effect (and\\n             (plugged_in ?obj)  ; The object is now plugged in\\n             (on ?obj)  ; The object is now turned on\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (movable ?char)  ; The character must be movable\\n                   (obj_next_to ?char ?obj)  ; The object should be next to the character\\n               )\\n  :effect (and\\n             (next_to ?char ?obj)  ; The character is now next to the object\\n           )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_switch ?obj)  ; The object must have a switch\\n                   (plugged_in ?obj)  ; The object must be plugged in\\n                   (next_to ?char ?obj)  ; The character should be next to the object\\n                   (off ?obj)  ; The object should be off\\n               )\\n  :effect (on ?obj)  ; The object is now turned on\\n)\\n\"}"
    },
    {
        "identifier": "373_1",
        "llm_output": "{\n    \"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (plugged_out ?obj)\\n                (has_switch ?obj)\\n                (inside ?char ?obj)\\n            )\\n  :effect (and\\n                (plugged_in ?obj)\\n            )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (inside ?char ?obj)\\n            )\\n  :effect ()\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (plugged_in ?obj)\\n                (has_switch ?obj)\\n                (clean ?obj)\\n                (lookable ?obj)\\n            )\\n  :effect (and\\n                (on ?obj)\\n            )\\n)\\n\"\n}"
    },
    {
        "identifier": "406_2",
        "llm_output": "{\n    \"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (has_switch ?obj)\\n                  (has_plug ?obj)\\n                  (plugged_out ?obj)\\n                  (next_to ?char ?obj)\\n              )\\n  :effect (and\\n                (not (plugged_out ?obj))\\n                (plugged_in ?obj)\\n             )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (plugged_in ?obj) (on ?obj))\\n  :effect (on ?obj)\\n)\"\n}"
    },
    {
        "identifier": "409_2",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_plug ?obj)\\n                    (next_to ?char ?obj)\\n                    (plugged_out ?obj)\\n                )\\n  :effect (and\\n             (not (plugged_out ?obj))\\n             (plugged_in ?obj)\\n         )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (or\\n                  (next_to ?char ?obj)\\n                  (near ?char ?obj)\\n                )\\n  :effect (and\\n             (next_to ?char ?obj)\\n         )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (has_switch ?obj)\\n                  (next_to ?char ?obj)\\n                )\\n  :effect (and\\n             (on ?obj)\\n             (not (off ?obj))\\n         )\\n)\"}"
    },
    {
        "identifier": "419_1",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (not (plugged_in ?obj)) (has_plug ?obj) (holds_rh ?char ?obj) (next_to ?char ?obj))\\n  :effect (plugged_in ?obj)\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (plugged_in ?obj) (has_switch ?obj) (next_to ?char ?obj))\\n  :effect (on ?obj)\\n)\"}"
    },
    {
        "identifier": "433_1",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (grabbable ?obj)\\n    (has_plug ?obj)\\n    (obj_next_to ?char ?obj)\\n    (plugged_out ?obj)\\n  )\\n  :effect (plugged_in ?obj)\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_switch ?obj)\\n    (on ?obj)\\n  )\\n  :effect (on ?obj)\\n)\\n\"}"
    },
    {
        "identifier": "437_2",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (has_plug ?obj)\\n                  (not (plugged_in ?obj))\\n                  (next_to ?char ?obj)\\n              )\\n  :effect (plugged_in ?obj)\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (movable ?char)\\n                  (movable ?obj)\\n                  (next_to ?char ?obj)\\n              )\\n  :effect (next_to ?char ?obj)\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (has_switch ?obj)\\n                  (not (on ?obj))\\n                  (next_to ?char ?obj)\\n              )\\n  :effect (on ?obj)\\n)\\n\"}"
    },
    {
        "identifier": "440_1",
        "llm_output": "{\n\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (has_plug ?obj)\\n                (obj_next_to ?char ?obj)\\n              )\\n  :effect (plugged_in ?obj)\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and\\n            (not (next_to ?char ?obj))\\n            (next_to ?char ?obj)\\n          )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (has_switch ?obj)\\n                (obj_next_to ?char ?obj)\\n                (plugged_in ?obj)\\n              )\\n  :effect (on ?obj)\\n)\"\n}"
    },
    {
        "identifier": "453_2",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_plug ?obj) (next_to ?char ?obj) (plugged_out ?obj))\\n  :effect (and (not (plugged_out ?obj)) (plugged_in ?obj))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (movable ?obj) (lookable ?obj) (next_to ?char ?obj))\\n  :effect ()\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (next_to ?char ?obj) (plugged_in ?obj) (on ?obj))\\n  :effect (and (off ?obj) (on ?obj))\\n)\\n\"}"
    },
    {
        "identifier": "46_1",
        "llm_output": "{\n    \"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (clean ?obj)  ; The object must be clean\\n                    (plugged_out ?obj)  ; The object must be plugged out\\n                    (next_to ?char ?obj)  ; The character should be next to the object\\n                )\\n  :effect (and\\n              (plugged_in ?obj)  ; The object is now plugged in\\n              (not (plugged_out ?obj))  ; The object is no longer plugged out\\n            )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)  ; The character should be next to the object\\n  :effect ()\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_switch ?obj)  ; The object must have a switch\\n                    (plugged_in ?obj)  ; The object must be plugged in\\n                    (next_to ?char ?obj)  ; The character should be next to the object\\n                )\\n  :effect (and\\n              (on ?obj)  ; The object is now switched on\\n              (off ?obj)  ; The object is no longer switched off\\n            )\\n)\"\n}"
    },
    {
        "identifier": "475_2",
        "llm_output": "{\n  \"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_plug ?obj)\\n                   (has_switch ?obj)\\n                   (plugged_out ?obj)\\n                   (next_to ?char ?obj)\\n                )\\n  :effect (and\\n             (not (plugged_out ?obj))\\n             (plugged_in ?obj)\\n           )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_switch ?obj)\\n                   (plugged_in ?obj)\\n                   (next_to ?char ?obj)\\n                )\\n  :effect (on ?obj)\\n)\\n\"\n}"
    },
    {
        "identifier": "503_1",
        "llm_output": "{\"output\": \"(:action plug_in\\n\\t:parameters (?char - character ?obj - object)\\n\\t:precondition (and\\n\\t\\t(pluggable ?obj) ; The object must be pluggable\\n\\t\\t(next_to ?char ?obj) ; The character must be next to the object\\n\\t)\\n\\t:effect (plugged_in ?obj) ; The object is now plugged in\\n)\\n\\n(:action walk_towards\\n\\t:parameters (?char - character ?obj - object)\\n\\t:precondition (next_to ?char ?obj) ; The character must be next to the object to walk towards\\n\\t:effect ; Walking towards the object\\n)\\n\\n(:action switch_on\\n\\t:parameters (?char - character ?obj - object)\\n\\t:precondition (and\\n\\t\\t(has_switch ?obj) ; The object must have a switch\\n\\t\\t(plugged_in ?obj) ; The object must be plugged in\\n\\t\\t(next_to ?char ?obj) ; The character must be next to the object\\n\\t)\\n\\t:effect (on ?obj) ; The object is now switched on\\n)\\n\"}"
    },
    {
        "identifier": "670_2",
        "llm_output": "{\n\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_plug ?obj)  ; the object must have a plug\\n                   (plugged_out ?obj)  ; the object must be unplugged\\n                   (next_to ?char ?obj)  ; the character must be next to the object\\n                 )\\n  :effect (and\\n             (plugged_in ?obj)  ; the object is now plugged in\\n           )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)  ; the character is next to the object\\n  :effect ()\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_switch ?obj)  ; the object must have a switch\\n                   (off ?obj)  ; the object must be turned off\\n                   (next_to ?char ?obj)  ; the character must be next to the object\\n                 )\\n  :effect (and\\n             (on ?obj)  ; the object is now turned on\\n           )\\n)\"\n}"
    },
    {
        "identifier": "719_2",
        "llm_output": "{\n    \"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (next_to ?char ?obj)\\n                   (has_plug ?obj)\\n                   (plugged_out ?obj)\\n               )\\n  :effect (and\\n             (not (plugged_out ?obj))\\n             (plugged_in ?obj)\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (inside_room ?char ?obj)\\n                   (movable ?obj)\\n               )\\n  :effect (next_to ?char ?obj)\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (next_to ?char ?obj)\\n                   (has_switch ?obj)\\n                   (off ?obj)\\n               )\\n  :effect (and\\n             (not (off ?obj))\\n             (on ?obj)\\n           )\\n)\"\n}"
    },
    {
        "identifier": "757_2",
        "llm_output": "{\n    \"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_plug ?obj)\\n                    (next_to ?char ?obj)\\n                    (plugged_out ?obj)\\n                )\\n  :effect (and\\n                    (plugged_in ?obj)\\n                )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_switch ?obj)\\n                    (on ?char ?obj)\\n                )\\n  :effect (on ?obj)\\n)\\n\"\n}\n"
    },
    {
        "identifier": "787_2",
        "llm_output": "{\n    \"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (plugged_out ?obj)\\n                (has_plug ?obj)\\n                (next_to ?char ?obj)\\n            )\\n  :effect (and\\n             (not (plugged_out ?obj))\\n             (plugged_in ?obj)\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (next_to ?char ?obj)\\n                    (movable ?char)\\n                )\\n  :effect (and\\n               (inside ?char ?obj)\\n               (not (inside ?char ?prev_location))\\n           )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_switch ?obj)\\n                )\\n  :effect (and\\n               (on ?obj)\\n               (not (off ?obj))\\n           )\\n)\"\n}"
    },
    {
        "identifier": "795_1",
        "llm_output": "{\n    \"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (plugged_out ?obj)\\n                   (has_plug ?obj)\\n                   (obj_next_to ?char ?obj)\\n               )\\n  :effect (and\\n             (not (plugged_out ?obj))\\n             (plugged_in ?obj)\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (plugged_in ?obj)\\n                   (has_switch ?obj)\\n                   (facing ?char ?obj)\\n               )\\n  :effect (and\\n             (not (off ?obj))\\n             (on ?obj)\\n           )\\n)\"\n}"
    },
    {
        "identifier": "819_1",
        "llm_output": "{\n    \"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_plug ?obj)\\n    (plugged_out ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (not (plugged_out ?obj))\\n    (plugged_in ?obj)\\n  )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_switch ?obj)\\n    (plugged_in ?obj)\\n    (off ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (not (off ?obj))\\n    (on ?obj)\\n  )\\n)\\n\"\n}"
    },
    {
        "identifier": "874_1",
        "llm_output": "{\n    \"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                     (plugged_out ?obj)\\n                     (grabbable ?obj)\\n                     (obj_next_to ?obj chair)\\n                     (walk_towards ?char chair)\\n                  )\\n  :effect (and\\n              (plugged_in ?obj)\\n              (walk_towards ?char computer)\\n           )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (inside_room ?char dining_room)\\n                  (obj_next_to ?obj chair)\\n               )\\n  :effect (and\\n              (next_to ?char ?obj)\\n              (facing ?char ?obj)\\n           )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (plugged_in ?obj)\\n                  (clean ?obj)\\n                  (lookable ?obj)\\n                  (facing ?char ?obj)\\n                )\\n  :effect (and\\n              (on ?obj)\\n              (off computer)\\n           )\\n)\"\n}"
    },
    {
        "identifier": "910_1",
        "llm_output": "{\n    \"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (grabbable ?obj)   ; the object must be grabbable\\n                (obj_next_to ?obj ?obj2)\\n                (plugged_out ?obj)   ; the object must be currently unplugged\\n                (next_to ?char ?obj)  ; the character must be next to the object\\n            )\\n  :effect (and\\n             (plugged_in ?obj)   ; the object is now plugged in\\n             (not (plugged_out ?obj))   ; the object is no longer unplugged\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (movable ?char)   ; the character must be movable\\n                (movable ?obj)   ; the object must be movable\\n                (next_to ?char ?obj)  ; the character must be next to the object\\n            )\\n  :effect (and\\n             (next_to ?char ?obj)   ; character is now next to the object\\n           )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (surfaces ?obj)   ; the surface of the object must be functional\\n                (movable ?char)   ; the character must be movable\\n                (has_switch ?obj)   ; the object must have a switch\\n                (obj_inside ?obj home_office)   ; the computer must be inside the home office\\n                (next_to ?char ?obj)  ; the character must be next to the computer\\n            )\\n  :effect (and\\n             (on ?obj)   ; the object is now switched on\\n             (not (off ?obj))   ; the object is no longer switched off\\n           )\\n)\"\n}"
    },
    {
        "identifier": "91_2",
        "llm_output": "{\n    \"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (not (plugged_in ?obj))  ; object is not already plugged in\\n                   (obj_next_to ?char ?obj)  ; character is next to the object\\n                   (has_plug ?obj)  ; object has a plug\\n                )\\n  :effect (plugged_in ?obj)  ; object is now plugged in\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (not (on_char ?obj ?char))  ; object is not on the character\\n                   (next_to ?char ?obj)  ; character is next to the object\\n                )\\n  :effect (on_char ?obj ?char)  ; object is now on the character\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (plugged_in ?obj)  ; object is already plugged in\\n                   (has_switch ?obj)  ; object has a switch\\n                   (next_to ?char ?obj)  ; character is next to the object\\n                   (lookable ?obj)  ; object can be looked at\\n                )\\n  :effect (and\\n             (on ?obj)  ; object is now turned on\\n             (not (plugged_in ?obj))  ; object is no longer plugged in\\n           )\\n)\"\n}"
    },
    {
        "identifier": "93_2",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (has_plug ?obj)\\n                  (plugged_out ?obj)\\n                  (next_to ?char ?obj)\\n              )\\n  :effect (and\\n               (not (plugged_out ?obj))\\n               (plugged_in ?obj)\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (has_switch ?obj)\\n                  (plugged_in ?obj)\\n                  (next_to ?char ?obj)\\n              )\\n  :effect (and\\n               (not (off ?obj))\\n               (on ?obj)\\n           )\\n)\\n\"}"
    },
    {
        "identifier": "962_1",
        "llm_output": "{\n\t\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (plugged_out ?obj)\\n                (has_plug ?obj)\\n                (obj_next_to ?char ?obj)\\n                )\\n  :effect (and\\n                (not (plugged_out ?obj))\\n                (plugged_in ?obj)\\n            )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (on ?obj)\\n                (has_switch ?obj)\\n                (obj_next_to ?char ?obj)\\n                )\\n  :effect (and\\n                (not (off ?obj))\\n                (on ?obj)\\n            )\\n)\"\n}"
    },
    {
        "identifier": "190_1",
        "llm_output": "{\n  \"output\": \"(:action switch_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect () \\n)\\n\\n(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition ()\\n  :effect () \\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect () \\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect () \\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect () \\n)\\n\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect () \\n)\\n\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect () \\n)\\n\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect () \\n)\"\n}"
    },
    {
        "identifier": "201_1",
        "llm_output": "{\n    \"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n                (movable ?obj1)\\n                (surfaces ?obj2)\\n                (next_to ?char ?obj2)\\n            )\\n  :effect (and\\n            (obj_ontop ?obj1 ?obj2)\\n        )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_switch ?obj)\\n                    (plugged_in ?obj)\\n                    (next_to ?char ?obj)\\n                )\\n  :effect (on ?obj)\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (grabbable ?obj)\\n                    (next_to ?char ?obj)\\n                )\\n  :effect (or\\n            (holds_rh ?char ?obj)\\n            (holds_lh ?char ?obj)\\n        )\\n)\\n\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (can_open ?obj)\\n                    (closed ?obj)\\n                    (next_to ?char ?obj)\\n                )\\n  :effect (and\\n                (not (closed ?obj))\\n                (open ?obj)\\n            )\\n)\\n\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (can_open ?obj)\\n                    (open ?obj)\\n                    (next_to ?char ?obj)\\n                )\\n  :effect (and\\n                (closed ?obj)\\n                (not (open ?obj))\\n            )\\n)\\n\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_plug ?obj)\\n                    (next_to ?char ?obj)\\n                    (plugged_out ?obj)\\n                )\\n  :effect (plugged_in ?obj)\\n)\"\n}"
    },
    {
        "identifier": "223_2",
        "llm_output": "{\"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n                  (containers ?obj2)\\n                  (obj_inside ?obj1 ?obj2)\\n                  (movable ?obj1)\\n              )\\n  :effect (obj_ontop ?obj1 ?obj2)\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (has_switch ?obj)\\n                  (off ?obj)\\n              )\\n  :effect (on ?obj)\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (grabbable ?obj)\\n  :effect (and\\n              (obj_next_to ?obj ?char)\\n              (not (obj_inside ?obj ?))\\n              (not (ontop ?char ?obj))\\n          )\\n)\\n\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (can_open ?obj)\\n  :effect (not (closed ?obj))\\n)\\n\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (can_open ?obj)\\n  :effect (closed ?obj)\\n)\\n\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (has_plug ?obj)\\n                  (plugged_out ?obj)\\n              )\\n  :effect (plugged_in ?obj)\\n)\\n\"}"
    },
    {
        "identifier": "327_2",
        "llm_output": "{\"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n                   (next_to ?char ?obj1)\\n                   (next_to ?char ?obj2)\\n                )\\n  :effect (ontop ?obj1 ?obj2)\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_switch ?obj)\\n                   (has_plug ?obj)\\n                   (plugged_out ?obj)\\n                )\\n  :effect (and\\n                (not (plugged_out ?obj))\\n                (on ?obj)\\n            )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)\\n                   (next_to ?char ?obj)\\n                )\\n  :effect (and\\n                (not (next_to ?char ?obj))\\n                (next_to ?char ?obj)\\n            )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (can_open ?obj)\\n  :effect (open ?obj)\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (can_open ?obj)\\n  :effect (closed ?obj)\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_plug ?obj)\\n                   (plugged_out ?obj)\\n                   (next_to ?char ?obj)\\n                )\\n  :effect (not (plugged_out ?obj))\\n)\\n\"}"
    },
    {
        "identifier": "383_1",
        "llm_output": "{\n    \"output\": \"(:action put_on\\n:parameters (?char - character ?obj1 - object ?obj2 - object)\\n:precondition (and\\n    (movable ?obj1)\\n    (movable ?obj2)\\n    (next_to ?char ?obj1)\\n    (next_to ?char ?obj2)\\n)\\n:effect (obj_ontop ?obj1 ?obj2)\\n)\\n\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (next_to ?char ?obj)\\n:effect ()\\n)\\n\\n(:action switch_on\\n:parameters (?char - character ?obj - object)\\n:precondition (and\\n    (has_switch ?obj)\\n    (closed ?obj)\\n    (next_to ?char ?obj)\\n)\\n:effect (on ?obj)\\n)\\n\\n(:action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and\\n    (grabbable ?obj)\\n    (next_to ?char ?obj)\\n)\\n:effect (and\\n    (when (holds_rh ?char ?obj)(not (holds_rh ?char ?obj)))\\n    (when (holds_lh ?char ?obj)(not (holds_lh ?char ?obj)))\\n\\n)\\n\\n(:action open\\n:parameters (?char - character ?obj - object)\\n:precondition (and\\n    (can_open ?obj)\\n    (closed ?obj)\\n    (next_to ?char ?obj)\\n)\\n:effect (not (closed ?obj))\\n)\\n\\n(:action close\\n:parameters (?char - character ?obj - object)\\n:precondition (and\\n    (can_open ?obj)\\n    (not (closed ?obj))\\n    (next_to ?char ?obj)\\n)\\n:effect (closed ?obj)\\n)\\n\\n(:action plug_in\\n:parameters (?char - character ?obj - object)\\n:precondition (and\\n    (has_plug ?obj)\\n    (has_switch ?obj)\\n    (plugged_out ?obj)\\n    (next_to ?char ?obj)\\n)\\n:effect (on ?obj)\\n)\"\n}"
    },
    {
        "identifier": "417_2",
        "llm_output": "{\n    \"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "487_1",
        "llm_output": "{\n\t\"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n               (sittable ?obj1)\\n               (sittable ?obj2)\\n               (next_to ?char ?obj1)\\n             )\\n  :effect (and\\n            (ontop ?char ?obj2)\\n            (not (ontop ?char ?obj1))\\n          )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_switch ?obj)\\n                    (inside_room ?char ?obj)\\n                    (not (on ?obj))\\n                 )\\n  :effect (and\\n              (on ?obj)\\n              (not (off ?obj))\\n           )\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (grabbable ?obj)\\n                  (next_to ?char ?obj)\\n                )\\n  :effect\\n)\\n\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (can_open ?obj)\\n                    (next_to ?char ?obj)\\n                    (closed ?obj)\\n                )\\n  :effect (and\\n              (not (closed ?obj))\\n              (open ?obj)\\n           )\\n)\\n\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (can_open ?obj)\\n                    (next_to ?char ?obj)\\n                    (open ?obj)\\n                )\\n  :effect (and\\n              (closed ?obj)\\n              (not (open ?obj))\\n           )\\n)\\n\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_plug ?obj)\\n                    (next_to ?char ?obj)\\n                    (not (plugged_in ?obj))\\n                )\\n  :effect (and\\n              (plugged_in ?obj)\\n              (not (plugged_out ?obj))\\n           )\\n)\"\n}"
    },
    {
        "identifier": "650_2",
        "llm_output": "{\n    \"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n                    (movable ?obj1)\\n                    (movable ?obj2)\\n                    (next_to ?char ?obj1)\\n                    (next_to ?char ?obj2)\\n                )\\n  :effect (obj_ontop ?obj1 ?obj2)\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_switch ?obj)\\n                    (closed ?obj)\\n                    (plugged_in ?obj)\\n                    (next_to ?char ?obj)\\n                )\\n  :effect (on ?obj)\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (grabbable ?obj)\\n                    (next_to ?char ?obj)\\n                )\\n  :effect (holds_lh ?char ?obj)\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (can_open ?obj)\\n                    (next_to ?char ?obj)\\n                    (closed ?obj)\\n                )\\n  :effect (and\\n                    (not (closed ?obj))\\n                    (on ?obj)\\n                )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (can_open ?obj)\\n                    (next_to ?char ?obj)\\n                    (on ?obj)\\n                )\\n  :effect (and\\n                    (closed ?obj)\\n                    (not (on ?obj))\\n                )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_plug ?obj)\\n                    (has_switch ?obj)\\n                    (next_to ?char ?obj)\\n                    (plugged_out ?obj)\\n                )\\n  :effect (plugged_in ?obj)\\n)\"\n}"
    },
    {
        "identifier": "783_1",
        "llm_output": "{\n    \"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n                  (containers ?obj2)\\n                  (movable ?obj1)\\n                  (not (obj_ontop ?obj1 ?obj2))\\n                  (next_to ?char ?obj2)\\n              )\\n  :effect (and\\n              (obj_ontop ?obj1 ?obj2)\\n              (not (next_to ?char ?obj2))\\n          )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_switch ?obj)\\n                    (plugged_in ?obj)\\n                    (on ?obj)\\n               )\\n  :effect\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (grabbable ?obj)\\n                    (next_to ?char ?obj)\\n               )\\n  :effect (and\\n               (when (hold_rh ?char ?obj)(not (hold_rh ?char ?obj)))\\n               (when (hold_lh ?char ?obj)(not (hold_lh ?char ?obj)))\\n           )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (can_open ?obj)\\n                    (closed ?obj)\\n               )\\n  :effect (and\\n              (not (closed ?obj))\\n           )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (can_open ?obj)\\n                    (not (closed ?obj))\\n               )\\n  :effect (and\\n               (closed ?obj)\\n           )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                     (has_plug ?obj)\\n                     (next_to ?char ?obj)\\n                    (plugged_out ?obj)\\n                )\\n  :effect (and\\n               (plugged_in ?obj)\\n           )\\n)\\n\"\n}"
    },
    {
        "identifier": "815_2",
        "llm_output": "{\n    \"output\": \"(:action switch_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (off ?obj))\\n  :effect () \\n)\\n\\n(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and (grabbable ?obj1) (next_to ?char ?obj1) (surfaces ?obj2))\\n  :effect (obj_ontop ?obj1 ?obj2) \\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect () \\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (off ?obj))\\n  :effect (on ?obj) \\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect () \\n)\\n\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (can_open ?obj) (closed ?obj))\\n  :effect (not (closed ?obj)) \\n)\\n\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (can_open ?obj) (not (closed ?obj)))\\n  :effect (closed ?obj) \\n)\\n\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_plug ?obj) (not (plugged_in ?obj)) (next_to ?char ?obj))\\n  :effect (plugged_in ?obj) \\n)\"\n}"
    },
    {
        "identifier": "826_1",
        "llm_output": "{\n    \"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n                  (clothes ?obj1)  ; the object must be a piece of clothing\\n                  (hangable ?obj2)  ; the target must be an object suitable for hanging clothes\\n                  (holds_rh ?char ?obj1)  ; character is holding clothes in the right hand\\n                  (next_to ?char ?obj2)  ; character is next to the hanging object\\n                )\\n  :effect (and\\n             (when (holds_rh ?char ?obj1)(not (holds_rh ?char ?obj1)))  ; if clothes are held in the right hand, they are no longer held\\n             (when (holds_lh ?char ?obj1)(not (holds_lh ?char ?obj1)))  ; if clothes are held in the left hand, they are no longer held\\n             (ontop ?obj1 ?obj2)  ; clothes are now hanging on the object\\n           )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (walkable ?obj)  ; The character should be able to walk on the object\\n                    (next_to ?char ?obj)    ; The character must be next to the object to walk towards\\n                )\\n  :effect (and\\n               (next_to ?char ?obj)         ; The character is now next to the chosen object\\n           )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_switch ?obj)  ; The object must have a switch to be turned on\\n                    (plugged_in ?obj)    ; The object must be plugged in to turn on\\n                    (next_to ?obj ?char)  ; The character must be next to the object to switch on\\n                )\\n  :effect (and\\n               (on ?obj)         ; The object is now turned on\\n           )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (grabbable ?obj)  ; The object must be grabbable\\n                    (next_to ?char ?obj)    ; The character must be next to the object\\n                )\\n  :effect (and\\n               (holding ?char ?obj)         ; The character is now holding the object\\n           )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (can_open ?obj)  ; The object should be openable\\n                    (next_to ?char ?obj)    ; The character must be next to the object\\n                )\\n  :effect (and\\n               (open ?obj)         ; The object is now open\\n           )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (can_open ?obj)  ; The object should be openable\\n                    (next_to ?char ?obj)    ; The character must be next to the object\\n                )\\n  :effect (and\\n               (closed ?obj)         ; The object is now closed\\n           )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_plug ?obj)  ; The object must have a plug for charging\\n                    (next_to ?char ?obj)    ; The character must be next to the object to plug in\\n                )\\n  :effect (and\\n               (plugged_in ?obj)         ; The object is now plugged in\\n           )\\n)\"\n}"
    },
    {
        "identifier": "856_1",
        "llm_output": "{\n    \"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n                    (clothes ?obj1)\\n                    (hangable ?obj2)\\n                    (holds_rh ?char ?obj1) \\n                    (next_to ?char ?obj2)\\n                )\\n  :effect (and\\n                    (when (holds_rh ?char ?obj1) (not (holds_rh ?char ?obj1)))\\n                    (when (holds_lh ?char ?obj1) (not (holds_lh ?char ?obj1)))\\n                    (ontop ?obj1 ?obj2)\\n                )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (plugged_in ?obj))\\n  :effect (on ?obj)\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (on_char ?obj ?char)\\n)\\n\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (can_open ?obj)\\n  :effect (open ?obj)\\n)\\n\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (can_open ?obj)\\n  :effect (closed ?obj)\\n)\\n\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_plug ?obj) (next_to ?char ?obj) (plugged_out ?obj))\\n  :effect (plugged_in ?obj)\\n)\"\n}"
    },
    {
        "identifier": "911_1",
        "llm_output": "{\"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n    (movable ?obj1)\\n    (containers ?obj2)\\n    (grabbable ?obj1)\\n    (grabbable ?obj2)\\n  )\\n  :effect (ontop ?obj1 ?obj2)\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (closed ?obj) (plugged_in ?obj))\\n  :effect (on ?obj)\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (or (holds_rh ?char ?obj) (holds_lh ?char ?obj))\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (can_open ?obj) (closed ?obj))\\n  :effect (not (closed ?obj))\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (can_open ?obj) (not (closed ?obj)))\\n  :effect (closed ?obj)\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_plug ?obj) (plugged_out ?obj) (next_to ?char ?obj))\\n  :effect (plugged_in ?obj)\\n)\\n\"}"
    },
    {
        "identifier": "1027_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (body_part ?char)\\n    (surfaces ?obj)\\n    (sittable ?obj)\\n    (inside_room ?obj bedroom)\\n    (inside_room ?char dining_room)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (sittable ?obj)\\n    (ontop ?char ?obj)\\n  )\\n  :effect (lying ?char)\\n)\"\n}"
    },
    {
        "identifier": "181_1",
        "llm_output": "{\"output\":\"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect () \\n)\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect () \\n)\"}"
    },
    {
        "identifier": "244_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\"}"
    },
    {
        "identifier": "269_2",
        "llm_output": "{\n\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (not (next_to ?char - character ?obj - object)))\\n)\\n\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (inside_room ?obj - object) (sittable ?obj - object))\\n  :effect (and (lying ?char - character) (ontop ?char - character ?obj - object))\\n)\\n\"\n}"
    },
    {
        "identifier": "509_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (or\\n                (next_to ?char ?obj)  ; character should be next to the object to walk towards\\n                (and\\n                    (inside_room ?char ?obj)  ; character is inside the room that the object is in\\n                    (movable ?obj)  ; object should be movable\\n                )\\n            )\\n  :effect (and\\n             (next_to ?char ?obj)  ; character is now next to the object\\n           )\\n)\\n\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (sittable ?obj)  ; object should be sittable\\n                   (next_to ?char ?obj)  ; character should be next to the object to lie\\n                )\\n  :effect (and\\n             (lying ?char)  ; character is now lying\\n             (ontop ?char ?obj)  ; character is now on top of the object\\n           )\\n)\"\n}"
    },
    {
        "identifier": "875_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (sittable ?obj) ; The character should be able to sit on the object\\n    (next_to ?char ?obj) ; The character should be next to the object\\n  )\\n  :effect (and\\n    (next_to ?char ?obj) ; The character moves towards the object\\n  )\\n)\\n\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (lieable ?obj) ; The character should be able to lie on the object\\n    (next_to ?char ?obj) ; The character should be next to the object\\n  )\\n  :effect (and\\n    (lying ?char) ; The character is in a lying position\\n    (ontop ?char ?obj) ; The character is on top of the object\\n  )\\n)\"\n}"
    },
    {
        "identifier": "1035_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "113_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition ((next_to ?char ?obj))\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "12_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "137_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ())\\n\"}"
    },
    {
        "identifier": "203_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (next_to ?char ?obj)\\n    )\\n  :effect (and\\n        (next_to ?char ?obj)\\n    )\\n)\"}"
    },
    {
        "identifier": "220_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (movable ?obj)  ; object must be movable\\n                  (next_to ?char ?obj)  ; character must be next to the object\\n                )\\n  :effect (and\\n             (next_to ?char ?obj)  ; character is now next to the object\\n           )\\n)\"}"
    },
    {
        "identifier": "242_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ((next_to ?char ?obj))\\n)\"\n}"
    },
    {
        "identifier": "279_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\"}"
    },
    {
        "identifier": "287_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ())\"}"
    },
    {
        "identifier": "292_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ((next_to ?char ?obj))\\n)\"}"
    },
    {
        "identifier": "297_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ((next_to ?char ?obj))\\n)\"\n}"
    },
    {
        "identifier": "381_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\"}"
    },
    {
        "identifier": "388_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (movable ?obj) (next_to ?char ?obj))\\n  :effect (next_to ?char ?obj)\\n)\"}"
    },
    {
        "identifier": "38_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ())\\n\"}"
    },
    {
        "identifier": "429_1",
        "llm_output": "{\"output\":\"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (inside ?char ?obj) (not (next_to ?char ?obj)))\\n)\"}"
    },
    {
        "identifier": "437_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj) \\n  :effect ()\\n)\"}"
    },
    {
        "identifier": "451_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and \\n                    (movable ?obj)  ; The object must be movable\\n                    (next_to ?char ?obj) ; The character must be next to the object\\n                )\\n  :effect (\\n              (next_to ?char ?obj)  ; The character is now next to the object\\n          )\\n)\\n\"}"
    },
    {
        "identifier": "469_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "479_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\"\n}"
    },
    {
        "identifier": "502_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\"}"
    },
    {
        "identifier": "612_1",
        "llm_output": "{\n\t\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and\\n             (next_to ?char ?obj)\\n           )\\n)\"\n}"
    },
    {
        "identifier": "856_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ((next_to ?char ?obj))\\n)\"}"
    },
    {
        "identifier": "384_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (inside_room ?obj ?room)\\n                    (next_to ?char ?obj)\\n                  )\\n  :effect (and\\n             (not (inside_room ?char ?room))\\n             (inside_room ?char ?obj)\\n           )\\n)\\n\\n(:action walk_into\\n  :parameters (?char - character ?room - object)\\n  :precondition (and\\n                    (next_to ?char ?room)\\n                  )\\n  :effect (inside_room ?char ?room)\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_switch ?obj)\\n                    (plugged_in ?obj)\\n                  )\\n  :effect (on ?obj)\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (grabbable ?obj)\\n                    (next_to ?char ?obj)\\n                  )\\n  :effect (and\\n             (not (next_to ?char ?obj))\\n             (hold_rh ?char ?obj)\\n           )\\n)\\n\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (facing ?char ?obj)\\n  :effect ()\\n)\\n\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_plug ?obj)\\n                    (next_to ?char ?obj)\\n                  )\\n  :effect (plugged_in ?obj)\\n)\\n\"}"
    },
    {
        "identifier": "540_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards :parameters (?char - character ?obj - object) :precondition (next_to ?char ?obj) :effect (and (next_to ?char ?obj)))(:action grab :parameters (?char - character ?obj - object) :precondition (and (grabbable ?obj) (next_to ?char ?obj)) :effect (and (holds_rh ?char ?obj)))(:action turn_to :parameters (?char - character ?obj - object) :precondition (and (facing ?char ?obj)) :effect ())\"\n}"
    },
    {
        "identifier": "60_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (holds_rh ?char ?obj) (next_to ?char ?obj))\\n  :effect (and (not (next_to ?char ?char)))\\n)\\n\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (exists (?x - object) (facing ?char ?x)))\\n  :effect (and (forall (?x - object) (not (facing ?char ?x))) (facing ?char ?obj))\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (next_to ?char ?obj) (off ?obj))\\n  :effect (on ?obj)\\n)\\n\"\n}"
    },
    {
        "identifier": "71_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (facing ?char ?obj) (next_to ?char ?obj))\\n  :effect (and (not (next_to ?char ?obj))\\n               (not (facing ?char ?obj))\\n               (next_to ?char ?obj)\\n               (facing ?char ?obj))\\n)\\n(:action walk_into\\n  :parameters (?char - character ?room - object)\\n  :precondition (and (inside_room ?room ?char) (sittable ?room))\\n  :effect (inside_room ?room ?char)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (plugged_in ?obj) (inside_room ?char ?obj) (lookable ?obj))\\n  :effect (on ?obj)\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (and (not (next_to ?char ?obj))\\n               (holds_rh ?char ?obj))\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (facing ?char ?obj)\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_plug ?obj) (next_to ?char ?obj) (lookable ?obj))\\n  :effect (plugged_in ?obj)\\n)\\n\"}"
    },
    {
        "identifier": "7_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (inside_room ?obj ?room)\\n                  (next_to ?char ?obj)\\n                )\\n  :effect (and\\n              (inside_room ?char ?room)\\n              (next_to ?char ?obj)\\n            )\\n)\\n\\n(:action walk_into\\n  :parameters (?char - character ?room - object)\\n  :precondition (and\\n                  (inside_room ?room ?dest)\\n                  (next_to ?char ?dest)\\n                )\\n  :effect (inside_room ?char ?room)\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (off ?obj))\\n  :effect (on ?obj)\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (and (holds_rh ?char ?obj) (not (next_to ?char ?obj)))\\n)\\n\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (facing ?char ?obj)\\n)\\n\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_plug ?obj) (plugged_out ?obj) (next_to ?char ?obj))\\n  :effect (plugged_in ?obj)\\n)\"}"
    },
    {
        "identifier": "1070_1",
        "llm_output": "{\"output\":\"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                     (grabbable ?obj)  ; the obj must be grabbable\\n                     (next_to ?char ?obj)  ; the char must be next to obj\\n                   )\\n  :effect (and\\n             (holds_rh ?char ?obj)  ; char is now holding obj\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)  ; char must walk towards obj\\n  :effect ()\\n)\"}"
    },
    {
        "identifier": "313_2",
        "llm_output": "{\n  \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (grabbable ?obj)\\n                  (next_to ?char ?obj)\\n              )\\n  :effect (and\\n              (holds_lh ?char ?obj)\\n          )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "689_1",
        "llm_output": "{\n\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (grabbable ?obj)\\n                    (obj_next_to ?obj ?char)\\n                  )\\n  :effect (and\\n             (holds_lh ?char ?obj)\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "718_1",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)  ; The object must be grabbable\\n                   (obj_next_to ?obj ?char)  ; The object must be next to the character\\n                )\\n  :effect (and\\n             (holds_rh ?char ?obj)  ; The character is now holding the object\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)  ; The character is now next to the destination\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "1049_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (next_to ?char ?obj))\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (plugged_in ?obj) (next_to ?char ?obj) (closed ?obj))\\n  :effect (and (not (off ?obj)) (on ?obj))\\n)\"}"
    },
    {
        "identifier": "113_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\"}"
    },
    {
        "identifier": "161_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (inside ?char ?obj) (movable ?obj))\\n  :effect (next_to ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (inside ?char ?obj) (has_switch ?obj) (plugged_in ?obj) (on ?obj) (closed ?obj))\\n  :effect (and (not (closed ?obj)) (on ?obj) (not (off ?obj)))\\n)\\n\"}"
    },
    {
        "identifier": "173_1",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (surfaces ?obj)  ; The object should have surfaces\\n                   (inside_room ?obj ?room)  ; The object should be inside a room\\n                   (has_plug ?obj)  ; The object should have a plug\\n                   (plugged_out ?obj)  ; The object should be unplugged\\n                   (next_to ?char ?obj)  ; The character should be next to the object\\n                )\\n  :effect (and\\n             (plugged_in ?obj)  ; The object is now plugged in\\n             (not (plugged_out ?obj))  ; The object is not unplugged anymore\\n           )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_switch ?obj)  ; The object should have a switch\\n                   (plugged_in ?obj)  ; The object should be plugged in\\n                   (off ?obj)  ; The object should be turned off\\n                   (next_to ?char ?obj)  ; The character should be next to the object \\n                )\\n  :effect (and\\n             (on ?obj)  ; The object is now turned on\\n             (not (off ?obj))  ; The object is not turned off anymore\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)  ; The character should be next to the object\\n  :effect ()\\n)\\n\\n(:action standup\\n  :parameters (?char - character)\\n  :precondition (sitting ?char)  ; The character should be sitting\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "23_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside_room ?obj bathroom)\\n    (movable ?obj)\\n    (clean ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_switch ?obj)\\n    (plugged_in ?obj)\\n    (obj_inside ?obj home_office)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n  )\\n)\"\n}"
    },
    {
        "identifier": "263_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (movable ?obj)\\n                   (inside_room ?obj ?room)\\n                   (movable ?char)\\n                   (inside ?char ?room)\\n                   (obj_next_to ?obj ?char)\\n               )\\n  :effect (and\\n             (next_to ?char ?obj)\\n           )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_switch ?obj)\\n                   (plugged_in ?obj)\\n                   (closed ?obj)\\n                   (movable ?char)\\n                   (inside ?char ?room)\\n                   (on ?char ?obj)\\n               )\\n  :effect (and\\n             (on ?obj)\\n             (not (off ?obj))\\n           )\\n)\\n\"}"
    },
    {
        "identifier": "305_2",
        "llm_output": "{\n\t\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and\\n             (not (inside_room ?char ?obj))\\n             (inside_room ?char ?obj)\\n           )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_switch ?obj)\\n                   (obj_next_to ?char ?obj)\\n                 )\\n  :effect (and\\n             (on ?obj)\\n             (not (off ?obj))\\n           )\\n)\"\n}"
    },
    {
        "identifier": "363_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (next_to ?char ?obj))\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (holds_rh ?char ?obj))\\n  :effect (and (on ?obj) (not (off ?obj)))\\n)\\n\"}"
    },
    {
        "identifier": "385_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (next_to ?char ?obj)\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (next_to ?char ?obj) (plugged_in ?obj) (closed ?obj) (not (on ?obj)))\\n  :effect (and (on ?obj))\\n)\"\n}"
    },
    {
        "identifier": "403_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\"}"
    },
    {
        "identifier": "415_1",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (grabbable ?obj)\\n                    (next_to ?char ?obj))\\n  :effect (and\\n              (has_item ?char ?obj)\\n              (not (grabbable ?obj)))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n(:action put_on_character\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_item ?char ?obj)\\n                    (person ?char))\\n  :effect (on_char ?obj ?char)\\n)\"\n}"
    },
    {
        "identifier": "462_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (obj_next_to ?char ?obj)\\n  :effect (and (next_to ?char ?obj) (not (inside_room ?char ?obj)))\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (off ?obj) (plugged_in ?obj) (obj_next_to ?char ?obj))\\n  :effect (and (on ?obj) (not (off ?obj)))\\n)\"\n}"
    },
    {
        "identifier": "463_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (inside_room ?obj ?room)\\n                  (movable ?obj)\\n                  (next_to ?char ?obj)\\n              )\\n  :effect (and\\n               (next_to ?char ?obj)\\n           )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (can_open ?obj)\\n                  (has_switch ?obj)\\n                  (exists (?x - object) (inside_room ?x ?room))\\n                  (exists (?y - object) (plugged_in ?y))\\n                  (next_to ?char ?obj)\\n              )\\n  :effect (and\\n               (on ?obj)\\n               (plugged_in ?obj)\\n           )\\n)\"\n}"
    },
    {
        "identifier": "503_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (obj_next_to ?char ?obj)\\n  :effect (and (next_to ?char ?obj))\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (grabbable ?obj) (closed ?obj) (on ?obj))\\n  :effect (and (not (closed ?obj)) (on ?obj) (on ?obj))\\n)\"}"
    },
    {
        "identifier": "59_1",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (obj_next_to ?obj ?char))\\n  :effect (and (on_char ?obj ?char))\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (inside_room ?char ?obj))\\n  :effect ((next_to ?char ?obj))\\n)\\n\\n(:action put_on_character\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (clothes ?obj) (movable ?obj) (inside_room ?char ?obj))\\n  :effect (on_char ?obj ?char)\\n)\\n\"}"
    },
    {
        "identifier": "737_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (obj_inside ?obj ?room) (plugged_in ?obj) (closed ?obj))\\n  :effect (on ?obj)\\n)\\n\"}"
    },
    {
        "identifier": "773_1",
        "llm_output": "{\n\t\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (next_to ?char ?obj))\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (closed ?obj) (plugged_in ?obj) (next_to ?char ?obj))\\n  :effect (and (not (closed ?obj)) (on ?obj))\\n)\\n\"\n}"
    },
    {
        "identifier": "910_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside_room ?obj bedroom)\\n    (movable ?obj)\\n    (surfaces ?obj)\\n  )\\n  :effect (next_to ?char ?obj)\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_switch ?obj)\\n    (plugged_in ?obj)\\n    (on ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (on ?obj)\\n)\\n\"}"
    },
    {
        "identifier": "953_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (movable ?obj)\\n      (surfaces ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n        (next_to ?char ?obj)\\n  )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (has_switch ?obj)\\n      (closed ?obj)\\n      (plugged_in ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n        (on ?obj)\\n        (not (off ?obj))\\n  )\\n)\"}"
    },
    {
        "identifier": "1057_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (not (next_to ?char ?obj)) (next_to ?char ?obj))\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (facing ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (has_switch ?obj) (on ?obj))\\n)\"\n}"
    },
    {
        "identifier": "117_1",
        "llm_output": "{\n  \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (ontop ?char ?obj) (sittable ?obj))\\n  :effect (and (next_to ?char ?obj))\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (lookable ?obj))\\n  :effect (and (facing ?char ?obj))\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj) (off ?obj))\\n  :effect (and (on ?obj) (not (off ?obj)))\\n)\"\n}"
    },
    {
        "identifier": "134_1",
        "llm_output": "{\n    \"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_plug ?obj)\\n    (obj_next_to ?char ?obj)\\n    (plugged_out ?obj)\\n  )\\n  :effect (plugged_in ?obj)\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (facing ?char ?obj)\\n  )\\n  :effect\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_switch ?obj)\\n    (obj_next_to ?char ?obj)\\n    (off ?obj)\\n  )\\n  :effect (on ?obj)\\n)\"\n}"
    },
    {
        "identifier": "170_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (clothes ?clothes) (hangable ?hang_obj) (holds_rh ?char ?clothes) (next_to ?char ?hang_obj))\\n  :effect (and (when (holds_rh ?char ?clothes)(not (holds_rh ?char ?clothes))) (when (holds_lh ?char ?clothes)(not (holds_lh ?char ?clothes))) (ontop ?clothes ?hang_obj))\\n)\\n\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (facing ?char ?obj)\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (facing ?char ?obj) (on ?obj) (plugged_in ?obj))\\n  :effect (on ?obj)\\n)\\n\"\n}"
    },
    {
        "identifier": "197_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (obj_next_to ?char ?obj)  ; character must be next to object\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)  ; character is now next to the object\\n  )\\n)\\n\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (sittable ?obj)  ; the object must be sittable\\n      (obj_next_to ?char ?obj)  ; character must be next to object\\n  )\\n  :effect (and\\n      (facing ?char ?obj)  ; character is now facing the object\\n  )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (has_switch ?obj)  ; the object must have a switch to be turned on\\n      (next_to ?char ?obj)  ; character must be next to object\\n  )\\n  :effect (and\\n      (on ?obj)  ; the object is now turned on\\n  )\\n)\\n\"\n}"
    },
    {
        "identifier": "21_2",
        "llm_output": "{\n  \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (movable ?char)\\n                    (obj_next_to ?char ?obj)\\n                )\\n  :effect (and\\n                    (next_to ?char ?obj)\\n                )\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (movable ?char)\\n                    (next_to ?char ?obj)\\n                    (facing ?char ?obj)\\n                )\\n  :effect (and\\n                    (facing ?char ?obj)\\n                )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (movable ?char)\\n                    (has_switch ?obj)\\n                    (obj_next_to ?char ?obj)\\n                )\\n  :effect (and\\n                    (on ?obj)\\n                )\\n)\"\n}"
    },
    {
        "identifier": "225_2",
        "llm_output": "{\n  \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (inside_room ?obj home_office) (next_to ?char ?obj))\\n  :effect (and (next_to ?char ?obj) (facing ?char ?obj))\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (lookable ?obj))\\n  :effect (facing ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (next_to ?char ?obj) (lookable ?obj))\\n  :effect (on ?obj)\\n)\"\n}"
    },
    {
        "identifier": "259_1",
        "llm_output": "{\n  \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (inside ?char ?obj))\\n  :effect ()\\n)(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (inside ?char ?obj))\\n  :effect ()\\n)(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (inside ?char ?obj) (has_switch ?obj) (off ?obj))\\n  :effect (and (on ?obj) (not (off ?obj)))\\n)\"\n}"
    },
    {
        "identifier": "307_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (not (next_to ?char ?obj)) (next_to ?char ?obj))\\n)\\n\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (inside ?char ?obj) (lookable ?obj))\\n  :effect ()\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (obj_inside ?obj ?room) (plugged_in ?obj))\\n  :effect (on ?obj)\\n)\"\n}"
    },
    {
        "identifier": "329_1",
        "llm_output": "{\n\t\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (inside ?char ?obj)\\n                    (sittable ?obj)\\n                )\\n  :effect (next_to ?char ?obj)\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (facing ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_switch ?obj)\\n                    (in-hand ?char ?obj)\\n                )\\n  :effect (on ?obj)\\n)\\n\"\n}\nIn the output string, actions walk_towards, turn_to, and switch_on are defined with their preconditions and effects in the PDDL format based on the problem and domain description provided."
    },
    {
        "identifier": "342_2",
        "llm_output": "{\"output\":\"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (not (next_to ?char ?obj)) (next_to ?char ?obj))\\n)\\n\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (facing ?char ?obj))\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj) (off ?obj))\\n  :effect (and (on ?obj) (not (off ?obj)))\\n)\\n\"}"
    },
    {
        "identifier": "377_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (inside ?char dining_room)\\n                   (lookable ?obj)\\n               )\\n  :effect (and\\n             (next_to ?char ?obj)\\n         )\\n)\\n\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (inside ?char dining_room)\\n                   (lookable ?obj)\\n               )\\n  :effect (and\\n             (facing ?char ?obj)\\n         )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (inside ?char home_office)\\n                   (has_switch ?obj)\\n                   (plugged_in ?obj)\\n                   (off ?obj)\\n                   (clean ?obj)\\n                   (lookable ?obj)\\n               )\\n  :effect (and\\n             (on ?obj)\\n         )\\n)\"\n}"
    },
    {
        "identifier": "383_2",
        "llm_output": "{\n  \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (sittable ?obj)\\n                    (movable ?obj)\\n                    (next_to ?char ?obj)\\n                )\\n  :effect (next_to ?char ?obj)\\n)\\n\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (exists (?x - object) (obj_next_to ?char ?x))\\n                    (facing ?char ?obj)\\n                )\\n  :effect (facing ?char ?obj)\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_switch ?obj)\\n                    (has_plug ?obj)\\n                    (plugged_in ?obj)\\n                    (facing ?char ?obj)\\n                )\\n  :effect (on ?obj)\\n)\"\n}"
    },
    {
        "identifier": "411_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (sittable ?obj)\\n                  (next_to ?char ?obj)\\n              )\\n  :effect (next_to ?char ?obj)\\n)\\n\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (facing ?char ?obj)\\n                  (next_to ?char ?obj)\\n              )\\n  :effect (facing ?char ?obj)\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (has_switch ?obj)\\n                  (on ?obj)\\n                  (plugged_in ?obj)\\n                  (next_to ?char ?obj)\\n              )\\n  :effect (on ?obj)\\n)\" \n}"
    },
    {
        "identifier": "454_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (next_to ?char ?obj)  ; the character must be next to the object\\n               )\\n  :effect (and\\n               (next_to ?char ?obj)  ; the character is now next to the object\\n           )\\n)\\n\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (next_to ?char ?obj)  ; the character must be next to the object\\n               )\\n  :effect (and\\n               (facing ?char ?obj)  ; the character is now facing the object\\n           )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_switch ?obj)  ; the object must have a switch\\n                   (on ?obj)          ; the object must be turned on\\n               )\\n  :effect (and\\n                (on ?obj)  ; the object is now turned on\\n           )\\n)\"\n}"
    },
    {
        "identifier": "459_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (inside_room ?obj home_office) (inside character dining_room))\\n  :effect (next_to ?char ?obj)\\n)\\n\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (facing ?char ?obj))\\n  :effect ()\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (hold_rh ?obj) (has_switch ?obj) (lookable ?obj))\\n  :effect (on ?obj)\\n)\\n\"\n}"
    },
    {
        "identifier": "548_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\"}"
    },
    {
        "identifier": "595_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (next_to ?char ?obj))\\n  :effect (and (not (next_to ?char ?obj)) (inside ?char ?obj))\\n)\\n\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (facing ?char ?obj)\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (next_to ?char ?obj))\\n  :effect (and (on ?obj) (on ?obj) (not (off ?obj)))\\n)\"\n}"
    },
    {
        "identifier": "684_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (inside ?char dining_room)\\n                  (next_to ?char ?obj)\\n              )\\n  :effect (and\\n            (next_to ?char ?obj)\\n          )\\n)\\n\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (inside ?char dining_room)\\n                  (next_to ?char ?obj)\\n              )\\n  :effect (facing ?char ?obj)\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (inside ?char dining_room)\\n                  (on ?obj)\\n                  (plugged_in ?obj)\\n                  (has_switch ?obj)\\n                  (facing ?char ?obj)\\n              )\\n  :effect (on ?obj)\\n)\"\n}"
    },
    {
        "identifier": "74_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (sittable ?obj)\\n                (on ?obj)\\n                (obj_next_to ?char ?obj)\\n            )\\n  :effect (and\\n             (next_to ?char ?obj)\\n           )\\n)\\n\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (facing ?char ?obj)\\n              )\\n  :effect (and\\n               (facing ?char ?obj)\\n             )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_switch ?obj)\\n                   (off ?obj)\\n                   (facing ?char ?obj)\\n               )\\n  :effect (and\\n                (on ?obj)\\n                (not (off ?obj))\\n              )\\n)\"\n}"
    },
    {
        "identifier": "806_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (not (inside_room ?char ?obj)) (inside_room ?char ?obj))\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (facing ?char ?obj)\\n  :effect (and (not (facing ?char ?obj)) (facing ?char ?obj))\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (has_switch ?obj)\\n  :effect (and (off ?obj) (on ?obj))\\n)\"}"
    },
    {
        "identifier": "98_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (sittable ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (lookable ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (facing ?char ?obj)\\n  )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_switch ?obj)\\n    (next_to ?char ?obj)\\n    (plugged_in ?obj)\\n    (off ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "1064_1",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)\\n                   (next_to ?char ?obj))\\n  :effect (and\\n             (holds_rh ?char ?obj)\\n             (not (next_to ?char ?obj)))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\"\n}"
    },
    {
        "identifier": "156_1",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (grabbable ?obj) ; The object must be grabbable\\n  :effect (holds_rh ?char ?obj)     ; The character is now holding the object\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)  ; The character must be next to the object\\n  :effect (next_to ?char ?obj)       ; The character is now next to the object\\n)\"\n}"
    },
    {
        "identifier": "171_2",
        "llm_output": "{\"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (can_open ?obj)\\n                   (next_to ?char ?obj)\\n               )\\n  :effect (open ?obj)\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)\\n                   (next_to ?char ?obj)\\n               )\\n  :effect (and\\n             (when (grabbable ?obj) (not (grabbable ?obj)))\\n             (holds_rh ?char ?obj)\\n         )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "175_2",
        "llm_output": "{\n  \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect ((when (grabbable ?obj)(not (grabbable ?obj))) (when (next_to ?char ?obj)(not (next_to ?char ?obj))) (holds_lh ?char ?obj))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\\n\"\n}"
    },
    {
        "identifier": "181_2",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (grabbable ?obj))\\n  :effect (and (holds_rh ?char ?obj))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (next_to ?char ?obj))\\n)\"\n}"
    },
    {
        "identifier": "26_1",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (grabbable ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (grabbable ?obj)\\n    (holds_rh ?char ?obj)\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\\n\"\n}"
    },
    {
        "identifier": "286_2",
        "llm_output": "{\n\"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (can_open ?obj)\\n                   (next_to ?char ?obj)\\n               )\\n  :effect (and\\n                (open ?obj)\\n            )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)\\n                   (next_to ?char ?obj)\\n               )\\n  :effect (and\\n                (holds_rh ?char ?obj)\\n            )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "291_1",
        "llm_output": "{\n\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (grabbable ?obj)\\n                    (next_to ?char ?obj))\\n  :effect (and\\n                    (hold_rh ?char ?obj))\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and\\n                    (facing ?char ?obj)\\n                    (next_to ?char ?obj))\\n)\\n\"\n}"
    },
    {
        "identifier": "317_2",
        "llm_output": "{\n    \"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (can_open ?obj) (next_to ?char ?obj) (closed ?obj))\\n  :effect (and (not (closed ?obj)) (open ?obj))\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj) (not (obj_inside ?obj ?x)))\\n  :effect (and (not (grabbable ?obj)) (holds_rh ?char ?obj))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "488_2",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)\\n                   (next_to ?char ?obj)\\n               )\\n  :effect (and\\n               (holds_rh ?char ?obj)\\n           )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect()\\n)\"\n}"
    },
    {
        "identifier": "510_1",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (grabbable ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj)\\n  )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "528_1",
        "llm_output": "{\n\t\"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (can_open ?obj) (next_to ?char ?obj) (closed ?obj) (has_switch ?obj) (plugged_in ?obj))\\n  :effect (and (not (closed ?obj)) (on ?obj))\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj) (movable ?obj))\\n  :effect (and (holds_rh ?char ?obj))\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "532_1",
        "llm_output": "{\"output\":\"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (movable ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj)\\n  )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\"}"
    },
    {
        "identifier": "589_1",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (movable ?obj)\\n                   (inside_room ?obj ?char)\\n                   (grabbable ?obj)\\n                   (next_to ?obj ?char)\\n                 )\\n  :effect (and\\n              (holds_rh ?char ?obj)\\n            )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (movable ?char)\\n                   (movable ?obj)\\n                   (next_to ?char ?obj)\\n                 )\\n  :effect (and\\n              (next_to ?char ?obj)\\n            )\\n)\\n\"}"
    },
    {
        "identifier": "600_1",
        "llm_output": "{\n  \"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (can_open ?obj) (next_to ?char ?obj) (closed ?obj))\\n  :effect (and (not (closed ?obj)) (open ?obj))\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (and (holds_rh ?char ?obj))\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "662_1",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (and (holds_rh ?char ?obj))\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\\n\"}"
    },
    {
        "identifier": "688_1",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (grabbable ?obj)  ; the object must be grabbable\\n                  (next_to ?char ?obj)  ; character must be next to the object\\n              )\\n  :effect (and\\n              (holds_rh ?char ?obj)  ; character now holds the object with the right hand\\n              (holds_lh ?char ?obj)  ; character now holds the object with the left hand\\n            )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)  ; character must be next to the object\\n  :effect (next_to ?char ?obj)  ; character is now next to the object\\n)\\n\"}"
    },
    {
        "identifier": "787_1",
        "llm_output": "{\n  \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)\\n                   (next_to ?char ?obj)\\n                )\\n  :effect (and\\n             (holds_rh ?char ?obj)\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "788_1",
        "llm_output": "{\"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (can_open ?obj) (obj_inside ?obj ?char))\\n  :effect (and (not (closed ?obj)) (open ?obj))\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (obj_next_to ?obj ?char))\\n  :effect (and (on_char ?obj ?char) (not (obj_next_to ?obj ?char)))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect ()\\n)\"}"
    },
    {
        "identifier": "814_1",
        "llm_output": "{\"output\":\"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (and (can_open ?obj) (obj_next_to ?obj ?char)) (not (open ?obj)))\\n  :effect (and (open ?obj) (not (closed ?obj)))\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (and (holds_rh ?char ?obj) (not (next_to ?char ?obj)))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (obj_next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\\n\"}"
    },
    {
        "identifier": "850_2",
        "llm_output": "{\"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (can_open ?obj) (next_to ?char ?obj) (not (open ?obj)) (closed ?obj))\\n  :effect (and (not (closed ?obj)) (open ?obj))\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (and (holds_rh ?char ?obj))\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "861_2",
        "llm_output": "{\n  \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)  ; The object must be grabbable\\n                   (next_to ?char ?obj)  ; The character must be next to the object\\n               )\\n  :effect (and\\n               (obj_inside ?obj ?char)  ; The object is now inside the character\\n               (not (next_to ?char ?obj))  ; The character is no longer next to the object\\n           )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)  ; The character must be next to the object\\n  :effect ()  ; No effect for walking towards\\n)\"\n}"
    },
    {
        "identifier": "878_2",
        "llm_output": "{\n\t\"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (containers ?obj)\\n                   (obj_next_to ?obj ?obj1)\\n                   (can_open ?obj)\\n                   (closed ?obj)\\n                   (next_to ?char ?obj)  ; Ensure character is next to the object\\n               )\\n  :effect (and\\n               (not (closed ?obj))  ; The object is now open\\n           )\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)\\n                   (next_to ?char ?obj)  ; Ensure character is next to the object to grab\\n               )\\n  :effect (and\\n               (when (next_to ?char ?other_obj)(not (next_to ?char ?other_obj)))  ; Object is no longer next to character, unless it is another object\\n               (when (ontop ?obj1 ?obj)(not (ontop ?obj1 ?obj)))  ; Object is no longer on top of another object\\n               (holds ?char ?obj)\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)  ; Ensure character is next to the object\\n  :effect ()  ; Walking towards the object has no specific effect\\n)\"\n}"
    },
    {
        "identifier": "1073_1",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (grabbable ?obj)\\n        (next_to ?char ?obj)    ; The character must be next to the object\\n    )\\n  :effect (and\\n        (holds_rh ?char ?obj)         ; The character is now holding the object\\n    )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (movable ?char)\\n        (next_to ?char ?obj)    ; The character must be next to the object\\n    )\\n  :effect (and\\n        (next_to ?char ?obj)         ; The character has reached the object\\n    )\\n)\"\n}"
    },
    {
        "identifier": "1088_1",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (grabbable ?obj)\\n                    (next_to ?char ?obj)\\n                )\\n  :effect (and\\n                 (hold_rh ?char ?obj)\\n              )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "15_2",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (and (hold_rh ?char ?obj))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "163_1",
        "llm_output": "{\"output\":\"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (grabbable ?obj)\\n                    (next_to ?char ?obj)\\n                )\\n  :effect (and\\n                (holds_rh ?char ?obj)\\n            )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "16_2",
        "llm_output": "{\n\t\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (obj_next_to ?char ?obj))\\n  :effect (and (not (obj_next_to ?char ?obj)) (holds_rh ?char ?obj))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "192_1",
        "llm_output": "{\n  \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)\\n                   (next_to ?char ?obj)\\n                )\\n  :effect (and\\n             (holds_rh ?char ?obj)\\n           )\\n)(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "208_2",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (grabbable ?obj)  ; Ensure the object is grabbable\\n                (next_to ?char ?obj)  ; Character must be next to the object to grab\\n)\\n  :effect (and\\n                (holds_rh ?char ?obj)  ; Character now holds the object\\n)\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)  ; Character must be next to the object\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "221_2",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (and (holds_rh ?char ?obj))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n\"\n}"
    },
    {
        "identifier": "241_2",
        "llm_output": "{\n  \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)\\n                   (next_to ?char ?obj)\\n                   (not (holds_rh ?char ?obj))\\n                 )\\n  :effect (and\\n               (holds_rh ?char ?obj)\\n             )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (inside_room ?obj home_office)\\n                   (next_to ?char ?obj)\\n                   (not (inside_room ?char home_office))\\n                 )\\n  :effect (and\\n               (not (inside_room ?char bathroom))\\n               (inside_room ?char home_office)\\n             )\\n)\\n\\n(:action standup\\n  :parameters (?char - character)\\n  :precondition (sitting ?char)\\n  :effect (not (sitting ?char))\\n)\"\n}"
    },
    {
        "identifier": "341_1",
        "llm_output": "{\"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (and (can_open ?obj) (inside_room ?obj dining_room) (next_to ?char ?obj)) (or (holds_rh ?char ?obj) (holds_lh ?char ?obj)))\\n  :effect (and (open ?obj) (not (closed ?obj)))\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (and (grabbable ?obj) (next_to ?char ?obj) (inside ?char dining_room)) (or (holds_rh ?char ?obj) (holds_lh ?char ?obj)))\\n  :effect (and (on_char ?obj ?char) (not (next_to ?char ?obj)))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "484_1",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (grabbable ?obj)  ; object must be grabbable\\n                    (obj_next_to ?obj ?char)  ; object must be next to the character\\n                  )\\n  :effect (and\\n             (holds_rh ?char ?obj)  ; character is now holding the object\\n          )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (lookable ?obj)  ; object must be lookable\\n                    (obj_next_to ?obj ?char)  ; object must be next to the character\\n                  )\\n  :effect (and\\n             (next_to ?char ?obj)  ; character is now next to the object\\n          )\\n)\"\n}"
    },
    {
        "identifier": "504_2",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (grabbable ?obj)\\n  :effect (and\\n             (holds_rh ?char ?obj)\\n           )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (movable ?obj)\\n  :effect (next_to ?char ?obj)\\n)\"\n}"
    },
    {
        "identifier": "508_2",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (and (not (next_to ?char ?obj)) (holds_rh ?char ?obj))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (movable ?obj) (next_to ?char ?obj))\\n  :effect (and (not (inside_room ?char ?obj)) (inside_room ?char ?obj))\\n)\\n\"}"
    },
    {
        "identifier": "544_1",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (and (holds_rh ?char ?obj))\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "57_1",
        "llm_output": "{\n  \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (and (holds_rh ?char ?obj))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "617_2",
        "llm_output": "{\n    \"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (can_open ?obj)  ; The object must be openable\\n                   (clothes ?obj)  ; The object must be clothes\\n                   (is_in ?char home_office)  ; The character must be inside home office\\n               )\\n  :effect (and\\n             (opened ?obj)  ; The object is now open\\n           )\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)  ; The object must be grabbable\\n                   (obj_next_to ?char ?obj)  ; The character must be next to the object\\n               )\\n  :effect (and\\n             (hold_rh ?char ?obj)  ; The character is now holding the object in the right hand\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (movable ?char)  ; The character must be movable\\n                   (obj_next_to ?char ?obj)  ; The character must be next to the object to walk towards\\n               )\\n  :effect (and\\n             (next_to ?char ?obj)  ; The character is now next to the object\\n           )\\n)\\n\"\n}"
    },
    {
        "identifier": "628_1",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (and (holds_rh ?char ?obj))\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "688_2",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)\\n                   (next_to ?char ?obj)\\n                )\\n  :effect (and\\n               (holds_rh ?char ?obj)\\n               (not (next_to ?char ?obj))\\n            )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "693_2",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (grabbable ?obj)\\n    (obj_next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj)\\n  )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "821_1",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (and (holds_rh ?char ?obj))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "86_1",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (grabbable ?obj)\\n                  (obj_next_to ?obj ?char)\\n              )\\n  :effect (and\\n             (obj_inside ?obj ?char)\\n           )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (movable ?char)\\n                  (obj_next_to ?char ?obj)\\n              )\\n  :effect (and\\n             (next_to ?char ?obj)\\n           )\\n)\"}"
    },
    {
        "identifier": "896_2",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (movable ?obj)  ; object must be movable\\n                    (next_to ?char ?obj)  ; character must be next to the object\\n                    (grabbable ?obj)  ; object must be grabbable\\n                )\\n  :effect (and\\n                    (holds_lh ?char ?obj)  ; character now holds object in left hand\\n                    (not (next_to ?char ?obj))  ; object is no longer next to character\\n                )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)  ; character is next to the object\\n  :effect ()  ; no effect for walking towards\\n)\\n\"}"
    },
    {
        "identifier": "897_2",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (movable ?obj) (grabbable ?obj) (obj_next_to ?char ?obj))\\n  :effect (and (holds_rh ?char ?obj))\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (movable ?char) (obj_next_to ?char ?obj))\\n  :effect (and (next_to ?char ?obj))\\n)\"\n}"
    },
    {
        "identifier": "1083_2",
        "llm_output": "{\n    \"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n                   (grabbable ?obj1)\\n                   (obj_next_to ?obj1 ?obj2)\\n                   (next_to ?char ?obj1)\\n                )\\n  :effect (and\\n             (obj_ontop ?obj1 ?obj2)\\n             (not (hold_lh ?char ?obj1))\\n             (not (hold_rh ?char ?obj1))\\n           )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and\\n             (next_to ?char ?obj)\\n           )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_switch ?obj)\\n                   (next_to ?char ?obj)\\n                )\\n  :effect (on ?obj)\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)\\n                   (next_to ?char ?obj)\\n                )\\n  :effect (and\\n             (hold_rh ?char ?obj)\\n           )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (can_open ?obj)\\n                   (open ?obj)\\n                   (next_to ?char ?obj)\\n                )\\n  :effect (and\\n             (closed ?obj)\\n           )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (can_open ?obj)\\n                   (not (closed ?obj))\\n                   (next_to ?char ?obj)\\n                )\\n  :effect (and\\n             (open ?obj)\\n           )\\n)\\n\"\n}"
    },
    {
        "identifier": "392_2",
        "llm_output": "{\"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n                  (containers ?obj2)\\n                  (movable ?obj1)\\n                  (next_to ?char ?obj1)\\n                  (obj_next_to ?obj1 ?obj2)\\n              )\\n  :effect (and\\n               (not (next_to ?char ?obj1))\\n               (obj_ontop ?obj1 ?obj2)\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (has_switch ?obj)\\n                  (clean ?obj)\\n                  (plugged_in ?obj)\\n                  (off ?obj)\\n                  (next_to ?char ?obj)\\n              )\\n  :effect (on ?obj)\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (grabbable ?obj)\\n                  (next_to ?char ?obj)\\n              )\\n  :effect (and\\n               (not (next_to ?char ?obj))\\n               (holds_rh ?char ?obj)\\n           )\\n)\\n\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (can_open ?obj)\\n                  (opened ?obj)\\n                  (next_to ?char ?obj)\\n              )\\n  :effect (and\\n                 (not (opened ?obj))\\n                 (closed ?obj)\\n             )\\n)\\n\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (can_open ?obj)\\n                  (closed ?obj)\\n                  (next_to ?char ?obj)\\n              )\\n  :effect (and\\n                  (not (closed ?obj))\\n                  (opened ?obj)\\n              )\\n)\\n\"}"
    },
    {
        "identifier": "755_2",
        "llm_output": "{\n    \"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n                   (surfaces ?obj2)  ; object2 has surfaces\\n                   (clean ?obj2)     ; object2 is clean\\n                   (grabbable ?obj1)  ; object1 can be grabbed\\n                   (either (obj_next_to ?obj1 ?obj2)  ; object1 is next to object2\\n                           (obj_inside ?obj1 ?obj2))  ; or object1 is inside object2\\n               )\\n  :effect (and\\n              (when (obj_next_to ?char ?obj2)(not (obj_next_to ?char ?obj2)))  ; object2 is no longer next to character\\n              (when (obj_inside ?obj1 ?obj2)(not (obj_inside ?obj1 ?obj2)))  ; object1 is no longer inside object2\\n              (ontop ?obj1 ?obj2)  ; object1 is now on top of object2\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)  ; The character should be close to the object\\n  :effect ()\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (has_switch ?obj)  ; Object has a switch\\n      (off ?obj)         ; Object is turned off\\n      (plugged_in ?obj)  ; Object is plugged in\\n      (next_to ?char ?obj)  ; The character should be close to the object\\n  )\\n  :effect (on ?obj)  ; The object is now turned on\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (grabbable ?obj)  ; Object can be grabbed\\n      (next_to ?char ?obj)  ; The character should be next to the object\\n  )\\n  :effect (and\\n              (when (next_to ?char ?obj)(not (next_to ?char ?obj)))  ; Character is no longer next to the object\\n              (on_char ?obj ?char)  ; Object is now held by the character\\n           )\\n)\\n\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (can_open ?obj)  ; Object can be opened\\n      (closed ?obj)    ; Object is closed\\n      (next_to ?char ?obj)  ; The character should be close to the object\\n  )\\n  :effect (and\\n              (not (closed ?obj))  ; The object is now open\\n              (when (next_to ?char ?obj)(not (next_to ?char ?obj)))  ; The character is no longer next to the object\\n           )\\n)\"\n}"
    },
    {
        "identifier": "124_1",
        "llm_output": "{\"output\": \"(:action walk_towards :parameters (?char - character ?obj - object) :precondition () :effect () )(:action sit :parameters (?char - character ?obj - object) :precondition () :effect () )\"}"
    },
    {
        "identifier": "137_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)  ; The character must be next to the object\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)  ; The character is now next to the object\\n  )\\n)\\n\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (sittable ?obj)  ; The object can be sat on\\n    (next_to ?char ?obj)  ; The character must be next to the object\\n  )\\n  :effect (and\\n    (sitting ?char)  ; The character is now sitting\\n    (ontop ?char ?obj)  ; The character is now on top of the object\\n  )\\n)\"\n}"
    },
    {
        "identifier": "204_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (next_to ?char ?obj)\\n               )\\n  :effect (and\\n               (not (inside_room ?char ?obj))\\n               (inside_room ?char ?obj)\\n           )\\n)\\n\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (sittable ?obj)\\n                   (next_to ?char ?obj)\\n               )\\n  :effect (and\\n               (not (sitting ?char))\\n               (lying ?char)\\n           )\\n)\\n\"}"
    },
    {
        "identifier": "268_1",
        "llm_output": "{\n  \"output\": \"(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (next_to ?char ?obj)\\n:effect (and (not (next_to ?char ?obj)) (next_to ?char ?obj))\\n)\\n\\n(:action sit\\n:parameters (?char - character ?obj - object)\\n:precondition (and (sittable ?obj) (next_to ?char ?obj))\\n:effect (and (sitting ?char) (ontop ?char ?obj))\\n)\\n\"\n}"
    },
    {
        "identifier": "297_2",
        "llm_output": "{\"output\":\"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (sittable ?obj) \\n  :effect (lying ?char)\\n)\\n\"}"
    },
    {
        "identifier": "299_1",
        "llm_output": "{\"output\":\"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\\n\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (next_to ?char ?obj))\\n  :effect (and (sitting ?char) (ontop ?char ?obj))\\n)\\n\"}"
    },
    {
        "identifier": "300_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "321_1",
        "llm_output": "{\"output\":\"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (not (sitting ?char)) (next_to ?char ?obj))\\n)\\n\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (next_to ?char ?obj))\\n  :effect (and (sitting ?char) (ontop ?char ?obj))\\n)\\n\"}"
    },
    {
        "identifier": "332_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and\\n             (next_to ?char ?obj)\\n             (facing ?char ?obj)\\n           )\\n)\\n\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (sittable ?obj)\\n                   (next_to ?char ?obj)\\n                 )\\n  :effect (and\\n             (sitting ?char)\\n             (ontop ?char ?obj)\\n           )\\n)\\n\"}"
    },
    {
        "identifier": "379_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "387_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (not (inside ?char ?obj)) (next_to ?char ?obj))\\n)\\n\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (next_to ?char ?obj))\\n  :effect (and (sitting ?char) (ontop ?char ?obj))\\n)\\n\"}"
    },
    {
        "identifier": "390_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\\n\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (next_to ?char ?obj))\\n  :effect (and (sitting ?char) (ontop ?char ?obj))\\n)\\n\"\n}"
    },
    {
        "identifier": "3_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (next_to ?char ?obj))\\n  :effect (and (sitting ?char) (ontop ?char ?obj))\\n)\"\n}"
    },
    {
        "identifier": "416_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (lookable ?obj) (surfaces ?obj) (movable ?obj) (obj_next_to ?char ?obj) (facing ?char ?obj))\\n  :effect (next_to ?char ?obj))\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (lookable ?obj) (surfaces ?obj) (movable ?obj) (obj_next_to ?char ?obj) (facing ?char ?obj))\\n  :effect (and (lying ?char) (ontop ?char ?obj)))\\n\"\n}"
    },
    {
        "identifier": "438_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "442_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (next_to ?char ?obj))\\n  :effect (and (sitting ?char) (ontop ?char ?obj))\\n)\"\n}"
    },
    {
        "identifier": "447_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "449_1",
        "llm_output": "{\n\t\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (not (next_to ?char ?obj)) (next_to ?char ?obj))\\n)\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (next_to ?char ?obj))\\n  :effect (and (not (sitting ?char)) (lying ?char) (ontop ?char ?obj))\\n)\"\n}"
    },
    {
        "identifier": "455_1",
        "llm_output": "{\n  \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (not (sitting ?char)) (next_to ?char ?obj))\\n)\\n\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (next_to ?char ?obj))\\n  :effect (and (sitting ?char) (ontop ?char ?obj))\\n)\\n\"\n}"
    },
    {
        "identifier": "456_2",
        "llm_output": "{\n\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (inside_room ?obj home_office)\\n                  (sitting ?char)\\n                  (sittable ?obj)\\n              )\\n  :effect (next_to ?char ?obj)\\n)\\n\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (sitting ?char)\\n                  (lieable ?obj)\\n              )\\n  :effect (and\\n              (lying ?char)\\n              (ontop ?char ?obj)\\n          )\\n)\"\n}"
    },
    {
        "identifier": "473_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ())\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ())\\n\"\n}"
    },
    {
        "identifier": "490_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (surfaces ?obj) (sittable ?obj) (obj_next_to ?char ?obj))\\n  :effect (and (next_to ?char ?obj))\\n)\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (next_to ?char ?obj))\\n  :effect (and (sitting ?char) (ontop ?char ?obj))\\n)\"\n}"
    },
    {
        "identifier": "563_1",
        "llm_output": "{\n  \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n\"\n}"
    },
    {
        "identifier": "567_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                     (sittable ?obj)\\n                     (next_to ?char ?obj)\\n                 )\\n  :effect\\n)\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                     (lieable ?obj)\\n                     (ontop ?char ?obj)\\n                 )\\n  :effect\\n)\"}"
    },
    {
        "identifier": "570_1",
        "llm_output": "{\n  \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and\\n             (not (ontop ?char ?obj))\\n             (next_to ?char ?obj)\\n           )\\n)\\n\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (sittable ?obj)\\n                   (next_to ?char ?obj)\\n                   (not (sitting ?char))\\n                 )\\n  :effect (and\\n             (not (next_to ?char ?obj))\\n             (sitting ?char)\\n             (ontop ?char ?obj)\\n           )\\n)\\n\"\n}"
    },
    {
        "identifier": "674_2",
        "llm_output": "{\"output\":\"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\"}"
    },
    {
        "identifier": "6_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "742_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\\n\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (next_to ?char ?obj))\\n  :effect (and (sitting ?char) (ontop ?char ?obj))\\n)\\n\"}"
    },
    {
        "identifier": "762_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (sittable ?obj)\\n                (surfaces ?obj)\\n                (movable ?obj)\\n                (obj_inside ?obj ?char)\\n            )\\n  :effect (next_to ?char ?obj)\\n)\\n\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (lieable ?obj)\\n                (surfaces ?obj)\\n                (inside ?char ?obj)\\n                (sittable ?obj)\\n            )\\n  :effect (and\\n                (not (sitting ?char))\\n                (lying ?char)\\n                (ontop ?char ?obj)\\n            )\\n)\\n\"}"
    },
    {
        "identifier": "793_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ())\\n\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ())\\n\"}"
    },
    {
        "identifier": "798_2",
        "llm_output": "{\"output\":\"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (surfaces ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)\\n  )\\n)\\n\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n       (sittable ?obj)\\n       (next_to ?char ?obj)\\n  )\\n  :effect (and\\n       (sitting ?char)\\n       (ontop ?char ?obj)\\n  )\\n)\"}"
    },
    {
        "identifier": "932_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (inside_room ?char ?obj)\\n                  (movable ?char)\\n              )\\n  :effect (next_to ?char ?obj))\\n\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (sittable ?obj)\\n                  (next_to ?char ?obj)\\n              )\\n  :effect (and\\n              (sitting ?char)\\n              (ontop ?char ?obj)\\n          ))\\n\"}"
    },
    {
        "identifier": "941_2",
        "llm_output": "{\"output\":\"(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (next_to ?char ?obj)\\n:effect (and (not (next_to ?char ?obj)) (next_to ?char ?obj))\\n)\\n(:action sit\\n:parameters (?char - character ?obj - object)\\n:precondition (and (sittable ?obj) (next_to ?char ?obj))\\n:effect (and (not (next_to ?char ?obj)) (sitting ?char) (ontop ?char ?obj))\\n)\"}"
    },
    {
        "identifier": "96_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n\"\n}"
    },
    {
        "identifier": "976_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect () \\n)\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect () \\n)\"}"
    },
    {
        "identifier": "149_1",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (and (not (next_to ?char ?obj)) (obj_on_char ?obj ?char))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (not (next_to ?char ?obj)) (next_to ?char ?obj))\\n)\\n(:action standup\\n  :parameters (?char - character)\\n  :precondition (sitting ?char)\\n  :effect (not (sitting ?char))\\n)\\n\"}"
    },
    {
        "identifier": "154_1",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                     (grabbable ?obj)\\n                     (inside_room ?obj ?r)(inside ?char ?r)\\n                     (next_to ?char ?obj))\\n  :effect (and\\n               (holds_rh ?char ?obj)\\n               (not (grabbable ?obj)))\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (inside ?char ?obj))\\n)\\n\"\n}"
    },
    {
        "identifier": "180_1",
        "llm_output": "{\n\t\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (grabbable ?obj) ; The object must be grabbable\\n                    (next_to ?char ?obj) ; The character must be next to the object\\n                )\\n  :effect (and\\n                            (holds_rh ?char ?obj) ; The character is now holding the object\\n                        )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj) ; The character must be next to the object\\n  :effect ()\\n)\\n(:action standup\\n  :parameters (?char - character)\\n  :precondition (sitting ?char) ; The character must be sitting to stand up\\n  :effect (not (sitting ?char)) ; The character is no longer sitting\\n)\\n\"\n}"
    },
    {
        "identifier": "195_1",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)\\n                   (next_to ?char ?obj)\\n               )\\n  :effect (and\\n             (not (obj_ontop ?obj ?anything))\\n             (holds_rh ?char ?obj)\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (inside ?char ?obj)\\n)\\n\"}"
    },
    {
        "identifier": "211_1",
        "llm_output": "{\n\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)  ; the object must be grabbable\\n                   (next_to ?char ?obj)  ; the character must be next to the object\\n                 )\\n  :effect (and\\n             (when (grabbable ?obj)(not (grabbable ?obj)))  ; if the object is grabbable, it is no longer grabbable\\n             (ontop ?obj ?char)  ; the object is now held by the character\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)  ; the character must be next to the object\\n  :effect (next_to ?char ?obj)  ; the character is now next to the object\\n)\"\n}"
    },
    {
        "identifier": "241_1",
        "llm_output": "{\"output\":\"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (grabbable ?obj)  ; The object must be grabbable\\n                (next_to ?char ?obj)  ; The character must be next to the object\\n            )\\n  :effect (and\\n            (not (next_to ?char ?obj))  ; The character is no longer next to the object\\n            (holding_rh ?char ?obj)  ; The character now holds the object in the right hand\\n          )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)  ; The character must be next to the object\\n  :effect\\n)\\n\"}"
    },
    {
        "identifier": "264_1",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (and (holds_rh ?char ?obj))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "265_2",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)\\n                   (next_to ?char ?obj)\\n                 )\\n  :effect (and\\n              (holds_rh ?char ?obj)\\n            )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (movable ?char)\\n                   (next_to ?char ?obj)\\n                 )\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "287_2",
        "llm_output": "{\n\t\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (grabbable ?obj)\\n                (next_to ?char ?obj)\\n            )\\n  :effect (and\\n                (when (next_to ?char ?obj)(not (next_to ?char ?obj)))\\n                (ontop ?obj ?char)\\n            )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\\n\"\n}"
    },
    {
        "identifier": "352_1",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (and (holds_rh ?char ?obj))\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and)\\n)\"\n}"
    },
    {
        "identifier": "360_1",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)\\n                   (inside_room ?obj ?room)\\n                   (inside ?char ?room)\\n                 )\\n  :effect (and\\n             (when (and (inside ?char ?room)(inside_room ?obj ?room))\\n                   (not (inside_room ?obj ?room))\\n             )\\n             (when (inside ?char ?room)\\n                   (holds_rh ?char ?obj)\\n             )\\n             (when (and (inside ?char ?room)(has_plug ?obj))\\n                   (plugged_in ?obj)\\n             )\\n         )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (movable ?char)\\n                   (movable ?obj)\\n                   (next_to ?char ?obj)\\n                 )\\n  :effect (and\\n             (next_to ?char ?obj)\\n         )\\n)\"\n}"
    },
    {
        "identifier": "388_1",
        "llm_output": "{\"output\":\"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (grabbable ?obj)  ; The object must be grabbable\\n      (inside ?char ?obj)   ; The character is inside the room where the object is located\\n      (not (holds_rh ?char ?obj))  ; Character should not be holding the object already\\n  )\\n  :effect (holds_rh ?char ?obj)  ; Character is now holding the object\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (inside ?char ?obj)   ; The character is inside the room where the object is located\\n      (not (holds_rh ?char ?obj))  ; Character should not be holding the object already\\n  )\\n  :effect ()  ; No effect as the character just walks towards the object\\n)\\n\"}"
    },
    {
        "identifier": "431_1",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (grabbable ?obj)  ; object must be grabbable\\n                  (next_to ?char ?obj)  ; character must be next to object\\n                )\\n  :effect (and\\n              (holds_rh ?char ?obj)  ; character now holds object in the right hand\\n            )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)  ; character must be next to object\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "436_1",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                     (movable ?obj)\\n                     (grabbable ?obj)\\n                     (inside_room ?char ?obj)\\n                 )\\n  :effect (and\\n              (holds_rh ?char ?obj)\\n          )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                     (inside_room ?char ?obj)\\n                 )\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "442_2",
        "llm_output": "{\n  \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (grabbable ?obj) ; obj must be grabbable\\n                  (next_to ?char ?obj) ; character must be next to the object\\n              )\\n  :effect (and\\n             (when (grabbable ?obj) (not (grabbable ?obj))) ; object is no longer grabbable\\n             (on_char ?obj ?char) ; object is now on the character\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj) ; character must be next to the object\\n  :effect (and\\n             (not (next_to ?char ?obj)) ; character is no longer next to the object\\n             (next_to ?char ?obj) ; character is now next to the object\\n           )\\n)\"\n}"
    },
    {
        "identifier": "474_2",
        "llm_output": "{\"output\":\"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (grabbable ?obj)  ; the object must be grabbable\\n                    (next_to ?char ?obj)  ; the character must be next to the object\\n                 )\\n  :effect (and\\n                (when (next_to ?char ?obj) (not (next_to ?char ?obj)))  ; the character is no longer next to the object\\n                (when (grabbable ?obj) (not (grabbable ?obj)))  ; the object is no longer grabbable\\n                (holds_rh ?char ?obj)  ; the character now holds the object in the right hand\\n            )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)  ; the character is next to the object\\n  :effect ()\\n)\"}"
    },
    {
        "identifier": "482_2",
        "llm_output": "{\n\t\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (grabbable ?obj)\\n                (next_to ?char ?obj)\\n            )\\n  :effect (and\\n                (holds_rh ?char ?obj)\\n            )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "497_1",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj) ; the object must be grabbable\\n                   (inside_room ?obj ?room) ; the object is inside some room\\n                   (inside ?char ?room) ; the character must be inside the same room\\n                 )\\n  :effect (and\\n               (ontop ?obj ?char) ; the object is now on the character\\n               (not (grabbable ?obj)) ; the object is no longer grabbable\\n             )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (movable ?char) ; character should be movable\\n                    (movable ?obj) ; object should be movable\\n                    (next_to ?char ?obj) ; character is now next to the object\\n                    (has_switch ?obj) ; object must have a switch\\n                    (has_plug ?obj) ; object must have a plug\\n                )\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "553_1",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (grabbable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect\\n      (holds_rh ?char ?obj)\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ())\\n\"}"
    },
    {
        "identifier": "601_2",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (holds_rh ?char ?obj))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (next_to ?char ?obj))\\n)\\n\"\n}"
    },
    {
        "identifier": "70_1",
        "llm_output": "{\"output\":\"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)  ; object must be grabbable\\n                   (next_to ?char ?obj)  ; character must be next to the object\\n                 )\\n  :effect (and\\n             (holds_rh ?char ?obj)  ; character now holds the object\\n           )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)  ; character must be next to the object\\n  :effect ()\\n)\"}"
    },
    {
        "identifier": "864_2",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (grabbable ?obj)  ; the object must be grabbable\\n                (next_to ?char ?obj)  ; character must be next to the object to grab\\n            )\\n  :effect (and\\n                (holds_rh ?char ?obj)  ; character is now holding the object in the right hand\\n             )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)  ; character must be next to the object\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "963_2",
        "llm_output": "{\n    \"output\": \"(:action grab \\n  :parameters (?char - character ?obj - object) \\n  :precondition (and\\n    (grabbable ?obj) \\n    (next_to ?char ?obj) \\n  ) \\n  :effect (and\\n    (holds_rh ?char ?obj) \\n  ) \\n) \\n\\n(:action walk_towards \\n  :parameters (?char - character ?obj - object) \\n  :precondition (next_to ?char ?obj) \\n  :effect \\n)\"\n}"
    },
    {
        "identifier": "974_1",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (inside_room ?obj ?room) (inside ?char ?room))\\n  :effect (and (holds_rh ?char ?obj))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (inside ?char ?room) (inside_room ?obj ?room))\\n  :effect (and (next_to ?char ?obj))\\n)\\n\"}"
    },
    {
        "identifier": "976_2",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (grabbable ?obj)  ; the object must be grabbable\\n                (next_to ?char ?obj)  ; the character must be next to the object\\n            )\\n  :effect (and\\n                (holds_rh ?char ?obj)  ; character is now holding the object\\n            )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)  ; The character must be next to the target\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "99_2",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (grabbable ?obj) (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj)\\n  )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "183_2",
        "llm_output": "{\"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n                   (clothes ?obj1)\\n                   (sittable ?obj2)\\n                   (next_to ?char ?obj2)\\n               )\\n  :effect (obj_ontop ?obj1 ?obj2)\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_switch ?obj)\\n                   (next_to ?char ?obj)\\n                   (plugged_in ?obj)\\n                   (off ?obj)\\n               )\\n  :effect (and\\n             (not (off ?obj))\\n             (on ?obj)\\n           )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)\\n                   (next_to ?char ?obj)\\n               )\\n  :effect (and\\n             (on_char ?obj ?char)\\n             (not (next_to ?char ?obj))\\n           )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (can_open ?obj)\\n                   (next_to ?char ?obj)\\n                   (open ?obj)\\n               )\\n  :effect (and\\n             (not (open ?obj))\\n             (closed ?obj)\\n           )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (can_open ?obj)\\n                   (next_to ?char ?obj)\\n                   (closed ?obj)\\n               )\\n  :effect (and\\n             (not (closed ?obj))\\n             (open ?obj)\\n           )\\n)\\n\"}"
    },
    {
        "identifier": "229_1",
        "llm_output": "{\n  \"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (or\\n                (and\\n                    (sittable ?obj1)\\n                    (inside ?char ?obj2)\\n                )\\n                (and\\n                    (sittable ?obj2)\\n                    (inside ?char ?obj1)\\n                )\\n            )\\n  :effect (ontop ?obj1 ?obj2)\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_switch ?obj)\\n                    (plugged_in ?obj)\\n                    (off ?obj)\\n                    (next_to ?char ?obj)\\n                )\\n  :effect (and\\n                 (on ?obj)\\n                 (not (off ?obj))\\n             )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (grabbable ?obj)\\n                    (next_to ?char ?obj)\\n                )\\n  :effect (and\\n                 (holds_rh ?char ?obj)\\n                 (not (next_to ?char ?obj))\\n             )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (can_open ?obj)\\n                    (next_to ?char ?obj)\\n                    (open ?obj)\\n                )\\n  :effect (and\\n                 (closed ?obj)\\n                 (not (open ?obj))\\n             )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (can_open ?obj)\\n                    (next_to ?char ?obj)\\n                    (closed ?obj)\\n                )\\n  :effect (and\\n                 (open ?obj)\\n                 (not (closed ?obj))\\n             )\\n)\"\n}"
    },
    {
        "identifier": "310_2",
        "llm_output": "{\n    \"output\": \"(:action switch_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n\\n(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition ()\\n  :effect ()\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n\"\n}"
    },
    {
        "identifier": "721_2",
        "llm_output": "{\n    \"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n                 (able ?char)\\n                 (movable ?obj1)\\n                 (movable ?obj2)\\n                 (next_to ?obj1 ?char)\\n                 (next_to ?obj2 ?char)\\n             )\\n  :effect (and\\n             (on_top ?obj1 ?obj2)\\n         )\\n)(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (able ?char)\\n                 (movable ?char)\\n                 (movable ?obj)\\n                 (next_to ?char ?obj)\\n             )\\n  :effect (and\\n             (next_to ?char ?obj)\\n         )\\n)(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (able ?char)\\n                 (has_switch ?obj)\\n                 (next_to ?char ?obj)\\n             )\\n  :effect (and\\n             (on ?obj)\\n         )\\n)(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (able ?char)\\n                 (grabbable ?obj)\\n                 (next_to ?char ?obj)\\n             )\\n  :effect (and\\n             (holds ?obj ?char)\\n         )\\n)(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (able ?char)\\n                 (can_open ?obj)\\n                 (next_to ?char ?obj)\\n             )\\n  :effect (and\\n             (open ?obj)\\n         )\\n)(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (able ?char)\\n                 (can_open ?obj)\\n                 (next_to ?char ?obj)\\n             )\\n  :effect (and\\n             (closed ?obj)\\n         )\\n)(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (able ?char)\\n                 (has_plug ?obj)\\n                 (next_to ?char ?obj)\\n             )\\n  :effect (and\\n             (plugged_in ?obj)\\n         )\\n)\"\n}"
    },
    {
        "identifier": "764_2",
        "llm_output": "{\n    \"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n    (plugged_in ?obj1)\\n    (obj_next_to ?obj2 ?obj1)\\n    (exists (?x - object) (obj_inside ?x ?obj1))\\n    (exists (?y - object) (obj_inside ?y ?obj2))\\n  )\\n  :effect (and\\n    (obj_ontop ?obj2 ?obj1)\\n    (not (exists (?x - object) (obj_inside ?x ?obj2)))\\n  )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_switch ?obj)\\n    (off ?obj)\\n    (plugged_in ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect\\n    (on ?obj)\\n  )\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (grabbable ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect\\n    (and\\n      (exists (?x - object) (obj_inside ?x ?obj))\\n      (not (next_to ?char ?obj))\\n    )\\n  )\\n)\\n\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (can_open ?obj)\\n    (open ?obj)\\n  )\\n  :effect\\n    (closed ?obj)\\n  )\\n)\\n\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (can_open ?obj)\\n    (closed ?obj)\\n  )\\n  :effect\\n    (open ?obj)\\n  )\\n)\\n\"\n}"
    },
    {
        "identifier": "419_2",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)\\n                   (next_to ?char ?obj)\\n                )\\n  :effect (and\\n             (on_char ?obj ?char)\\n             (not (next_to ?char ?obj))\\n           )\\n)\\n\\n(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n                   (on_char ?obj1 ?char)\\n                   (next_to ?char ?obj2)\\n                )\\n  :effect (and\\n             (obj_ontop ?obj1 ?obj2)\\n             (not (on_char ?obj1 ?char))\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\" }"
    },
    {
        "identifier": "446_2",
        "llm_output": "{\n    \"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (can_open ?obj)  ; The object must be openable\\n                (next_to ?char ?obj)  ; The character must be next to the object\\n            )\\n  :effect (and\\n                (open ?obj)  ; The object is now open\\n            )\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (grabbable ?obj)  ; The object must be grabbable\\n                (next_to ?char ?obj)  ; The character must be next to the object\\n            )\\n  :effect (and\\n                (holds_rh ?char ?obj)  ; The character is now holding the object in the right hand\\n                (not (grabbable ?obj))  ; The object is no longer grabbable\\n            )\\n)\\n\\n(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n                (movable ?obj1)  ; The first object must be movable\\n                (movable ?obj2)  ; The second object must be movable\\n                (not (obj_ontop ?obj1 ?obj2))  ; The first object is not already on top of the second object\\n                (next_to ?char ?obj2)  ; The character must be next to the second object\\n            )\\n  :effect (and\\n                (obj_ontop ?obj1 ?obj2)  ; The first object is now on top of the second object\\n            )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)  ; The character is next to the target object \\n  :effect (not (next_to ?char ?obj))  ; The character is no longer next to the target object\\n)\\n\"\n}"
    },
    {
        "identifier": "710_2",
        "llm_output": "{\n    \"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (can_open ?obj)          ; The object can be opened\\n        (next_to ?char ?obj)     ; The character should be next to the object\\n        (closed ?obj)            ; The object must be closed\\n    )\\n  :effect (and\\n        (not (closed ?obj))  ; The object is now open\\n        (not (can_open ?obj))  ; The object is no longer able to be opened\\n    )\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (grabbable ?obj)        ; The object must be grabbable\\n        (next_to ?char ?obj)    ; The character must be next to the object\\n    )\\n  :effect (and\\n        (grabbable ?char)            ; The character is holding the object\\n        (not (grabbable ?obj))      ; The object is no longer grabbable\\n    )\\n)\\n\\n(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n        (next_to ?char ?obj1)      ; The character should be next to obj1\\n        (next_to ?obj1 ?obj2)       ; obj1 should be next to obj2\\n    )\\n  :effect (and\\n        (obj_ontop ?obj1 ?obj2) ; obj1 is now on top of obj2\\n    )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)  ; The character is next to the target object\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "368_1",
        "llm_output": "{\"output\":\"(:action walk_into\\n  :parameters (?char - character ?room - object)\\n  :precondition (inside_room ?char ?room)\\n  :effect (inside ?char ?room)\\n)\"}"
    },
    {
        "identifier": "729_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (inside ?char ?obj)  ; the character is inside the object\\n                    (inside_room ?obj ?room)  ; the object is inside the room\\n                )\\n  :effect (next_to ?char ?obj)  ; the character is now next to the object\\n)\\n\"}"
    },
    {
        "identifier": "975_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\"}"
    }
]
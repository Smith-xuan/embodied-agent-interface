[
    {
        "identifier": "27_2",
        "llm_output": "{\"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n                   (clothes ?obj1)\\n                   (sittable ?obj2)\\n                   (sitting ?char)\\n                   (next_to ?char ?obj2)\\n                   (holds_rh ?char ?obj1)\\n               )\\n  :effect (and\\n             (not (holds_rh ?char ?obj1))\\n             (ontop ?obj1 ?obj2)\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (movable ?char)\\n                   (movable ?obj)\\n               )\\n  :effect (and\\n             (next_to ?char ?obj)\\n           )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_switch ?obj)\\n                   (off ?obj)\\n                   (next_to ?char ?obj)\\n               )\\n  :effect (on ?obj)\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)\\n                   (next_to ?char ?obj)\\n               )\\n  :effect (and\\n             (holds_rh ?char ?obj)\\n           )\\n)\\n\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (can_open ?obj)\\n                   (not (closed ?obj))\\n                   (next_to ?char ?obj)\\n               )\\n  :effect (closed ?obj)\\n)\\n\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (can_open ?obj)\\n                   (closed ?obj)\\n                   (next_to ?char ?obj)\\n               )\\n  :effect (not (closed ?obj))\\n)\\n\"}"
    },
    {
        "identifier": "417_1",
        "llm_output": "{\"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and (clothes ?obj1) (hangable ?obj2) (not (obj_ontop ?obj1 ?obj2)))\\n  :effect (obj_ontop ?obj1 ?obj2)\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (closed ?obj) (on ?obj))\\n  :effect (on ?obj)\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect ()\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (can_open ?obj) (not (closed ?obj)))\\n  :effect (closed ?obj)\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (can_open ?obj) (closed ?obj))\\n  :effect (not (closed ?obj))\\n)\\n\"}"
    },
    {
        "identifier": "850_1",
        "llm_output": "{\"output\": \"(:action switch_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\"}"
    },
    {
        "identifier": "954_2",
        "llm_output": "{\n    \"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n    (clothes ?obj1)\\n    (hangable ?obj2)\\n    (next_to ?char ?obj2)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj2))\\n    (ontop ?obj1 ?obj2)\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect (on ?obj)\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (grabbable ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj))\\n    (holds_rh ?char ?obj)\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect (closed ?obj)\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (can_open ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (open ?obj)\\n)\"\n}"
    },
    {
        "identifier": "11_1",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (plugged_out ?obj)\\n    (movable ?obj)\\n    (inside ?char ?obj)\\n  )\\n  :effect (plug_in ?obj)\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (on ?obj)\\n  )\\n  :effect ()\\n)\"}"
    },
    {
        "identifier": "120_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition\\n   (obj_next_to ?char ?obj)\\n  :effect\\n   (next_to ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition\\n   (and\\n     (has_switch ?obj)\\n     (next_to ?char ?obj)\\n   )\\n  :effect\\n   (and\\n     (on ?obj)\\n     (plugged_in ?obj)\\n   )\\n)\"\n}"
    },
    {
        "identifier": "125_2",
        "llm_output": "{\n    \"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_plug ?obj)\\n                   (obj_next_to ?char ?obj)\\n                   (plugged_out ?obj)\\n               )\\n  :effect (plugged_in ?obj)\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (sittable ?obj)\\n                   (obj_next_to ?char ?obj)\\n                   (not (inside ?char ?obj))\\n               )\\n  :effect (inside ?char ?obj)\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_switch ?obj)\\n                   (obj_next_to ?char ?obj)\\n                   (off ?obj)\\n               )\\n  :effect (on ?obj)\\n)\"\n}"
    },
    {
        "identifier": "150_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (plugged_in ?obj) (next_to ?char ?obj) (off ?obj))\\n  :effect (and (on ?obj) (not (off ?obj)))\\n)\"\n}"
    },
    {
        "identifier": "160_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (obj_next_to ?obj ?char))\\n  :effect (and (on ?obj) (on ?obj))\\n)\"}"
    },
    {
        "identifier": "180_2",
        "llm_output": "\n{\"output\": \"(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (plugged_out ?obj) (has_switch ?obj) (obj_next_to ?obj ?obj) (inside ?char ?obj) (sitting ?char))\\n  :effect (and (on ?obj))\\n) \\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (inside ?char ?obj)) \\n  :effect (next_to ?char ?obj)\\n)\\n\\n(:action standup\\n  :parameters (?char - character)\\n  :precondition (sitting ?char) \\n  :effect ()\\n)\"}"
    },
    {
        "identifier": "205_1",
        "llm_output": "{\n  \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (inside ?char ?obj)  ; character is inside the object\\n                  (obj_next_to ?obj light)  ; object is next to the light\\n                )\\n  :effect (next_to ?char light)  ; character is now next to the light\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (hold_rh ?obj)  ; the character should hold with the right hand\\n                  (has_switch light)  ; the light has a switch\\n                  (next_to ?char light)  ; character is next to the light\\n                  (plugged_in light)  ; the light is plugged in\\n                  (off light)  ; the light is currently off\\n                )\\n  :effect (and\\n             (on light)  ; the light is now turned on\\n             (not (off light))  ; the light is no longer off\\n           )\\n)\"\n}"
    },
    {
        "identifier": "222_1",
        "llm_output": "{\n\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (obj_next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (obj_next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (off ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n  )\\n)\"\n}"
    },
    {
        "identifier": "232_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (inside ?char ?obj) (obj_next_to ?obj ?char))\\n  :effect (and (next_to ?char ?obj))\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (off ?obj) (next_to ?char ?obj))\\n  :effect (and (not (off ?obj)) (on ?obj))\\n)\"\n}"
    },
    {
        "identifier": "310_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ())\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ())\\n\"}"
    },
    {
        "identifier": "311_1",
        "llm_output": "{\n  \"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (plugged_out ?obj)\\n                (has_plug ?obj)\\n                (obj_inside ?obj ?char)\\n                (clean ?obj)\\n                (movable ?obj)\\n                (next_to ?char ?obj)\\n            )\\n  :effect (plugged_in ?obj)\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (plugged_in ?obj)\\n                    (on ?obj)\\n                )\\n  :effect (on ?obj)\\n)\\n\"\n}"
    },
    {
        "identifier": "331_2",
        "llm_output": "{\n  \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (next_to ?char ?obj))\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (obj_next_to ?char ?obj) (has_switch ?obj) (off ?obj))\\n  :effect (and (on ?obj))\\n)\"\n}"
    },
    {
        "identifier": "345_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (next_to ?char ?obj))\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (off ?obj) (next_to ?char ?obj))\\n  :effect (and (not (off ?obj)) (on ?obj))\\n)\\n\"}"
    },
    {
        "identifier": "392_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (obj_next_to ?char ?obj)\\n                )\\n  :effect (and\\n             (next_to ?char ?obj)\\n           )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_switch ?obj)\\n                   (off ?obj)\\n                   (obj_next_to ?char ?obj)\\n                )\\n  :effect (and\\n             (on ?obj)\\n           )\\n)\"\n}"
    },
    {
        "identifier": "394_2",
        "llm_output": "{\"output\":\"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (char ?char) (obj ?obj))\\n  :effect (and (next_to ?char ?obj))\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (clean ?obj) (has_switch ?obj) (has_plug ?obj) (obj_next_to ?char ?obj) (off ?obj))\\n  :effect (and (on ?obj) (plugged_in ?obj))\\n)\\n\"}"
    },
    {
        "identifier": "432_1",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (plugged_out ?obj) (has_plug ?obj) (inside ?char bathroom) (obj_inside ?obj home_office))\\n  :effect (plugged_in ?obj))\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (movable ?obj) (obj_inside ?obj home_office) (inside ?char bathroom))\\n  :effect (next_to ?char ?obj))\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (on ?obj) (has_switch ?obj) (next_to ?char ?obj))\\n  :effect (on ?obj))\"}"
    },
    {
        "identifier": "443_2",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (plugged_out ?obj)\\n    (movable ?obj)\\n    (inside_room ?obj ?room)\\n    (inside ?char ?room)\\n  )\\n  :effect (and\\n    (not (plugged_out ?obj))\\n    (plugged_in ?obj)\\n  )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside ?char ?room)\\n    (inside_room ?obj ?room)\\n  )\\n  :effect (next_to ?char ?obj)\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (plugged_in ?obj)\\n    (has_switch ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n    (not (off ?obj))\\n  )\\n)\"}"
    },
    {
        "identifier": "445_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (inside ?char ?obj)\\n                   (obj_next_to ?char ?obj)\\n               )\\n  :effect (and\\n             (next_to ?char ?obj)\\n           )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (inside ?char ?obj)\\n                   (has_switch ?obj)\\n               )\\n  :effect (and\\n             (on ?obj)\\n           )\\n)\"}"
    },
    {
        "identifier": "511_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (next_to ?char ?obj))\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (next_to ?char ?obj))\\n  :effect (and (on ?obj))\\n)\"\n}"
    },
    {
        "identifier": "585_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (next_to ?char ?obj)\\n             )\\n  :effect (\\n             (next_to ?char ?obj)\\n           )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_switch ?obj)\\n                   (next_to ?char ?obj)\\n                   (plugged_in ?obj)\\n                 )\\n  :effect(\\n             (on ?obj)\\n           )\\n)\"}"
    },
    {
        "identifier": "604_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (on ?obj) (on ?obj))\\n)\"\n}"
    },
    {
        "identifier": "616_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (next_to ?char ?obj) (plugged_in ?obj) (clean ?obj) (off ?obj))\\n  :effect (and (on ?obj) (plugged_in ?obj))\\n)\\n\"}"
    },
    {
        "identifier": "705_1",
        "llm_output": "{\n    \"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (plugged_out ?obj)\\n                (movable ?obj)\\n                (obj_inside ?obj ?char)\\n                (next_to ?char ?obj))\\n  :effect (plugged_in ?obj))\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (movable ?char)\\n                (obj_next_to ?char ?obj))\\n  :effect (next_to ?char ?obj))\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (has_switch ?obj)\\n                (plugged_in ?obj)\\n                (obj_inside ?obj ?char)\\n                (next_to ?char ?obj))\\n  :effect (on ?obj))\\n\"\n}"
    },
    {
        "identifier": "708_1",
        "llm_output": "{\n\t\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (inside_room ?obj ?dest)\\n      (inside ?char ?room)\\n      (obj_next_to ?char ?obj)\\n  )\\n  :effect (next_to ?char ?obj)\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (has_switch ?obj)\\n      (on ?obj)\\n  )\\n  :effect (on ?obj)\\n)\"\n}"
    },
    {
        "identifier": "715_2",
        "llm_output": "{\n\t\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (plugged_out ?obj)\\n                   (has_plug ?obj)\\n                   (has_switch ?obj)\\n                   (clean ?obj)\\n                   (obj_next_to ?obj ?obj)\\n                   (movable ?obj)\\n                   (obj_next_to ?char ?obj)\\n               )\\n  :effect (and\\n             (plugged_in ?obj)\\n           )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (on ?obj)\\n                   (plugged_in ?obj)\\n                   (clean ?obj)\\n                   (has_switch ?obj)\\n                   (off ?obj)\\n                   (obj_next_to ?obj ?obj)\\n               )\\n  :effect (and\\n             (on ?obj)\\n           )\\n)\"\n}"
    },
    {
        "identifier": "737_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (has_plug ?obj) (obj_next_to ?obj ?obj) (off ?obj) (inside ?char ?obj) (obj_inside ?obj ?char))\\n  :effect (and (on ?obj) (plugged_in ?obj))\\n)\"\n}"
    },
    {
        "identifier": "780_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (next_to ?char ?obj))\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (on ?obj) (plugged_in ?obj))\\n  :effect (and (not (off ?obj)) (on ?obj))\\n)\"\n}"
    },
    {
        "identifier": "812_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (inside_room ?obj ?room)\\n                   (next_to ?char ?obj)\\n                 )\\n  :effect (and\\n             (next_to ?char ?obj)\\n           )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (plugged_in ?obj)\\n                   (has_switch ?obj)\\n                   (off ?obj)\\n                   (next_to ?char ?obj)\\n                 )\\n  :effect (and\\n             (on ?obj)\\n           )\\n)\\n\"}"
    },
    {
        "identifier": "835_2",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (plugged_out ?obj)\\n                   (has_switch ?obj)\\n                   (obj_inside ?obj ?char)\\n                   (movable ?obj)\\n                   (clean ?obj)\\n                   (next_to ?char ?obj)\\n                 )\\n  :effect (plugged_in ?obj)\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (inside ?char ?obj)\\n                   (movable ?obj)\\n                   (next_to ?char ?obj)\\n                 )\\n  :effect\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (plugged_in ?obj)\\n                   (on ?char)\\n                   (has_switch ?obj)\\n                   (obj_inside ?obj ?char)\\n                   (clean ?obj)\\n                   (next_to ?char ?obj)\\n                 )\\n  :effect (on ?obj)\\n)\\n\"}"
    },
    {
        "identifier": "85_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (not (inside ?char ?prev)) (inside ?char ?obj))\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (off ?obj) (plugged_in ?obj) (next_to ?char ?obj) (inside ?char ?obj))\\n  :effect (and (not (off ?obj)) (on ?obj))\\n)\\n\"}"
    },
    {
        "identifier": "874_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (next_to ?char ?obj)  ; character must be next to the object\\n                  (movable ?obj)        ; the object must be movable\\n                )\\n  :effect (and\\n               (next_to ?char ?obj)  ; character is now next to the object\\n            )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (clothes ?obj)      ; obj is clothes\\n                  (can_open ?obj)      ; obj can be opened\\n                  (movable ?obj)       ; obj is movable\\n                  (clothes ?obj)       ; obj is clothes\\n                )\\n  :effect (and\\n               (on ?obj)      ; obj is turned on\\n            )\\n)\\n\"}"
    },
    {
        "identifier": "491_2",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (grabbable ?obj)\\n                 (inside_room ?obj ?_)\\n                 (next_to ?char ?obj)\\n             )\\n  :effect (and\\n                 (when (next_to ?char ?obj)(not (next_to ?char ?obj)))\\n                 (when (inside_room ?obj ?_)(not (inside_room ?obj ?_)))\\n                 (when (grabbable ?obj)(not (grabbable ?obj)))\\n                 (holds_rh ?char ?obj)\\n             )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and\\n                 (when (next_to ?char ?obj)(not (next_to ?char ?obj)))\\n                 (next_to ?char ?obj)\\n             )\\n)\"\n}"
    },
    {
        "identifier": "696_1",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (and (holds ?char ?obj))\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (obj_next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\\n\"\n}"
    },
    {
        "identifier": "1004_2",
        "llm_output": "{\"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\"}"
    },
    {
        "identifier": "152_2",
        "llm_output": "{\n    \"output\": \"(:action put_inside\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n    (movable ?obj1)\\n    (grabbable ?obj1)\\n    (inside_room ?obj1 ?obj2)\\n    (obj_next_to ?char ?obj1)\\n    (inside ?char ?obj2)\\n  )\\n  :effect (and\\n    (obj_inside ?obj1 ?obj2)\\n    (not (obj_next_to ?char ?obj1))\\n  )\\n)\\n\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (can_open ?obj)\\n    (closed ?obj)\\n    (has_switch ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (not (closed ?obj))\\n    (on ?obj)\\n  )\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (grabbable ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj)\\n    (not (next_to ?char ?obj))\\n  )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "298_2",
        "llm_output": "{\n  \"output\": \"(:action put_inside\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n                  (grabbable ?obj1)\\n                  (movable ?obj1)\\n                  (obj_next_to ?obj2 ?obj1)\\n                  (closed ?obj2)\\n              )\\n  :effect (and\\n              (obj_inside ?obj1 ?obj2)\\n            )\\n)\\n\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (can_open ?obj)\\n                  (has_switch ?obj)\\n                  (inside_room ?obj dining_room)\\n                  (next_to ?char ?obj)\\n                  (closed ?obj)\\n              )\\n  :effect (and\\n              (not (closed ?obj))\\n              (on ?obj)\\n            )\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (next_to ?char ?obj)\\n                  (grabbable ?obj)\\n              )\\n  :effect (and\\n              (holds_rh ?char ?obj)\\n              (not (next_to ?char ?obj))\\n            )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (inside ?char home_office)\\n                  (next_to ?char ?obj)\\n              )\\n  :effect (and\\n              (next_to ?char ?obj)\\n            )\\n)\"\n}"
    },
    {
        "identifier": "609_2",
        "llm_output": "{\"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_switch ?obj) ; The object must have a switch\\n                    (next_to ?char ?obj) ; The character must be next to the object\\n                    (closed ?obj) ; The object must be closed initially\\n                )\\n  :effect (and\\n                (not (closed ?obj)) ; The object is now open\\n            )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj) ; The character is next to the object\\n  :effect (next_to ?char ?obj) ; The character moves towards the object\\n)\\n\"}"
    },
    {
        "identifier": "703_2",
        "llm_output": "{\n  \"output\": \"(:action put_inside\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n                   (containers ?obj2)  ; obj2 is a container\\n                   (can_open ?obj2)  ; obj2 can be opened\\n                   (grabbable ?obj1)  ; obj1 is grabbable\\n                   (movable ?obj1)  ; obj1 is movable\\n                   (inside_room ?obj2 ?obj1)  ; obj1 is inside obj2\\n                   (eatable ?obj1)  ; obj1 is eatable\\n                   (not (obj_inside ?obj1 ?obj2))  ; obj1 is not already inside obj2\\n                   (not (open ?obj2))  ; obj2 is not open\\n                   (plugged_in ?obj2)  ; obj2 is plugged in\\n                )\\n  :effect (and\\n             (obj_inside ?obj1 ?obj2)  ; obj1 is now inside obj2\\n          )\\n)\\n\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_switch ?obj)  ; obj has a switch\\n                   (plugged_in ?obj)  ; obj is plugged in\\n                   (not (open ?obj))  ; obj is not open\\n                )\\n  :effect (and\\n             (open ?obj)  ; obj is now open\\n          )\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)  ; obj is grabbable\\n                   (next_to ?char ?obj)  ; the character is next to obj\\n                )\\n  :effect (and\\n             (holds_rh ?char ?obj)  ; character is now holding obj with the right hand\\n          )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (next_to ?char ?obj)  ; the character is next to obj\\n                )\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "772_1",
        "llm_output": "{\"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (closed ?obj)\\n    (can_open ?obj)\\n    (next_to ?char ?obj)\\n    )\\n  :effect (and\\n    (not (closed ?obj))\\n    (open ?obj)\\n  )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj) \\n  :effect (and\\n    (not (next_to ?char ?obj))\\n    (next_to ?char ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "837_2",
        "llm_output": "{\"output\": \"(:action put_inside\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n                    (grabbable ?obj2)\\n                    (movable ?obj2)\\n                    (next_to ?char ?obj1)\\n                    (obj_next_to ?obj2 ?obj1)\\n                    (not (obj_inside ?obj2 ?obj1)))\\n  :effect (and\\n               (obj_inside ?obj2 ?obj1)\\n            )\\n)\\n\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (closed ?obj) (next_to ?char ?obj))\\n  :effect (and (not (closed ?obj)) (open ?obj))\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (and (when (not (holds_rh ?char ?obj)) (not (holds_lh ?char ?obj))) (or (holds_rh ?char ?obj) (holds_lh ?char ?obj)))\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "158_1",
        "llm_output": "{\"output\":\"(:action walk_into\\n  :parameters (?char - character ?room - object)\\n  :precondition (and (inside_room ?room) (inside ?char ?room))\\n  :effect (inside ?char ?room)\\n)\\n\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (inside ?char ?obj))\\n  :effect (facing ?char ?obj)\\n)\\n\\n(:action standup\\n  :parameters (?char - character)\\n  :precondition (sitting ?char)\\n  :effect (not (sitting ?char))\\n)\\n\"}"
    },
    {
        "identifier": "323_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect ((not (inside ?char ?obj)) (next_to ?char ?obj))\\n)\\n\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (next_to ?char ?obj))\\n  :effect ((not (standing ?char)) (sitting ?char))\\n)\"\n}"
    },
    {
        "identifier": "430_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect () \\n)\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect () \\n)\"\n}"
    },
    {
        "identifier": "478_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (not (next_to ?char ?obj)) (next_to ?char ?obj))\\n)\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (next_to ?char ?obj))\\n  :effect (and (not (next_to ?char ?obj)) (ontop ?char ?obj))\\n)\"\n}"
    },
    {
        "identifier": "496_1",
        "llm_output": "{\"output\": \"(:action walk_into\\n  :parameters (?char - character ?room - object)\\n  :precondition (and\\n        (inside ?char ?room)\\n    )\\n  :effect\\n        ((inside ?char ?room))\\n)\\n\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (inside_room ?obj ?room)\\n        (inside_room ?char ?room)\\n    )\\n  :effect\\n        ((facing ?char ?obj))\\n)\"}"
    },
    {
        "identifier": "624_2",
        "llm_output": "{\"output\":\"(:action walk_towards :parameters (?char - character ?obj - object) :precondition () :effect ())(:action sit :parameters (?char - character ?obj - object) :precondition () :effect ())\"}"
    },
    {
        "identifier": "188_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (surfaces ?obj)\\n  :effect (next_to ?char ?obj)\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (has_rh ?char ?obj)\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (lookable ?obj))\\n  :effect (facing ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (next_to ?char ?obj))\\n  :effect (on ?obj)\\n)\"\n}"
    },
    {
        "identifier": "803_2",
        "llm_output": "{\n  \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (and (holds_rh ?char ?obj))\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (facing ?char ?obj)\\n  :effect (facing ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (next_to ?char ?obj))\\n  :effect (and (on ?obj) (on ?obj))\\n)\\n\"\n}"
    },
    {
        "identifier": "960_2",
        "llm_output": "{\"output\":\"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (grabbable ?obj))\\n  :effect (holds_rh ?char ?obj)\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (facing ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj))\\n  :effect (on ?obj)\\n)\"}"
    },
    {
        "identifier": "101_2",
        "llm_output": "{\n    \"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_plug ?obj) (plugged_out ?obj) (next_to ?char ?obj))\\n  :effect (and (not (plugged_out ?obj)) (plugged_in ?obj))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (on ?char))\\n  :effect (and (not (off ?obj)) (on ?obj))\\n)\"\n}"
    },
    {
        "identifier": "1068_1",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (plugged_out ?obj) (has_switch ?obj) (obj_inside ?obj ?room) (inside ?char ?room) (lookable ?obj) (clean ?obj))\\n  :effect (and (plugged_in ?obj))\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (inside ?char ?room) (inside_room ?obj ?room))\\n  :effect\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (plugged_in ?obj) (has_switch ?obj) (obj_inside ?obj ?room) (inside ?char ?room) (lookable ?obj) (clean ?obj))\\n  :effect (and (on ?obj))\\n)\\n\"}"
    },
    {
        "identifier": "153_2",
        "llm_output": "{\n    \"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (\\n    (and\\n      (plugged_out ?obj)\\n      (has_switch ?obj)\\n      (inside ?char ?obj)\\n    )\\n  )\\n  :effect (\\n    (plugged_in ?obj)\\n  )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (\\n    (inside ?char ?obj)\\n  )\\n  :effect ()\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (\\n    (and\\n      (on ?obj)\\n      (plugged_in ?obj)\\n      (inside ?char ?obj)\\n    )\\n  )\\n  :effect (\\n    (on ?obj)\\n  )\\n)\"\n}"
    },
    {
        "identifier": "196_2",
        "llm_output": "{\n    \"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (next_to ?char ?obj)  ; character should be next to the object\\n                  (has_plug ?obj)  ; the object has a plug\\n                  (plugged_out ?obj)  ; the object is currently unplugged\\n              )\\n  :effect (and\\n                (not (plugged_out ?obj))  ; the object is not unplugged anymore\\n                (plugged_in ?obj)  ; the object is now plugged in\\n            )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)  ; character should be next to the object\\n  :effect (and\\n                (not (next_to ?char ?obj))  ; character is no longer next to the object\\n                (next_to ?char ?obj)  ; character is now next to the object\\n            )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (grabbable ?obj)  ; the object is grabbable\\n                  (holds_rh ?char ?obj)  ; character is holding the object with right hand\\n                  (has_switch ?obj)  ; the object has a switch\\n                  (off ?obj)  ; the object is currently off\\n              )\\n  :effect (and\\n                (not (off ?obj))  ; the object is no longer off\\n                (on ?obj)  ; the object is now switched on\\n            )\\n)\"\n}"
    },
    {
        "identifier": "198_1",
        "llm_output": "{\"output\":\"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (plugged_out ?obj) (has_plug ?obj) (obj_next_to ?char ?obj))\\n  :effect (plugged_in ?obj))\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (obj_next_to ?char ?obj)\\n  :effect (and (not (next_to ?char ?obj)) (next_to ?char ?obj)))\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (on ?obj) (has_plug ?obj) (plugged_in ?obj) (obj_next_to ?char ?obj))\\n  :effect (on ?obj))\"}"
    },
    {
        "identifier": "201_2",
        "llm_output": "{\n    \"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_plug ?obj) (obj_next_to ?char ?obj) (plugged_out ?obj))\\n  :effect (and (not (plugged_out ?obj)) (plugged_in ?obj))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (on ?obj))\\n  :effect (and (off ?obj) (on ?obj))\\n)\"\n}"
    },
    {
        "identifier": "232_1",
        "llm_output": "{\n    \"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (plugged_out ?obj) (obj_next_to ?obj ?char))\\n  :effect (plugged_in ?obj))\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (inside_room ?obj) (inside ?char ?obj))\\n  :effect (next_to ?char ?obj))\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (off ?obj) (facing ?char ?obj))\\n  :effect (on ?obj))\\n\"\n}"
    },
    {
        "identifier": "234_1",
        "llm_output": "{\n\t\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (grabbable ?obj)          ; The object must be grabbable\\n                  (has_plug ?obj)            ; The object must have a plug\\n                  (next_to ?char ?obj)        ; The character must be next to the object\\n              )\\n  :effect (plugged_in ?obj)                      ; The object is now plugged in\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)  ; The character must be next to the object to walk towards\\n  :effect (and\\n             (not (next_to ?char ?obj))  ; The character is no longer next to the object\\n             (next_to ?char ?obj)           ; The character has reached the object\\n           )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_switch ?obj)          ; The object must have a switch\\n                    (plugged_in ?obj)           ; The object must be plugged in\\n                    (next_to ?char ?obj)        ; The character must be next to the object\\n                )\\n  :effect (on ?obj)                            ; The object is now switched on\\n)\"\n}"
    },
    {
        "identifier": "343_2",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_plug ?obj) ; The object must have a plug\\n                   (off ?obj) ; The object must be turned off\\n                   (next_to ?char ?obj) ; The character must be next to the object\\n                )\\n  :effect (and\\n             (plugged_in ?obj) ; The object is now plugged in\\n             (not (off ?obj)) ; The object is no longer turned off\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj) ; The character must be next to the object\\n  :effect ()\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_switch ?obj) ; The object must have a switch\\n                   (plugged_in ?obj) ; The object must be plugged in\\n                   (next_to ?char ?obj) ; The character must be next to the object\\n                 )\\n  :effect (on ?obj) ; The object is now turned on\\n)\\n\"}"
    },
    {
        "identifier": "373_1",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (plugged_out ?obj)\\n    (has_plug ?obj)\\n    (obj_inside ?obj home_office)\\n    (inside ?char bathroom)\\n  )\\n  :effect (plugged_in ?obj)\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside ?char ?obj)\\n  )\\n  :effect (next_to ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (plugged_in ?obj)\\n    (has_switch ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (on ?obj)\\n)\\n\"}"
    },
    {
        "identifier": "406_2",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_plug ?obj)\\n                   (obj_next_to ?char ?obj)\\n                )\\n  :effect (plugged_in ?obj)\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (movable ?obj)\\n                   (obj_next_to ?char ?obj)\\n                )\\n  :effect (next_to ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_switch ?obj)\\n                   (obj_next_to ?char ?obj)\\n                   (plugged_in ?obj)\\n                   (on ?obj)\\n                )\\n  :effect (on ?obj)\\n)\" }"
    },
    {
        "identifier": "409_2",
        "llm_output": "{\n    \"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (plugged_out ?obj)\\n    (has_plug ?obj)\\n  )\\n  :effect (and\\n    (plugged_in ?obj)\\n  )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (movable ?obj)\\n  )\\n  :effect ()\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (off ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n  )\\n)\"\n}"
    },
    {
        "identifier": "419_1",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_plug ?obj)\\n                   (plugged_out ?obj)\\n                   (next_to ?char ?obj)\\n                 )\\n  :effect (and\\n             (not (plugged_out ?obj))\\n             (plugged_in ?obj)\\n           )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_switch ?obj)\\n                   (plugged_in ?obj)\\n                   (next_to ?char ?obj)\\n                 )\\n  :effect (on ?obj)\\n)\\n\"}"
    },
    {
        "identifier": "433_1",
        "llm_output": "{\"output\":\"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_plug ?obj)\\n                   (plugged_out ?obj)\\n                   (obj_next_to ?char ?obj)\\n                   (movable ?char)\\n               )\\n   :effect (and\\n                (not (plugged_out ?obj))\\n                (plugged_in ?obj)\\n           )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (has_switch ?obj)\\n                  (plugged_in ?obj)\\n                  (obj_next_to ?char ?obj)\\n              )\\n  :effect (on ?obj)\\n)\\n\"}"
    },
    {
        "identifier": "437_2",
        "llm_output": "{\n  \"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (plugged_out ?obj)\\n                    (pluggable ?obj)\\n                    (holding ?char ?obj)\\n                    (next_to ?char ?obj)\\n                )\\n  :effect (and\\n              (plugged_in ?obj)\\n              (not (plugged_out ?obj))\\n          )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (closed ?obj)\\n                    (has_switch ?obj)\\n                    (holding ?char ?obj)\\n                    (next_to ?char ?obj)\\n                )\\n  :effect (and\\n              (on ?obj)\\n              (not (off ?obj))\\n          )\\n)\"\n}"
    },
    {
        "identifier": "440_1",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (has_plug ?obj)\\n                 (plugged_out ?obj)\\n                 (next_to ?char ?obj)\\n             )\\n  :effect (and\\n             (not (plugged_out ?obj))\\n             (plugged_in ?obj)\\n         )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (has_switch ?obj)\\n                 (obj_next_to ?char ?obj)\\n                 (not (on ?obj))\\n             )\\n  :effect (on ?obj)\\n)\\n\\n\"}"
    },
    {
        "identifier": "453_2",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (plugged_out ?obj) (has_plug ?obj) (obj_next_to ?char ?obj))\\n  :effect (and (plugged_in ?obj))\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (on ?obj) (facing ?char ?obj))\\n  :effect ())\\n\"}"
    },
    {
        "identifier": "46_1",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)\\n                   (next_to ?char ?obj)\\n                   (has_plug ?obj)\\n                   (plugged_out ?obj)\\n               )\\n  :effect (and\\n              (not (plugged_out ?obj))\\n              (plugged_in ?obj)\\n          )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (next_to ?char ?obj)\\n                   (has_switch ?obj)\\n                   (on ?obj)\\n               )\\n  :effect (and\\n              (not (off ?obj))\\n              (on ?obj)\\n          )\\n)\\n\"}"
    },
    {
        "identifier": "475_2",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (has_plug ?obj)  ; obj has a plug\\n                (plugged_out ?obj))  ; obj is currently unplugged\\n  :effect (and\\n             (not (plugged_out ?obj))  ; obj is no longer unplugged\\n             (plugged_in ?obj)  ; obj is now plugged in\\n           )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)  ; character is next to the target object\\n  :effect ()  ; no effect specified\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (has_switch ?obj)  ; obj has a switch\\n                (plugged_in ?obj))  ; obj is plugged in\\n  :effect (and\\n             (on ?obj)  ; obj is now turned on\\n             (not (off ?obj))  ; obj is no longer off\\n           )\\n)\\n\"}"
    },
    {
        "identifier": "503_1",
        "llm_output": "{\n    \"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                     (grabbable ?obj)\\n                     (has_plug ?obj)\\n                     (next_to ?char ?obj)\\n                     (plugged_out ?obj)\\n                  )\\n  :effect (and\\n               (not (plugged_out ?obj))\\n               (plugged_in ?obj)\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and\\n               (next_to ?char ?obj)\\n           )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_switch ?obj)\\n                   (next_to ?char ?obj)\\n                   (plugged_in ?obj)\\n                   (on ?obj)\\n               )\\n  :effect (and\\n               (not (off ?obj))\\n               (on ?obj)\\n           )\\n)\\n\"\n}"
    },
    {
        "identifier": "670_2",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)\\n                   (next_to ?char ?obj)\\n                   (has_plug ?obj)\\n                   (plugged_out ?obj)\\n               )\\n  :effect (and\\n               (not (plugged_out ?obj))\\n               (plugged_in ?obj)\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (next_to ?char ?obj)\\n               )\\n  :effect ()\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_switch ?obj)\\n                   (on ?obj)\\n               )\\n  :effect (and\\n               (not (off ?obj))\\n               (on ?obj)\\n           )\\n)\\n\"}"
    },
    {
        "identifier": "719_2",
        "llm_output": "{\n    \"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (plugged_out ?obj)\\n                    (has_plug ?obj)\\n                    (next_to ?char ?obj)\\n                )\\n  :effect (plugged_in ?obj)\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (or\\n                   (and\\n                     (next_to ?char ?obj)\\n                     (movable ?char)\\n                   )\\n                   (and\\n                     (obj_next_to ?char ?obj)\\n                     (movable ?char)\\n                   )\\n                 )\\n  :effect (next_to ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_switch ?obj)\\n                   (on ?obj)\\n                   (next_to ?char ?obj)\\n                 )\\n  :effect (on ?obj)\\n)\"\n}"
    },
    {
        "identifier": "757_2",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_plug ?obj)\\n                   (plugged_out ?obj)\\n                   (next_to ?char ?obj)\\n               )\\n  :effect (and\\n             (plugged_in ?obj)\\n             (not (plugged_out ?obj))\\n           )\\n) (:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n) (:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_switch ?obj)\\n                   (plugged_in ?obj)\\n                   (on ?obj)\\n               )\\n  :effect ()\\n)\"}"
    },
    {
        "identifier": "787_2",
        "llm_output": "{\n    \"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_plug ?obj)\\n                   (plugged_out ?obj)\\n                   (next_to ?char ?obj)\\n                )\\n  :effect (and\\n             (plugged_in ?obj)\\n           )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (next_to ?char ?obj)\\n                )\\n  :effect ()\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_switch ?obj)\\n                   (plugged_in ?obj)\\n                   (facing ?char ?obj)\\n                )\\n  :effect (and\\n             (on ?obj)\\n           )\\n)\\n\"\n}"
    },
    {
        "identifier": "795_1",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_plug ?obj)\\n                   (next_to ?char ?obj)\\n                   (plugged_out ?obj)\\n               )\\n  :effect (and\\n               (not (plugged_out ?obj))\\n               (plugged_in ?obj)\\n            )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (has_switch ?obj)\\n                  (next_to ?char ?obj)\\n                  (off ?obj)\\n               )\\n  :effect (and\\n               (not (off ?obj))\\n               (on ?obj)\\n            )\\n)\\n\"}"
    },
    {
        "identifier": "819_1",
        "llm_output": "{\n    \"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (has_plug ?obj)\\n                  (has_switch ?obj)\\n                  (obj_inside ?obj ?loc)\\n                  (inside ?char ?loc)\\n                  (plugged_out ?obj)\\n                  (obj_next_to ?char ?obj)\\n              )\\n  :effect (and\\n               (not (plugged_out ?obj))\\n               (plugged_in ?obj)\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (obj_next_to ?char ?obj)\\n              )\\n  :effect (and\\n               (next_to ?char ?obj)\\n           )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (has_switch ?obj)\\n                  (plugged_in ?obj)\\n                  (obj_inside ?obj ?loc)\\n                  (inside ?char ?loc)\\n                  (off ?obj)\\n                  (next_to ?char ?obj)\\n              )\\n  :effect (and\\n               (not (off ?obj))\\n               (on ?obj)\\n           )\\n)\"\n}"
    },
    {
        "identifier": "874_1",
        "llm_output": "{\n    \"output\": \"(:action plug_in :parameters (?char - character ?obj - object) :precondition (and (plugged_out ?obj) (obj_next_to ?char ?obj)) :effect (plugged_in ?obj)) (:action walk_towards :parameters (?char - character ?obj - object) :precondition (next_to ?char ?obj) :effect (next_to ?char ?obj)) (:action switch_on :parameters (?char - character ?obj - object) :precondition (and (has_switch ?obj) (off ?obj) (facing ?char ?obj)) :effect (on ?obj))\"\n}"
    },
    {
        "identifier": "910_1",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (plugged_out ?obj)\\n                   (has_plug ?obj)\\n                   (obj_next_to ?char ?obj)\\n               )\\n  :effect (and\\n            (plugged_in ?obj)\\n            (not (plugged_out ?obj))\\n         )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (obj_next_to ?char ?obj)\\n  :effect ()\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_switch ?obj)\\n                   (plugged_in ?obj)\\n                   (facing ?char ?obj)\\n               )\\n  :effect (and\\n            (on ?obj)\\n            (off ?obj)\\n         )\\n)\\n\"}"
    },
    {
        "identifier": "91_2",
        "llm_output": "{\n\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (plugged_out ?obj)\\n                   (plugged_in ?char ?obj)\\n                   (has_plug ?obj)\\n                   (has_switch ?obj)\\n                   (movable ?obj)\\n                   (facing ?char ?obj)\\n               )\\n  :effect (and\\n               (not (plugged_out ?obj))\\n               (plugged_in ?obj)\\n               (on ?obj)\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (movable ?char)\\n                   (obj_next_to ?char ?obj)\\n               )\\n  :effect (and\\n               (not (obj_next_to ?char ?obj))\\n               (next_to ?char ?obj)\\n           )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (plugged_in ?obj)\\n                   (facing ?char ?obj)\\n               )\\n  :effect (and\\n               (off ?obj)\\n               (not (off ?obj))\\n               (on ?obj)\\n           )\\n)\"\n}\n"
    },
    {
        "identifier": "93_2",
        "llm_output": "{\n    \"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (grabbable ?obj)  ; The object must be grabbable\\n                  (has_plug ?obj)    ; The object must have a plug\\n                  (has_plug ?char)    ; The character must have a plug\\n                  (not (plugged_in ?obj))  ; The object must not be already plugged in\\n              )\\n  :effect (and\\n              (plugged_in ?obj)  ; The object is now plugged in\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)  ; The character must be next to the object to walk towards it\\n  :effect (next_to ?char ?obj)  ; The character is now next to the object\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (has_switch ?obj)  ; The object must have a switch\\n                  (facing ?char ?obj)  ; The character must be facing the object to switch on\\n                  (not (on ?obj))    ; The object must not be already turned on\\n              )\\n  :effect (and\\n              (on ?obj)  ; The object is now turned on\\n           )\\n)\"\n}"
    },
    {
        "identifier": "962_1",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (has_plug ?obj)\\n                (plugged_out ?obj)\\n                (next_to ?char ?obj)\\n                )\\n  :effect (and\\n              (plugged_in ?obj)\\n            )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and\\n              (next_to ?char ?obj)\\n          )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (has_switch ?obj)\\n                (on ?char)\\n                (next_to ?char ?obj)\\n              )\\n  :effect (and\\n              (on ?obj)\\n            )\\n)\\n\"}"
    },
    {
        "identifier": "190_1",
        "llm_output": "{\n    \"output\": \"(:action switch_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n\\n(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition ()\\n  :effect ()\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "201_1",
        "llm_output": "{\n  \"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and (movable ?obj2) (next_to ?char ?obj1))\\n  :effect (and (obj_ontop ?obj2 ?obj1))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (closed ?obj) (next_to ?char ?obj))\\n  :effect (and (on ?obj) (not (off ?obj)))\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (grabbable ?obj)\\n  :effect (or (holds_rh ?char ?obj) (holds_lh ?char ?obj))\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (can_open ?obj)\\n  :effect (not (closed ?obj))\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (can_open ?obj)\\n  :effect (closed ?obj)\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (plugged_out ?obj) (has_plug ?obj) (next_to ?char ?obj))\\n  :effect (not (plugged_out ?obj))\\n)\"\n}"
    },
    {
        "identifier": "223_2",
        "llm_output": "{\"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n                   (movable ?obj1)\\n                   (surfaces ?obj2)\\n                   (next_to ?char ?obj2)\\n                 )\\n  :effect (and\\n             (obj_ontop ?obj1 ?obj2) \\n             (not (next_to ?char ?obj2))\\n           )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and\\n             (next_to ?char ?obj)\\n           )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_switch ?obj)\\n                   (can_open ?obj)\\n                   (off ?obj)\\n                   (next_to ?char ?obj)\\n                 )\\n  :effect (and\\n             (on ?obj)\\n           )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)\\n                   (next_to ?char ?obj)\\n                 )\\n  :effect (and\\n             (holds_rh ?char ?obj)\\n           )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (can_open ?obj)\\n                   (closed ?obj)\\n                   (next_to ?char ?obj)\\n                 )\\n  :effect (and\\n             (not (closed ?obj))\\n             (not (off ?obj))\\n           )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (can_open ?obj)\\n                   (not (closed ?obj))\\n                   (next_to ?char ?obj)\\n                 )\\n  :effect (and\\n             (closed ?obj)\\n             (off ?obj)\\n           )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_plug ?obj)\\n                   (next_to ?char ?obj)\\n                   (plugged_out ?obj)\\n                 )\\n  :effect (and\\n             (plugged_in ?obj)\\n           )\\n)\"}"
    },
    {
        "identifier": "327_2",
        "llm_output": "{\n    \"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n                  (movable ?obj1)  ; object 1 must be movable\\n                  (next_to ?char ?obj2)  ; character must be next to the object 2\\n              )\\n  :effect (and\\n              (obj_ontop ?obj1 ?obj2)  ; object 1 is now on top of object 2\\n              (not (next_to ?char ?obj2))  ; character is no longer next to object 2\\n          )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)  ; character is next to the object\\n  :effect ()\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (has_switch ?obj)  ; object must have a switch\\n                  (next_to ?char ?obj)  ; character must be next to the object\\n                  (plugged_in ?obj)  ; object must be plugged in\\n              )\\n  :effect (on ?obj)  ; object is now turned on\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (grabbable ?obj)  ; object must be grabbable\\n                  (next_to ?char ?obj)  ; character must be next to the object\\n              )\\n  :effect (obj_inside ?obj ?char)  ; object is now inside the character\\n)\\n\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (can_open ?obj)  ; object must be openable\\n                  (next_to ?char ?obj)  ; character must be next to the object\\n              )\\n  :effect (open ?obj)  ; object is now open\\n)\\n\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (can_open ?obj)  ; object must be openable\\n                  (next_to ?char ?obj)  ; character must be next to the object\\n              )\\n  :effect (closed ?obj)  ; object is now closed\\n)\\n\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (has_plug ?obj)  ; object must have a plug\\n                  (next_to ?char ?obj)  ; character must be next to the object\\n                  (plugged_out ?obj)  ; object must be unplugged\\n              )\\n  :effect (plugged_in ?obj)  ; object is now plugged in\\n)\"\n}"
    },
    {
        "identifier": "383_1",
        "llm_output": "{\n  \"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n                   (grabbable ?obj1)  ; obj1 must be grabbable\\n                   (next_to ?char ?obj2)  ; character must be close to obj2\\n               )\\n  :effect (and\\n                (obj_ontop ?obj1 ?obj2)  ; obj1 is now on top of obj2\\n            )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)  ; character must be next to obj\\n  :effect ()\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_switch ?obj)  ; obj must have a switch\\n                    (next_to ?char ?obj)  ; character must be next to obj\\n                )\\n  :effect (on ?obj)  ; obj is now turned on\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (grabbable ?obj)  ; obj must be grabbable\\n                    (next_to ?char ?obj)  ; character must be next to obj\\n                )\\n  :effect (and\\n                   (holds_rh ?char ?obj)  ; character is now holding obj with right hand\\n                   (not (next_to ?char ?obj))  ; character is no longer next to obj\\n               )\\n)\\n\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (can_open ?obj)  ; obj can be opened\\n                    (next_to ?char ?obj)  ; character must be next to obj\\n                    (closed ?obj)  ; obj must be closed initially\\n                )\\n  :effect (and\\n                   (not (closed ?obj))  ; obj is now open\\n               )\\n)\\n\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (can_open ?obj)  ; obj can be opened\\n                    (next_to ?char ?obj)  ; character must be next to obj\\n                    (not (closed ?obj))  ; obj must be open initially\\n                )\\n  :effect (and\\n                   (closed ?obj)  ; obj is now closed\\n               )\\n)\\n\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_plug ?obj)  ; obj must have a plug\\n                    (next_to ?char ?obj)  ; character must be next to obj\\n                    (plugged_out ?obj)  ; obj must be unplugged initially\\n                )\\n  :effect (and\\n                   (plugged_in ?obj)  ; obj is now plugged in\\n               )\\n)\\n\"\n}"
    },
    {
        "identifier": "417_2",
        "llm_output": "{\n    \"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n                 (obj_next_to ?obj1 ?obj2)\\n                 (next_to ?char ?obj1)\\n                 (held ?char ?obj1)\\n             )\\n  :effect (and\\n            (ontop ?obj1 ?obj2)\\n            (not (held ?char ?obj1))\\n         )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (has_switch ?obj)\\n                 (plugged_in ?obj)\\n                 (off ?obj)\\n                 (next_to ?char ?obj)\\n              )\\n  :effect (and\\n              (on ?obj)\\n              (not (off ?obj))\\n         )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (grabbable ?obj)\\n                 (next_to ?char ?obj)\\n              )\\n  :effect (held ?char ?obj)\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (can_open ?obj)\\n                 (next_to ?char ?obj)\\n              )\\n  :effect ()\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (can_open ?obj)\\n                 (next_to ?char ?obj)\\n              )\\n  :effect ()\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (has_plug ?obj)\\n                 (next_to ?char ?obj)\\n              )\\n  :effect (plugged_in ?obj)\\n)\"\n}"
    },
    {
        "identifier": "487_1",
        "llm_output": "{\"output\":\"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n      (grabbable ?obj1)\\n      (movable ?obj1)\\n      (obj_next_to ?obj1 ?obj2)\\n      (next_to ?char ?obj2)\\n  )\\n  :effect (obj_ontop ?obj1 ?obj2)\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and \\n      (has_switch ?obj)\\n      (closed ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (on ?obj)\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (grabbable ?obj)\\n      (movable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (holds_rh ?char ?obj)\\n)\\n\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (can_open ?obj)\\n      (closed ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (open ?obj)\\n)\\n\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (can_open ?obj)\\n      (not (closed ?obj))\\n      (next_to ?char ?obj)\\n  )\\n  :effect (closed ?obj)\\n)\\n\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (has_plug ?obj)\\n      (has_switch ?obj)\\n      (plugged_out ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (plugged_in ?obj)\\n)\"}"
    },
    {
        "identifier": "650_2",
        "llm_output": "{\n    \"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n                   (hold_lh ?obj1)\\n                   (next_to ?char ?obj2)\\n               )\\n  :effect\\n               (and\\n                   (obj_ontop ?obj1 ?obj2)\\n                   (next_to ?char ?obj2)\\n               )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition\\n               (next_to ?char ?obj)\\n  :effect\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition\\n               (and\\n                   (has_switch ?obj)\\n                   (closed ?obj)\\n               )\\n  :effect\\n               (on ?obj)\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition\\n               (and\\n                   (grabbable ?obj)\\n                   (next_to ?char ?obj)\\n               )\\n  :effect\\n               (and\\n                   (hold_rh ?char ?obj)\\n                   (not (next_to ?char ?obj))\\n               )\\n)\\n\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition\\n               (and\\n                   (can_open ?obj)\\n                   (next_to ?char ?obj)\\n                   (closed ?obj)\\n               )\\n  :effect\\n               (and\\n                   (not (closed ?obj))\\n                   (on ?obj)\\n               )\\n)\\n\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition\\n               (and\\n                   (can_open ?obj)\\n                   (next_to ?char ?obj)\\n                   (on ?obj)\\n               )\\n  :effect\\n               (and\\n                   (closed ?obj)\\n                   (not (on ?obj))\\n               )\\n)\\n\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition\\n               (and\\n                   (has_plug ?obj)\\n                   (next_to ?char ?obj)\\n                   (plugged_out ?obj)\\n               )\\n  :effect\\n               (and\\n                   (plugged_in ?obj)\\n                   (not (plugged_out ?obj))\\n               )\\n)\"\n}"
    },
    {
        "identifier": "783_1",
        "llm_output": "{\n    \"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n    (next_to ?char ?obj2)\\n    (movable ?obj1)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj1))\\n    (obj_ontop ?obj1 ?obj2)\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (off ?obj)\\n  )\\n  :effect (on ?obj)\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (grabbable ?obj)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj))\\n    (hold_rh ?char ?obj)\\n  )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n    (closed ?obj)\\n  )\\n  :effect (and\\n    (not (closed ?obj))\\n    (on ?obj)\\n  )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (can_open ?obj)\\n    (not (closed ?obj))\\n  )\\n  :effect (closed ?obj)\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (has_plug ?obj)\\n    (plugged_out ?obj)\\n  )\\n  :effect (plugged_in ?obj)\\n)\"\n}"
    },
    {
        "identifier": "815_2",
        "llm_output": "{\n    \"output\": \"(:action switch_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "826_1",
        "llm_output": "{\"output\":\"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "856_1",
        "llm_output": "{\"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n                   (and \\n                     (movable ?obj1)\\n                     (surfaces ?obj2)\\n                     (next_to ?char ?obj2)\\n                     (obj_next_to ?obj1 ?obj2)\\n                   )\\n               )\\n  :effect (and\\n             (obj_ontop ?obj1 ?obj2)\\n           )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (next_to ?char ?obj)\\n               )\\n  :effect ()\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (closed ?obj)\\n                   (has_switch ?obj)\\n                   (next_to ?char ?obj)\\n               )\\n  :effect (and\\n             (on ?obj)\\n           )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)\\n                   (next_to ?char ?obj)\\n               )\\n  :effect (and\\n             (holds_lh ?char ?obj)\\n             (holds_rh ?char ?obj)\\n           )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (can_open ?obj)\\n                   (next_to ?char ?obj)\\n                   (closed ?obj)\\n               )\\n  :effect (and\\n             (not (closed ?obj))\\n           )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (can_open ?obj)\\n                   (next_to ?char ?obj)\\n                   (not (closed ?obj))\\n               )\\n  :effect (and\\n             (closed ?obj)\\n           )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_plug ?obj)\\n                   (next_to ?char ?obj)\\n                   (plugged_out ?obj)\\n               )\\n  :effect (and\\n             (plugged_in ?obj)\\n           )\\n)\\n\"}"
    },
    {
        "identifier": "911_1",
        "llm_output": "{\n    \"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and (holds_rh ?char ?obj2) (obj_next_to ?obj1 ?obj2))\\n  :effect (obj_ontop ?obj1 ?obj2)\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (closed ?obj) (has_switch ?obj) (plugged_in ?obj))\\n  :effect (on ?obj)\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (movable ?obj) (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (and (holds_rh ?char ?obj) (not (next_to ?char ?obj)))\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (can_open ?obj) (closed ?obj) (next_to ?char ?obj))\\n  :effect (and (not (closed ?obj)) (on ?obj))\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (can_open ?obj) (on ?obj) (next_to ?char ?obj))\\n  :effect (closed ?obj)\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_plug ?obj) (plugged_out ?obj) (next_to ?char ?obj))\\n  :effect (plugged_in ?obj)\\n)\"\n}"
    },
    {
        "identifier": "1027_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\"}"
    },
    {
        "identifier": "181_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "244_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (liesble ?obj)(surfaces ?obj) )\\n  :effect (and  (inside ?char ?obj)(next_to ?char ?obj) )\\n)\\n\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (inside ?char ?obj)(sittable ?obj) )\\n  :effect (lying ?char) \\n)\\n\"\n}"
    },
    {
        "identifier": "269_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect () \\n)\\n\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect () \\n)\"}"
    },
    {
        "identifier": "509_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and\\n             (not (inside ?char ?obj))\\n             (next_to ?char ?obj)\\n           )\\n)\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (sittable ?obj)\\n  :effect (and\\n             (not (sitting ?char))\\n             (lying ?char)\\n           )\\n)\"\n}"
    },
    {
        "identifier": "875_1",
        "llm_output": "{\n\t\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (not (next_to ?char ?obj)) (next_to ?char ?obj))\\n)\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (next_to ?char ?obj))\\n  :effect (and (not (sittable ?obj)) (not (next_to ?char ?obj)) (lying ?char) (ontop ?char ?obj))\\n)\"\n}"
    },
    {
        "identifier": "1035_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (movable ?obj) (next_to ?char ?obj))\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "113_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ())\"}"
    },
    {
        "identifier": "12_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "137_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\"}"
    },
    {
        "identifier": "203_2",
        "llm_output": "{\"output\":\"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ())\"}"
    },
    {
        "identifier": "220_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\"\n}"
    },
    {
        "identifier": "242_1",
        "llm_output": "{\"output\":\"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (or\\n                   (and\\n                     (inside ?char ?obj)\\n                     (movable ?obj)\\n                  )\\n                   (and\\n                     (inside ?char ?obj)\\n                     (grabbable ?obj)\\n                  )\\n                 )\\n  :effect (and\\n             (next_to ?char ?obj)\\n           )\\n)\"}"
    },
    {
        "identifier": "279_2",
        "llm_output": "{\"output\":\"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (movable ?obj)\\n        (grabbable ?obj)\\n        (inside ?char ?obj)\\n    )\\n  :effect (and\\n        (next_to ?char ?obj)\\n    )\\n)\"}"
    },
    {
        "identifier": "287_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ())\"}"
    },
    {
        "identifier": "292_1",
        "llm_output": "{\n  \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ())\\n\"\n}"
    },
    {
        "identifier": "297_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)  ; character should be next to the object\\n  :effect (next_to ?char ?obj)  ; after walking towards, character is now next to the object\\n)\"\n}"
    },
    {
        "identifier": "381_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "388_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\"}"
    },
    {
        "identifier": "38_1",
        "llm_output": "{\n  \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "429_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "437_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect () \\n)\"}"
    },
    {
        "identifier": "451_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ())\"\n}"
    },
    {
        "identifier": "469_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (obj_next_to ?obj)\\n                   (movable ?obj)\\n                   (next_to ?char ?obj)\\n               )\\n  :effect ()\\n)\"}"
    },
    {
        "identifier": "479_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "502_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and\\n             (next_to ?char ?obj))\\n)\"}"
    },
    {
        "identifier": "612_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\"}"
    },
    {
        "identifier": "856_2",
        "llm_output": "{\n  \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "384_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (next_to ?char ?obj)          ; The character must be next to the object\\n              )\\n  :effect (and\\n              (next_to ?char ?obj)             ; The character is now next to the object\\n          )\\n)\\n(:action walk_into\\n  :parameters (?char - character ?room - object)\\n  :precondition (and\\n                  (inside_room ?room ?char)      ; The character must be inside the room\\n              )\\n  :effect (and\\n              (inside ?char ?room)              ; The character is now inside the room\\n          )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (exists (?x - object) (and\\n                                      (has_switch ?obj)           ; The object has a switch\\n                                      (grabbable ?char)            ; The character can grab the object\\n                                      (inside ?char ?x)            ; The object is inside character\\n                                      (ontop ?obj ?x)              ; The object is on top of the object\\n                                      (lookable ?obj)              ; The object can be looked at\\n                                  )\\n                  )\\n  :effect (and\\n              (on ?obj)                       ; The object is now turned on\\n              (plugged_out ?obj)              ; The object is now plugged out\\n          )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (grabbable ?obj) ; The object must be grabbable\\n                  (next_to ?char ?obj) ; The character must be next to the object\\n              )\\n  :effect ()\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (movable ?char)         ; The character must be movable\\n                  (obj_ontop ?obj ?char)   ; The object is on top of the character\\n              )\\n  :effect ()\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (has_plug ?obj)         ; The object has a plug\\n                  (next_to ?char ?obj)     ; The character must be next to the object\\n              )\\n  :effect (and\\n              (plugged_in ?obj)         ; The object is now plugged in\\n              (plugged_out ?obj)        ; The object is no longer plugged\\n          )\\n)\"\n}"
    },
    {
        "identifier": "540_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (movable ?obj)\\n                  (next_to ?char ?obj)\\n              )\\n  :effect (next_to ?char ?obj)\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (grabbable ?obj)\\n                  (next_to ?char ?obj)\\n              )\\n  :effect (and\\n                  (holds_rh ?char ?obj)\\n                  (not (next_to ?char ?obj))\\n              )\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (has_switch ?obj)\\n                  (facing ?char ?obj)\\n              )\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "60_1",
        "llm_output": "{\n\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (lookable ?obj)      ; The object char is walking towards must be lookable\\n                  (next_to ?char ?obj)   ; The character must be next to the object\\n              )\\n  :effect (and\\n               (facing ?char ?obj)  ; The character is now facing the object\\n           )\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (lookable ?obj)      ; The object char is turning towards must be lookable\\n                  (next_to ?char ?obj)   ; The character must be next to the object\\n              )\\n  :effect (and\\n               (facing ?char ?obj)  ; The character is now facing the object\\n           )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (has_switch ?obj)    ; The object being switched on must have a switch\\n                  (next_to ?char ?obj)   ; The character must be next to the object\\n                  (off ?obj)            ; The object must be off initially\\n              )\\n  :effect (and\\n               (on ?obj)          ; The object is now switched on\\n           )\\n)\\n\"\n}"
    },
    {
        "identifier": "71_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (next_to ?char ?obj)  ; The character must be next to the object\\n                )\\n  :effect (and\\n              (next_to ?char ?obj)  ; The character is now next to the object\\n            )\\n)\\n\\n(:action walk_into\\n  :parameters (?char - character ?room - object)\\n  :precondition (and\\n                    (inside_room ?room ?char)  ; The character is inside the room\\n                )\\n  :effect ()\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_switch ?obj)  ; The object has a switch\\n                )\\n  :effect (and\\n              (on ?obj)  ; The object is now turned on\\n            )\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (grabbable ?obj)  ; The object can be grabbed\\n                    (next_to ?char ?obj)  ; The character must be next to the object to grab\\n                )\\n  :effect ()\\n)\\n\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (lookable ?obj)  ; The object can be looked at\\n                )\\n  :effect (and\\n                (facing ?char ?obj)  ; The character is now facing the object\\n            )\\n)\\n\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_plug ?obj)  ; The object has a plug\\n                    (next_to ?char ?obj)  ; The character must be next to the object to plug in\\n                )\\n  :effect (and\\n                  (plugged_in ?obj)  ; The object is now plugged in\\n                  (plugged_out ?obj)  ; The object is no longer unplugged\\n            )\\n)\\n\"}"
    },
    {
        "identifier": "7_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (movable ?char)\\n                    (movable ?obj)\\n                    (next_to ?char ?obj)\\n                )\\n  :effect (and\\n                    (next_to ?char ?obj)\\n                )\\n)\\n(:action walk_into\\n  :parameters (?char - character ?room - object)\\n  :precondition (and\\n                    (inside_room ?room)\\n                    (next_to ?char ?room)\\n                )\\n  :effect (and\\n                    (inside ?char ?room)\\n                )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_switch ?obj)\\n                    (next_to ?char ?obj)\\n                )\\n  :effect (and\\n                    (on ?obj)\\n                )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (grabbable ?obj)\\n                    (next_to ?char ?obj)\\n                )\\n  :effect (and\\n                    (holds_rh ?char ?obj)\\n                )\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (lookable ?obj)\\n                    (next_to ?char ?obj)\\n                )\\n  :effect (and\\n                    (facing ?char ?obj)\\n                )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_plug ?obj)\\n                    (next_to ?char ?obj)\\n                    (plugged_out ?obj)\\n                )\\n  :effect (and\\n                    (plugged_in ?obj)\\n                )\\n)\"\n}"
    },
    {
        "identifier": "1070_1",
        "llm_output": "{\n\t\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (grabbable ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj)\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "313_2",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (grabbable ?obj)  ; the object must be grabbable\\n                  (next_to ?char ?obj)  ; the character must be next to the object\\n              )\\n  :effect (and\\n              (holds_lh ?char ?obj)  ; the character is now holding the object\\n          )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (surfaces ?obj)  ; the object must be a surface to walk towards\\n                  (next_to ?char ?obj)  ; the character must be next to the surface\\n              )\\n  :effect ()\\n)\\n\"\n}"
    },
    {
        "identifier": "689_1",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (grabbable ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (holds_lh ?char ?obj)\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "718_1",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (and (holds_rh ?char ?obj))\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\\n\"\n}"
    },
    {
        "identifier": "1049_1",
        "llm_output": "{\"output\":\"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (next_to ?char ?obj))\\n  :effect (and (on ?obj) (not (off ?obj)))\\n)\"}"
    },
    {
        "identifier": "113_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (next_to ?char ?obj) (sitting ?char))\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (closed ?obj) (plugged_in ?obj) (has_switch ?obj))\\n  :effect (and (on ?obj) (not (off ?obj)))\\n)\"\n}"
    },
    {
        "identifier": "161_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards \\n:parameters (?char - character ?obj - object) \\n:precondition () \\n:effect () \\n)\\n\\n(:action switch_on \\n:parameters (?char - character ?obj - object) \\n:precondition () \\n:effect () \\n)\"\n}"
    },
    {
        "identifier": "173_1",
        "llm_output": "{\n    \"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_plug ?obj)\\n                    (can_open ?obj)\\n                    (not (plugged_in ?obj))\\n                    (next_to ?char ?obj)\\n                )\\n  :effect (and\\n                (plugged_in ?obj)\\n            )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_switch ?obj)\\n                    (plugged_in ?obj)\\n                    (not (on ?obj))\\n                    (next_to ?char ?obj)\\n                )\\n  :effect (and\\n                (on ?obj)\\n            )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (movable ?obj)\\n                    (next_to ?char ?obj)\\n                )\\n  :effect (and\\n                (next_to ?char ?obj)\\n            )\\n)\\n(:action standup\\n  :parameters (?char - character)\\n  :precondition (sitting ?char)\\n  :effect \"\n}"
    },
    {
        "identifier": "23_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (next_to ?char ?obj))\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj) (plugged_in ?obj) (closed ?obj))\\n  :effect (and (on ?obj))\\n)\"\n}"
    },
    {
        "identifier": "263_1",
        "llm_output": "{\n  \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and\\n             (not (next_to ?char ?obj))\\n             (next_to ?char ?obj)\\n           )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (next_to ?char ?obj))\\n  :effect (and\\n             (off ?obj) (on ?obj)\\n           )\\n)\"\n}"
    },
    {
        "identifier": "305_2",
        "llm_output": "{\n  \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (next_to ?char ?obj))\\n  :effect (on ?obj)\\n)\"\n}"
    },
    {
        "identifier": "363_2",
        "llm_output": "{\"output\":\"(:action walk_towards :parameters (?char - character ?obj - object) :precondition (next_to ?char ?obj) :effect (and (next_to ?char ?obj)))\\n(:action switch_on :parameters (?char - character ?obj - object) :precondition (and (has_switch ?obj) (next_to ?char ?obj) (not (on ?obj))) :effect (and (on ?obj)))\"}"
    },
    {
        "identifier": "385_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (surfaces ?obj)  ; obj has surfaces\\n                    (movable ?obj)  ; obj is movable\\n                    (next_to ?char ?obj)  ; character is next to obj\\n                )\\n  :effect (next_to ?char ?obj)  ; character is now next to obj\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_switch ?obj)  ; obj has a switch\\n                    (plugged_in ?obj)  ; obj is plugged in\\n                    (closed ?obj)  ; obj is closed\\n                    (clean ?obj)  ; obj is clean\\n                )\\n  :effect (and\\n                 (on ?obj)  ; obj is turned on\\n                 (not (off ?obj))  ; obj is not turned off\\n              )\\n)\"\n}"
    },
    {
        "identifier": "403_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (inside ?char ?obj) (not (inside ?char - character dining_room)))\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (surfaces ?obj) (next_to ?char ?obj) (has_switch ?obj) (has_plug ?obj))\\n  :effect (and (on ?obj) (not (off ?obj)))\\n)\\n\"\n}"
    },
    {
        "identifier": "415_1",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (grabbable ?obj)\\n  :effect ()\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (movable ?obj) (clothes ?obj))\\n  :effect ()\\n)\\n(:action put_on_character\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (movable ?obj) (has_plug ?obj))\\n  :effect ())\"\n}"
    },
    {
        "identifier": "462_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (next_to ?char ?obj))\\n  :effect (and (on ?obj) (not (off ?obj)))\\n)\"\n}"
    },
    {
        "identifier": "463_2",
        "llm_output": "{\n  \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (inside ?char ?obj) ; character is inside the object\\n                   (movable ?obj)      ; the object is movable\\n               )\\n  :effect (and\\n             (next_to ?char ?obj) ; character is now next to the object\\n         )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (closed ?obj)       ; object is closed\\n                   (has_switch ?obj)    ; object has a switch\\n                   (plugged_in ?obj)    ; object is plugged in\\n                   (grabbable ?obj)     ; object can be grabbed\\n               )\\n  :effect (and\\n             (on ?obj)            ; object is now turned on\\n         )\\n)\\n\"\n}"
    },
    {
        "identifier": "503_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (surfaces ?obj) (movable ?obj) (obj_next_to ?char ?obj))\\n  :effect (and (next_to ?char ?obj))\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (closed ?obj) (plugged_in ?obj) (obj_next_to ?char ?obj))\\n  :effect (and (on ?obj) (not (off ?obj)))\\n)\"\n}"
    },
    {
        "identifier": "59_1",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (grabbable ?obj)  ; obj must be grabbable\\n                    (obj_next_to ?obj ?char)  ; obj is next to character\\n                    (movable ?obj)  ; obj can be moved\\n                )\\n  :effect (and\\n              (holding ?char ?obj)  ; character is now holding the object\\n              (not (obj_next_to ?obj ?char))  ; object is no longer next to character\\n          )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (holding ?char ?obj)  ; character is holding obj\\n                    (obj_next_to ?obj ?char)  ; obj is next to character\\n                )\\n  :effect ()\\n)\\n\\n(:action put_on_character\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (holding ?char ?obj)  ; character is holding obj\\n                    (inside_room ?obj dining_room)  ; obj is inside dining_room\\n                    (inside character dining_room)  ; character is inside dining_room\\n                )\\n  :effect (ontop ?obj ?char)  ; object is now on the character\\n)\\n\"\n}"
    },
    {
        "identifier": "737_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (next_to ?char ?obj))\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj) (plugged_in ?obj) (closed ?obj) (movable ?obj))\\n  :effect (and (on ?obj))\\n)\"}"
    },
    {
        "identifier": "773_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (movable ?obj) (next_to ?char ?obj))\\n  :effect (and (next_to ?char ?obj)))\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (movable ?obj) (next_to ?char ?obj) (has_switch ?obj) (off ?obj))\\n  :effect (and (on ?obj) (not (off ?obj)))\\n)\"\n}"
    },
    {
        "identifier": "910_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj) (plugged_in ?obj) (closed ?obj) (can_open ?obj) (off ?obj))\\n  :effect (and (not (off ?obj)) (on ?obj))\\n)\"\n}"
    },
    {
        "identifier": "953_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (next_to ?char ?obj)  ; The character should be next to the object\\n              )\\n  :effect (next_to ?char ?obj)  ; The character is now next to the object\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (grabbable ?obj)  ; The object must be grabbable\\n                  (has_switch ?obj)  ; The object needs to have a switch\\n                  (obj_inside ?obj ?char)  ; The object should be inside the character's current place\\n              )\\n  :effect (and\\n                (on ?obj)  ; The object is turned on\\n            )\\n)\"\n}"
    },
    {
        "identifier": "1057_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect () \\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect () \\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect () \\n)\"\n}"
    },
    {
        "identifier": "117_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (or\\n                        (walkable ?obj)  \\n                        (walkable ?obj)\\n                    )\\n              (and\\n                    (sittable ?obj)\\n                    (walkable ?obj)\\n              )\\n             )\\n  :effect (and\\n                    (when (walkable ?obj)\\n                             (next_to ?char ?obj)\\n                          )\\n                    (when (sittable ?obj)\\n                             (inside ?char ?obj)\\n                          )\\n         )\\n)\\n\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (facing ?char ?obj)\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_switch ?obj)\\n                    (facing ?char ?obj)\\n              )\\n  :effect (on ?obj)\\n)\"\n}"
    },
    {
        "identifier": "134_1",
        "llm_output": "{\n  \"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_plug ?obj)\\n                   (obj_next_to ?obj ?char)\\n                )\\n  :effect (plugged_in ?obj)\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (movable ?obj)\\n                   (obj_next_to ?char ?obj)\\n                )\\n  :effect (next_to ?char ?obj)\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (obj_next_to ?char ?obj)\\n  :effect (facing ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_switch ?obj)\\n                   (obj_next_to ?char ?obj)\\n                )\\n  :effect (on ?obj)\\n)\"\n}"
    },
    {
        "identifier": "170_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (surfaces ?obj)  ; The object should be a surface to walk towards\\n                (next_to ?char ?obj)  ; The character must be next to the object\\n            )\\n  :effect (next_to ?char ?obj)  ; The character is now next to the object\\n)\\n\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)  ; The character must be next to the object to turn to it\\n  :effect (facing ?char ?obj)  ; The character is now facing the object\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (has_switch ?obj)  ; The object must have a switch to be switched on\\n                (next_to ?char ?obj)  ; The character must be next to the object to switch it on\\n                (plugged_in ?obj)  ; The object must be plugged in\\n                (off ?obj)  ; The object must be turned off\\n            )\\n  :effect (and\\n                (on ?obj)  ; The object is turned on\\n                (facing ?char ?obj)  ; The character is now facing the object\\n            )\\n)\\n\"}"
    },
    {
        "identifier": "197_2",
        "llm_output": "{\n  \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (next_to ?char ?obj)\\n                 )\\n  :effect (and\\n             (next_to ?char ?obj)\\n           )\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (next_to ?char ?obj)\\n                 )\\n  :effect (facing ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (next_to ?char ?obj)\\n                   (has_switch ?obj)\\n                   (off ?obj)\\n                 )\\n  :effect (and\\n             (on ?obj)\\n             (not (off ?obj))\\n           )\\n)\\n\"\n}"
    },
    {
        "identifier": "21_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and \\n                   (next_to ?char ?obj)  ; The character must be next to the object\\n               )\\n  :effect (and\\n             (facing ?char ?obj)  ; The character is now facing the object\\n           )\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (next_to ?char ?obj)  ; The character must be next to the object\\n               )\\n  :effect (and\\n             (facing ?char ?obj)  ; The character is now facing the object\\n           )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_switch ?obj)  ; The object must have a switch\\n                   (next_to ?char ?obj)  ; The character must be next to the object\\n                   (off ?obj)  ; The object must be turned off\\n               )\\n  :effect (on ?obj)  ; The object is now turned on\\n)\\n\"\n}"
    },
    {
        "identifier": "225_2",
        "llm_output": "\n{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (surfaces ?obj)\\n                    (movable ?obj)\\n                    (next_to ?char ?obj))\\n  :effect (and\\n             (next_to ?char ?obj))\\n)\\n\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (surfaces ?obj)\\n                    (movable ?obj)\\n                    (next_to ?char ?obj))\\n  :effect (and\\n             (facing ?char ?obj))\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_switch ?obj)\\n                    (off ?obj)\\n                    (next_to ?char ?obj))\\n  :effect (and\\n             (on ?obj))\\n)\\n\"\n}"
    },
    {
        "identifier": "259_1",
        "llm_output": "{\n  \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (facing ?char ?obj) (next_to ?char ?obj))\\n  :effect (and (not (inside ?char ?obj)) (next_to ?char ?obj))\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (facing ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (has_switch ?obj)\\n  :effect (on ?obj)\\n)\"\n}"
    },
    {
        "identifier": "307_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (facing ?char couch) (obj_next_to ?obj television))\\n  :effect (next_to ?char ?obj)\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (obj_next_to ?char ?obj))\\n  :effect (facing ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (on ?obj) (holding ?char remote_control))\\n  :effect (on television)\\n)\"\n}"
    },
    {
        "identifier": "329_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (not (next_to ?char ?obj)) (next_to ?char ?obj))\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (exists (?obj - object) (obj_ontop ?obj couch)))\\n  :effect (and (facing ?char ?obj))\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj) (off ?obj))\\n  :effect (and (not (off ?obj)) (on ?obj))\\n)\"\n}"
    },
    {
        "identifier": "342_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "377_2",
        "llm_output": "{\n  \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (next_to ?char ?obj))\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (facing ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (plugged_in ?obj) (off ?obj))\\n  :effect (and (on ?obj) (on ?obj))\\n)\"\n}"
    },
    {
        "identifier": "383_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (facing ?char ?obj))\\n)\\n\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (facing ?char ?obj)\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj)(has_switch ?obj)(off ?obj))\\n  :effect (on ?obj)\\n)\\n\"}"
    },
    {
        "identifier": "411_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (obj_next_to ?char ?obj) (sittable ?obj))\\n  :effect (next_to ?char ?obj)\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (lookable ?obj))\\n  :effect (facing ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj) (off ?obj))\\n  :effect (on ?obj)\\n)\"\n}"
    },
    {
        "identifier": "454_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (not (next_to ?char ?obj)) (next_to ?char ?obj))\\n)\\n\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (not (facing ?char ?obj)) (facing ?char ?obj))\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (has_switch ?obj)\\n  :effect (and (off ?obj) (on ?obj))\\n)\"\n}"
    },
    {
        "identifier": "459_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "548_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\"}"
    },
    {
        "identifier": "595_1",
        "llm_output": "{\n\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (not (facing ?char ?obj)) (next_to ?char ?obj))\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (facing ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (next_to ?char ?obj))\\n  :effect (on ?obj)\\n)\"\n}\n"
    },
    {
        "identifier": "684_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (next_to ?char ?obj)\\n            )\\n  :effect (and\\n                (next_to ?char ?obj)\\n            )\\n)\\n\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (next_to ?char ?obj)\\n            )\\n  :effect (and\\n                (facing ?char ?obj)\\n            )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (on ?obj)\\n                (has_switch ?obj)\\n                (has_plug ?obj)\\n                (plugged_in ?obj)\\n            )\\n  :effect (and\\n                (on ?obj)\\n            )\\n)\"}"
    },
    {
        "identifier": "74_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (exists (?x - object) (and (obj_inside ?char ?x) (obj_inside ?obj ?x)))\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (facing ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (exists (?x - object) (and (plugged_in ?x) (has_switch ?x)))\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n  )\\n)\"\n}"
    },
    {
        "identifier": "806_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (next_to ?char ?obj)  ; The character must be close to the object\\n                )\\n  :effect (and\\n             (next_to ?char ?obj)  ; The character is now close to the object\\n           )\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (next_to ?char ?obj)  ; The character must be close to the object\\n                )\\n  :effect (and\\n             (facing ?char ?obj)  ; The character is now facing the object\\n           )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_switch ?obj)  ; The object must have a switch\\n                    (obj_inside ?obj ?room)  ; The object must be inside a room\\n                )\\n  :effect (on ?obj)  ; The object is now turned on\\n)\"\n}"
    },
    {
        "identifier": "98_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (not (next_to ?char ?obj)) (next_to ?char ?obj))\\n)\\n\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (not (facing ?char ?obj)) (facing ?char ?obj))\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (has_switch ?obj)\\n  :effect (and (not (off ?obj)) (on ?obj))\\n)\"\n}"
    },
    {
        "identifier": "1064_1",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (and (holds_rh ?char ?obj))\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (movable ?obj) (obj_next_to ?char ?obj))\\n  :effect (and (next_to ?char ?obj))\\n)\\n\"\n}"
    },
    {
        "identifier": "156_1",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (grabbable ?obj) (next_to ?char ?obj)\\n  :effect (holds_rh ?char ?obj)\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\"\n}"
    },
    {
        "identifier": "171_2",
        "llm_output": "{\n    \"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (can_open ?obj)  ; make sure the object can be opened\\n                  (next_to ?char ?obj)  ; the character should be next to the object to open it\\n                )\\n  :effect (and\\n             (open ?obj)  ; the object is now open\\n           )\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (grabbable ?obj)  ; ensure the object is grabbable\\n                    (next_to ?char ?obj)  ; the character is close enough to grab the object\\n                )\\n  :effect (and\\n              (holds_rh ?char ?obj)  ; the character now holds the object\\n          )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)  ; the character is already next to the object\\n  :effect ()  ; no effect, as walking towards does not change the state\\n)\"\n}"
    },
    {
        "identifier": "175_2",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (grabbable ?obj)  ; the object must be grabbable\\n                    (next_to ?char ?obj)  ; the character should be next to the object\\n                )\\n  :effect (and\\n                 (holds_rh ?char ?obj)  ; the character is now holding the object\\n               )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "181_2",
        "llm_output": "{\n    \"output\": \"\n(:action grab\n  :parameters (?char - character ?obj - object)\n  :precondition (and\n                  (grabbable ?obj)\n                  (next_to ?char ?obj)\n                )\n  :effect (and\n              (hold_rh ?char ?obj)\n          )\n)\n(:action walk_towards\n  :parameters (?char - character ?obj - object)\n  :precondition (next_to ?char ?obj)\n  :effect ()\n)\n\"\n}"
    },
    {
        "identifier": "26_1",
        "llm_output": "{\n  \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (grabbable ?obj)\\n                (next_to ?char ?obj)\\n              )\\n  :effect (and\\n             (holds_rh ?char ?obj)\\n           )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "286_2",
        "llm_output": "{\n    \"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (can_open ?obj)\\n    (next_to ?char ?obj)\\n    (not (open ?obj))\\n  )\\n  :effect (open ?obj)\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (grabbable ?obj)\\n    (next_to ?char ?obj)\\n    (not (holds_rh ?char ?obj))\\n    (not (holds_lh ?char ?obj))\\n  )\\n  :effect (or\\n    (and (not (holds_rh ?char ?obj)) (holds_lh ?char ?obj))\\n    (and (not (holds_lh ?char ?obj)) (holds_rh ?char ?obj))\\n  )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "291_1",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (and (holds_rh ?char ?obj))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "317_2",
        "llm_output": "{\"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (can_open ?obj) (next_to ?char ?obj) (closed ?obj))\\n  :effect (and (not (closed ?obj)) (open ?obj))\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (and (holds_rh ?char ?obj))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "488_2",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (grabbable ?obj)\\n                  (next_to ?char ?obj)\\n                )\\n  :effect (and\\n             (when (next_to ?char ?obj)(not (next_to ?char ?obj)))\\n             (holds_rh ?char ?obj)\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (movable ?char)\\n                  (movement_obj ?obj)\\n                )\\n  :effect (and\\n             (next_to ?char ?obj)\\n           )\\n)\\n\"}"
    },
    {
        "identifier": "510_1",
        "llm_output": "{\"output\":\"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (grabbable ?obj)\\n    (obj_next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj)\\n  )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (obj_next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\\n\"}"
    },
    {
        "identifier": "528_1",
        "llm_output": "{\n    \"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (can_open ?obj)\\n                   (obj_next_to ?char ?obj)\\n                   (closed ?obj)\\n               )\\n  :effect (and\\n               (not (closed ?obj))\\n           )\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)\\n                   (obj_next_to ?char ?obj)\\n               )\\n  :effect (and\\n               (holds_rh ?char ?obj)\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (inside ?char home_office)\\n                   (obj_next_to ?char ?obj)\\n               )\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "532_1",
        "llm_output": "{\n  \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (and (holds_rh ?char ?obj))\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n\"\n}"
    },
    {
        "identifier": "589_1",
        "llm_output": "{\n\t\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (and (holds_rh ?char ?obj))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "600_1",
        "llm_output": "{\n    \"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (can_open ?obj)\\n                 (obj_next_to ?char ?obj)\\n                 (closed ?obj)\\n             )\\n  :effect (and\\n              (not (closed ?obj))\\n              (open ?obj)\\n          )\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (grabbable ?obj)\\n                 (next_to ?char ?obj)\\n             )\\n  :effect (and\\n              (not (next_to ?char ?obj))\\n              (holds_rh ?char ?obj)\\n          )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n\"\n}"
    },
    {
        "identifier": "662_1",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)  ; The object must be grabbable\\n                   (next_to ?char ?obj)  ; The character must be next to the object\\n                 )\\n  :effect (and\\n               (holds_rh ?char ?obj)  ; The character now holds the object\\n             )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)  ; The character must be next to the target object\\n  :effect ()  ; No effect\\n)\"\n}"
    },
    {
        "identifier": "688_1",
        "llm_output": "{\n\t\"output\": \"(:action grab\\r\\n  :parameters (?char - character ?obj - object)\\r\\n  :precondition (and\\r\\n                   (grabbable ?obj)  ; The object must be grabbable\\r\\n                   (next_to ?char ?obj)   ; The character must be next to the object\\r\\n                 )\\r\\n  :effect (and\\r\\n               (holds_rh ?char ?obj)  ; The character is now holding the object in the right hand\\r\\n               (holds_lh ?char ?obj)  ; The character is now holding the object in the left hand\\r\\n            )\\r\\n)\\r\\n(:action walk_towards\\r\\n  :parameters (?char - character ?obj - object)\\r\\n  :precondition (next_to ?char ?obj)  ; The character must be next to the object to walk towards it\\r\\n  :effect ()\\r\\n)\\r\\n\"\n}"
    },
    {
        "identifier": "787_1",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (grabbable ?obj))\\n  :effect (and (holds_rh ?char ?obj))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and)\\n)\\n\"}"
    },
    {
        "identifier": "788_1",
        "llm_output": "{\"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (can_open ?obj) (next_to ?char ?obj))\\n  :effect (and (not (closed ?obj)) (open ?obj))\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (and (not (next_to ?char ?obj)) (holds_rh ?char ?obj))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\\n\"}"
    },
    {
        "identifier": "814_1",
        "llm_output": "{\n    \"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (can_open ?obj) (next_to ?char ?obj) (closed ?obj))\\n  :effect (and (not (closed ?obj)) (open ?obj))\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj) (not (obj_ontop ?obj ?_)) (inside_room ?char ?obj))\\n  :effect (and (exists (?hand - object) (and (hold ?obj ?hand) (not (grabbable ?obj) (not (obj_inside ?obj ?hand)))\\n)\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n\"\n}"
    },
    {
        "identifier": "850_2",
        "llm_output": "{\n    \"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (can_open ?obj) (next_to ?char ?obj) (closed ?obj))\\n  :effect (and (not (closed ?obj)) (open ?obj))\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (and (not (next_to ?char ?obj)) (holds_rh ?char ?obj))\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (movable ?char) (next_to ?char ?obj))\\n  :effect (and (next_to ?char ?obj) (not (inside_room ?char ?obj)))\\n)\"\n}"
    },
    {
        "identifier": "861_2",
        "llm_output": "{\n\t\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (grabbable ?obj)  ; The object must be grabbable\\n                    (next_to ?char ?obj)  ; The character must be next to the object\\n                )\\n  :effect (and\\n                    (holds_rh ?char ?obj)  ; Character now holds the object\\n                )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)  ; The character is next to the destination\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "878_2",
        "llm_output": "{\n    \"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (containers ?obj)  ; the object must be a container\\n                   (can_open ?obj)  ; the object must be able to be opened\\n                   (inside_room ?obj dining_room)  ; the object must be inside the dining room\\n                   (obj_inside water ?obj)  ; the water object must be inside the container\\n                   (closed ?obj)  ; the container must be closed\\n                   (next_to ?char ?obj)  ; character must be next to the object\\n               )\\n  :effect (and\\n             (not (closed ?obj))  ; the container is now open\\n           )\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)  ; the object must be grabbable\\n                   (next_to ?char ?obj)  ; the character must be next to the object\\n               )\\n  :effect (and\\n             (holds_rh ?char ?obj)  ; the character now holds the object in the right hand\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)  ; the character must be next to the object\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "1073_1",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (grabbable ?obj)\\n        (next_to ?char ?obj)\\n    )\\n  :effect (and\\n        (holds_rh ?char ?obj)\\n    )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\"}"
    },
    {
        "identifier": "1088_1",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (grabbable ?obj)\\n                    (next_to ?char ?obj)\\n                 )\\n  :effect (and\\n              (holds_rh ?char ?obj)\\n            )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "15_2",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (grabbable ?obj)\\n                  (next_to ?char ?obj)\\n              )\\n  :effect (and\\n              (holds_rh ?char ?obj)\\n              (not (next_to ?char ?obj))\\n          )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and\\n              (next_to ?char ?obj)\\n          )\\n)\\n\"}"
    },
    {
        "identifier": "163_1",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (and (holds_rh ?char ?obj))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\"\n}"
    },
    {
        "identifier": "16_2",
        "llm_output": "{\n  \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj) \\n  :effect (holds_rh ?char ?obj)\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj) \\n  :effect (and (exists (?x - object) (obj_ontop ?x ?obj)) (next_to ?char ?obj))\\n)\\n\"\n}"
    },
    {
        "identifier": "192_1",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (grabbable ?obj)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj)\\n  )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "208_2",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (grabbable ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj)\\n    (not (next_to ?char ?obj))\\n  )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\\n\"}"
    },
    {
        "identifier": "221_2",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (and (when (grabbable ?obj) (not (grabbable ?obj))) (ontop ?obj ?char))\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\\n\"}"
    },
    {
        "identifier": "241_2",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (and (holds_rh ?char ?obj))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\\n(:action standup\\n  :parameters (?char - character)\\n  :precondition (sitting ?char)\\n  :effect ()\\n)\"}"
    },
    {
        "identifier": "341_1",
        "llm_output": "{\n    \"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (can_open ?obj)\\n                 (next_to ?char ?obj)\\n             )\\n  :effect (and\\n               (open ?obj)\\n           )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (grabbable ?obj)\\n                 (next_to ?char ?obj)\\n             )\\n  :effect (and\\n               (holds_rh ?char ?obj)\\n               (not (grabbable ?obj))\\n           )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "484_1",
        "llm_output": "{\n\t\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (and (holds_rh ?char ?obj))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "504_2",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)\\n                   (next_to ?char ?obj)\\n                 )\\n  :effect (and\\n             (obj_next_to ?char ?obj)\\n           )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\"\n}"
    },
    {
        "identifier": "508_2",
        "llm_output": "{\n  \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (grabbable ?obj)\\n                (next_to ?char ?obj)\\n                (movable ?obj))\\n  :effect (and\\n                (holds_rh ?char ?obj))\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "544_1",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (and (holds_rh ?char ?obj))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "57_1",
        "llm_output": "{\n  \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (movable ?obj) (next_to ?char ?obj) (grabbable ?obj))\\n  :effect (and (holds_rh ?char ?obj))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (next_to ?char ?obj))\\n)\\n\"\n}"
    },
    {
        "identifier": "617_2",
        "llm_output": "{\n    \"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (can_open ?obj) (next_to ?char ?obj) (closed ?obj))\\n  :effect (and (not (closed ?obj)) (open ?obj))\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (and (holds_rh ?char ?obj))\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "628_1",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)\\n                   (next_to ?char ?obj)\\n                )\\n  :effect (and\\n               (holds_rh ?char ?obj)\\n               (not (next_to ?char ?obj))\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "688_2",
        "llm_output": "{\n\t\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (grabbable ?obj)  ; The object must be grabbable\\n                (next_to ?char ?obj)  ; The character must be next to the object\\n            )\\n  :effect (and\\n                (holds_rh ?char ?obj)  ; The character is now holding the object\\n            )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)  ; The character must be next to the destination\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "693_2",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)\\n                   (next_to ?char ?obj)\\n               )\\n  :effect (and\\n              (holds_rh ?char ?obj)\\n              (not (next_to ?char ?obj))\\n           )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "821_1",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (grabbable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (holds_rh ?char ?obj)\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "86_1",
        "llm_output": "{\n\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)\\n                   (next_to ?char ?obj)\\n                 )\\n  :effect (and\\n             (holds_rh ?char ?obj)\\n             (not (next_to ?char ?obj))\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\"\n}"
    },
    {
        "identifier": "896_2",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (grabbable ?obj)  ; obj can be grabbed\\n                    (next_to ?char ?obj)  ; char is next to obj\\n                )\\n  :effect (and\\n                    (holds_rh ?char ?obj)  ; char is holding obj with right hand\\n                )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (movable ?obj)  ; obj is movable\\n                    (next_to ?char ?obj)  ; char is next to obj\\n                )\\n  :effect (and\\n                    (next_to ?char ?obj)  ; char is now next to obj\\n                )\\n)\\n\"}"
    },
    {
        "identifier": "897_2",
        "llm_output": "{\"output\":\"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)  ; the object must be grabbable\\n                   (obj_next_to ?char ?obj)  ; character must be next to the object\\n                 )\\n  :effect (and\\n             (holds_rh ?char ?obj)  ; now character is holding the object\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (obj_next_to ?char ?obj)  ; character is next to the object\\n  :effect ()\\n)\"}"
    },
    {
        "identifier": "1083_2",
        "llm_output": "{\n    \"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n                (movable ?obj2)\\n                (next_to ?char ?obj1)\\n            )\\n  :effect (and\\n              (not (obj_next_to ?obj1 ?char))\\n              (obj_ontop ?obj1 ?obj2)\\n          )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (has_switch ?obj)\\n                  (next_to ?char ?obj)\\n                  (plugged_in ?obj)\\n                  (closed ?obj)\\n              )\\n  :effect (on ?obj)\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (grabbable ?obj)\\n                  (next_to ?char ?obj)\\n              )\\n  :effect (and\\n                (not (next_to ?char ?obj))\\n                (either (holds_rh ?char ?obj) (holds_lh ?char ?obj))\\n            )\\n)\\n\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (can_open ?obj)\\n                  (obj_next_to ?char ?obj)\\n                  (open ?obj)\\n              )\\n  :effect (and\\n                (not (open ?obj))\\n                (closed ?obj)\\n            )\\n)\\n\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (can_open ?obj)\\n                  (obj_next_to ?char ?obj)\\n                  (closed ?obj)\\n              )\\n  :effect (and\\n                (not (closed ?obj))\\n                (open ?obj)\\n            )\\n)\\n\"\n}"
    },
    {
        "identifier": "392_2",
        "llm_output": "{\n    \"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n                        (containers ?obj2)\\n                        (movable ?obj1)\\n                        (next_to ?char ?obj1)\\n                        (not (obj_ontop ?obj1 ?obj2))\\n                      )\\n  :effect (obj_ontop ?obj1 ?obj2)\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (not (next_to ?char ?obj)) (next_to ?char ?obj))\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                        (has_switch ?obj)\\n                        (on ?obj)\\n                        (plugged_in ?obj)\\n                        (next_to ?char ?obj)\\n                      )\\n  :effect (on ?obj)\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                        (grabbable ?obj)\\n                        (next_to ?char ?obj)\\n                        (not (ontop ?char ?obj))\\n                      )\\n  :effect (ontop ?char ?obj)\\n)\\n\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                        (can_open ?obj)\\n                        (open ?obj)\\n                        (next_to ?char ?obj)\\n                      )\\n  :effect (and (not (open ?obj)) (closed ?obj))\\n)\\n\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                        (can_open ?obj)\\n                        (closed ?obj)\\n                        (next_to ?char ?obj)\\n                      )\\n  :effect (and (not (closed ?obj)) (open ?obj))\\n)\\n\"\n}"
    },
    {
        "identifier": "755_2",
        "llm_output": "{\n    \"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n                   (grabbable ?obj1)\\n                   (movable ?obj1)\\n                   (obj_next_to ?obj1 ?obj2)\\n                   (next_to ?char ?obj1)\\n                 )\\n  :effect (and\\n             (not (obj_next_to ?obj1 ?obj2))\\n             (ontop ?obj1 ?obj2)\\n           )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_switch ?obj)\\n                   (closed ?obj)\\n                   (plugged_in ?obj)\\n                   (next_to ?char ?obj)\\n                 )\\n  :effect (on ?obj)\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)\\n                   (next_to ?char ?obj)\\n                 )\\n  :effect (and\\n             (not (next_to ?char ?obj))\\n             (holds_rh ?char ?obj)\\n           )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (can_open ?obj)\\n                   (closed ?obj)\\n                   (next_to ?char ?obj)\\n                 )\\n  :effect (not (closed ?obj))\\n)\"\n}"
    },
    {
        "identifier": "124_1",
        "llm_output": "{\n\t\"output\": \"(:action walk_towards:parameters (?char - character ?obj - object):precondition (and (next_to ?char ?obj)):effect ((next_to ?char ?obj)))(:action sit:parameters (?char - character ?obj - object):precondition (and (sittable ?obj) (next_to ?char ?obj)):effect (and (sitting ?char) (ontop ?char ?obj)))\"\n}"
    },
    {
        "identifier": "137_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (next_to ?char ?obj)\\n                   (movable ?obj)\\n               )\\n  :effect (and\\n               (not (next_to ?char ?obj))\\n               (next_to ?char ?obj)\\n           )\\n)\\n\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (sittable ?obj)\\n                   (next_to ?char ?obj)\\n               )\\n  :effect (and\\n               (not (next_to ?char ?obj))\\n               (sitting ?char)\\n               (ontop ?char ?obj)\\n           )\\n)\\n\"}"
    },
    {
        "identifier": "204_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\"}"
    },
    {
        "identifier": "268_1",
        "llm_output": "{\n\t\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (next_to ?char ?obj) (not (next_to ?char ?obj)))\\n)\\n\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (next_to ?char ?obj))\\n  :effect (and (sitting ?char) (ontop ?char ?obj))\\n)\"\n}"
    },
    {
        "identifier": "297_2",
        "llm_output": "{\n\t\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (next_to ?char ?obj)  ; the character must be next to the object\\n                    (movable ?obj)  ; the object must be movable\\n                )\\n  :effect (and\\n               (next_to ?char ?obj) ; the character is now next to the object\\n           )\\n)\\n\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (sittable ?obj)  ; the object must be sittable\\n                    (next_to ?char ?obj)  ; the character must be next to the object\\n                )\\n  :effect (and\\n               (lying ?char)  ; the character is now lying\\n               (ontop ?char ?obj) ; the character is now on top of the object\\n           )\\n)\"\n}"
    },
    {
        "identifier": "299_1",
        "llm_output": "{\n  \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (inside ?obj) ; target object must be inside\\n                 (not (sitting ?char)) ; character is not sitting\\n             )\\n  :effect (and\\n               (next_to ?char ?obj) ; character is now next to the target object\\n           )\\n)\\n\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (sittable ?obj) ; obj is sittable\\n                 (next_to ?char ?obj) ; character is next to the obj\\n                 (not (sitting ?char)) ; character is not already sitting\\n             )\\n  :effect (and\\n               (sitting ?char) ; character is now sitting\\n               (ontop ?char ?obj) ; character is on top of obj\\n           )\\n)\"\n}"
    },
    {
        "identifier": "300_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)  ; The character must be next to the object\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)  ; The character is now next to the object\\n  )\\n)\\n\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (sittable ?obj)  ; The object must be sittable\\n    (next_to ?char ?obj)  ; The character must be next to the object\\n  )\\n  :effect (and\\n    (sitting ?char)  ; The character is now sitting\\n    (ontop ?char ?obj)  ; The character is now on top of the object\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "321_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (next_to ?char ?obj)\\n                (movable ?obj)\\n            )\\n  :effect (next_to ?char ?obj)\\n)\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (sittable ?obj)\\n                (next_to ?char ?obj)\\n                (movable ?char)\\n            )\\n  :effect (and\\n                (sitting ?char)\\n                (ontop ?char ?obj)\\n            )\\n)\"\n}"
    },
    {
        "identifier": "332_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (and (movable ?char) (obj_next_to ?char ?obj))\\n:effect (and (next_to ?char ?obj))\\n)\\n\\n(:action sit\\n:parameters (?char - character ?obj - object)\\n:precondition (and (sittable ?obj) (next_to ?char ?obj))\\n:effect (and (sitting ?char) (ontop ?char ?obj))\\n)\\n\"}"
    },
    {
        "identifier": "379_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "387_1",
        "llm_output": "{\"output\":\"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\"}"
    },
    {
        "identifier": "390_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (next_to ?char ?obj))\\n)\\n\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (next_to ?char ?obj))\\n  :effect (and (sitting ?char) (ontop ?char ?obj))\\n)\"\n}"
    },
    {
        "identifier": "3_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and\\n             (not (next_to ?char ?obj))\\n             (next_to ?char ?obj)\\n           )\\n)\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (sittable ?obj)  ; The object should be sittable\\n                   (next_to ?char ?obj)  ; The character should be next to the object\\n                   (not (sitting ?char))  ; The character should not be sitting already\\n               )\\n  :effect (and\\n             (sitting ?char)  ; The character is now sitting\\n             (ontop ?char ?obj)  ; The character is now on top of the object\\n           )\\n)\"\n}"
    },
    {
        "identifier": "416_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition ()\\n:effect ())\\n\\n(:action lie\\n:parameters (?char - character ?obj - object)\\n:precondition ()\\n:effect ())\"}"
    },
    {
        "identifier": "438_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "442_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (next_to ?char ?obj))\\n  :effect (and (sitting ?char) (ontop ?char ?obj))\\n)\"\n}"
    },
    {
        "identifier": "447_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\\n\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (next_to ?char ?obj))\\n  :effect (and (sitting ?char) (ontop ?char ?obj))\\n)\\n\"}"
    },
    {
        "identifier": "449_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\"}"
    },
    {
        "identifier": "455_1",
        "llm_output": "{\n  \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (sittable ?obj)\\n                    (next_to ?char ?obj)\\n                )\\n  :effect (and\\n                    (not (next_to ?char ?obj))\\n                    (next_to ?char ?obj)\\n                )\\n)\\n\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (sittable ?obj)\\n                    (next_to ?char ?obj)\\n                )\\n  :effect (and\\n                    (not (sitting ?char))\\n                    (sitting ?char)\\n                    (ontop ?char ?obj)\\n                )\\n)\"\n}"
    },
    {
        "identifier": "456_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (not (next_to ?char ?obj)) (next_to ?char ?obj))\\n)\\n\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (next_to ?char ?obj))\\n  :effect (and (sitting ?char) (lying ?char) (ontop ?char ?obj))\\n)\\n\"\n}"
    },
    {
        "identifier": "473_1",
        "llm_output": "{\"output\":\"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and\\n             (not (next_to ?char ?obj))\\n             (next_to ?char ?obj)\\n           )\\n)\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                     (sittable ?obj)\\n                     (next_to ?char ?obj)\\n                 )\\n  :effect (and\\n             (sitting ?char)\\n             (ontop ?char ?obj)\\n           )\\n)\"}"
    },
    {
        "identifier": "490_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (obj_next_to ?char ?obj)\\n  :effect (not (next_to ?char ?obj) (next_to ?char ?obj))\\n)\\n\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (next_to ?char ?obj))\\n  :effect (and (not (sitting ?char)) (sitting ?char) (ontop ?char ?obj))\\n)\"\n}"
    },
    {
        "identifier": "563_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (not (sitting ?char)) (not (lying ?char)) (not (standing ?char)) (not (ontop ?char ?obj)) (next_to ?char ?obj))\\n)\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (not (sitting ?char)) (lying ?char) (not (standing ?char)) (not (ontop ?char ?obj)) (next_to ?char ?obj))\\n)\"\n}"
    },
    {
        "identifier": "567_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (movable ?char)\\n                  (obj_next_to ?char ?obj)\\n              )\\n  :effect (and\\n               (not (next_to ?char ?obj))\\n               (next_to ?char ?obj)\\n           )\\n)\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (sittable ?obj)\\n                  (next_to ?char ?obj)\\n              )\\n  :effect (lying ?char)\\n)\\n\"\n}"
    },
    {
        "identifier": "570_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (not (sitting ?char)) (next_to ?char ?obj))\\n)\\n\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (sittable ?obj))\\n  :effect (and (sitting ?char) (ontop ?char ?obj))\\n)\\n\"}"
    },
    {
        "identifier": "674_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "6_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (inside ?char ?obj) (next_to ?char ?obj))\\n  :effect ())\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (next_to ?char ?obj) (obj_next_to ?char ?obj))\\n  :effect (and (sitting ?char) (ontop ?char ?obj)))\\n\"}"
    },
    {
        "identifier": "742_1",
        "llm_output": "{\n  \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "762_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ())\\n\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ())\\n\"\n}"
    },
    {
        "identifier": "793_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\\n\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (next_to ?char ?obj))\\n  :effect (and (lying ?char) (ontop ?char ?obj))\\n)\\n\"}"
    },
    {
        "identifier": "798_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (next_to ?char ?obj)  ; character must be next to the target object\\n                )\\n  :effect (and\\n                (next_to ?char ?obj)  ; character is now next to the target object\\n            )\\n)\\n\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (sittable ?obj)  ; the object must be sittable\\n                    (next_to ?char ?obj)  ; character must be next to the sitting object\\n                )\\n  :effect (and\\n                (sitting ?char)  ; character is now sitting\\n                (ontop ?char ?obj)  ; character is now on top of the sitting object\\n            )\\n)\\n\"}"
    },
    {
        "identifier": "932_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (not (next_to ?char ?obj)) (next_to ?char ?obj))\\n)\\n\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (next_to ?char ?obj))\\n  :effect (and (sitting ?char) (ontop ?char ?obj))\\n)\"\n}"
    },
    {
        "identifier": "941_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (next_to ?char ?obj)\\n               )\\n  :effect (and\\n             (next_to ?char ?obj)\\n          )\\n)\\n\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (sittable ?obj)\\n                   (next_to ?char ?obj)\\n               )\\n  :effect (and\\n             (sitting ?char)\\n             (ontop ?char ?obj)\\n          )\\n)\"\n}"
    },
    {
        "identifier": "96_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (next_to ?char ?obj)  ; character must be next to the object\\n                )\\n  :effect (and\\n             (next_to ?char ?obj)  ; character is now next to the object\\n           )\\n)\\n\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (sittable ?obj)  ; the object must be sittable\\n                    (next_to ?char ?obj)  ; character must be next to the object\\n                )\\n  :effect (and\\n             (sitting ?char)  ; character is now sitting\\n             (ontop ?char ?obj)  ; character is now on top of the object\\n           )\\n)\\n\"}"
    },
    {
        "identifier": "976_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (sittable ?obj)\\n                   (next_to ?char ?obj)\\n                 )\\n  :effect (and\\n             (not (next_to ?char ?obj))\\n             (next_to ?char ?obj)\\n           )\\n)\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (lieable ?obj)\\n                   (next_to ?char ?obj)\\n                 )\\n  :effect (and\\n             (not (next_to ?char ?obj))\\n             (lying ?char)\\n             (ontop ?char ?obj)\\n           )\\n)\\n\"}"
    },
    {
        "identifier": "149_1",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (movable ?obj)\\n      (obj_next_to ?char ?obj)\\n    )\\n  :effect (and\\n      (grabbable ?obj)\\n      (holds_rh ?char ?obj)\\n    )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (obj_next_to ?char ?obj)\\n  :effect ()\\n)\\n\\n(:action standup\\n  :parameters (?char - character)\\n  :precondition (sitting ?char)\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "154_1",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (grabbable ?obj)\\n                (next_to ?char ?obj)\\n            )\\n  :effect (and\\n                (holds_rh ?char ?obj)\\n            )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect()\\n)\"}"
    },
    {
        "identifier": "180_1",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (grabbable ?obj))\\n  :effect (and (holds_rh ?char ?obj))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action standup\\n  :parameters (?char - character)\\n  :precondition (sitting ?char)\\n  :effect ()\\n)\"}"
    },
    {
        "identifier": "195_1",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (and (holds_rh ?char ?obj))\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "211_1",
        "llm_output": "{\"output\":\"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (and (holds_rh ?char ?obj))\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "241_1",
        "llm_output": "{\n\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (grabbable ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj)\\n  )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "264_1",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (grabbable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (\\n      (holds_rh ?char ?obj)\\n  )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (\\n      (next_to ?char ?obj)\\n  )\\n  :effect ()\\n)\\n\\n\"}"
    },
    {
        "identifier": "265_2",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (grabbable ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj)\\n  )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside ?char ?obj)\\n    (movable ?char)\\n    (movable ?obj)\\n    (exists (?loc - object) (and (obj_next_to ?char ?loc) (obj_next_to ?loc ?obj)))\\n  )\\n  :effect (next_to ?char ?obj)\\n)\\n\"\n}"
    },
    {
        "identifier": "287_2",
        "llm_output": "{\n\t\"output\": \"(:action grab :parameters (?char - character ?obj - object) :precondition (and (next_to ?char ?obj) (grabbable ?obj)) :effect (and (holds_rh ?char ?obj)))\\n(:action walk_towards :parameters (?char - character ?obj - object) :precondition (next_to ?char ?obj) :effect ())\"\n}"
    },
    {
        "identifier": "352_1",
        "llm_output": "{\n\t\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (grabbable ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj))\\n    (holds_rh ?char ?obj)\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and\\n    (forall (?x - object) (or (not (next_to ?char ?x)) (obj_next_to ?char ?x)))\\n  )\\n)\"\n}"
    },
    {
        "identifier": "360_1",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                     (grabbable ?obj)\\n                     (next_to ?char ?obj)\\n                 )\\n  :effect (and\\n                (when (next_to ?char ?obj) (holds_rh ?char ?obj))\\n            )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect\\n)\\n\"}"
    },
    {
        "identifier": "388_1",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)\\n                   (next_to ?char ?obj))\\n  :effect (and\\n               (holds_rh ?char ?obj))\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "431_1",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (movable ?obj)\\n                (next_to ?char ?obj)\\n                (grabbable ?obj)\\n            )\\n  :effect (and\\n                (holds_rh ?char ?obj)\\n            )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (movable ?char)\\n                (next_to ?char ?obj)\\n            )\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "436_1",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (grabbable ?obj)\\n    (inside ?char ?obj)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj)\\n  )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (movable ?char)\\n    (next_to ?char ?obj)\\n  )\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "442_2",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)\\n                   (obj_next_to ?char ?obj)\\n               )\\n  :effect (and\\n             (when (grabbable ?obj) (not (grabbable ?obj)))\\n             (when (obj_next_to ?char ?obj) (not (obj_next_to ?char ?obj)))\\n             (holds_rh ?char ?obj)\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (obj_next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\"\n}"
    },
    {
        "identifier": "474_2",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (\\n    (and\\n      (grabbable ?obj)  ; The object must be grabbable\\n      (next_to ?char ?obj)  ; The character must be next to the object\\n    )\\n  )\\n  :effect (\\n    (holds_rh ?char ?obj)  ; The character is now holding the object\\n  )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (\\n    (next_to ?char ?obj)  ; The character must be next to the object to walk towards it\\n  )\\n  :effect (\\n    ; Your desired effect here\\n  )\\n)\"\n}"
    },
    {
        "identifier": "482_2",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (movable ?obj)  ; the object must be movable\\n                   (grabbable ?obj)  ; the object must be grabbable\\n                   (next_to ?char ?obj)  ; the character must be next to the object\\n               )\\n  :effect (and\\n              (holds_rh ?char ?obj)  ; character is holding the object in the right hand\\n              (not (next_to ?char ?obj))  ; the character is no longer next to the object\\n            )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)  ; Require the character to be next to the destination\\n  :effect (and\\n              (next_to ?char ?obj)  ; Character is now next to the object\\n            )\\n)\\n\"}"
    },
    {
        "identifier": "497_1",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)\\n                   (next_to ?char ?obj)\\n                 )\\n  :effect (and\\n             (when (grabbable ?obj) (not (grabbable ?obj)))\\n             (holds_rh ?char ?obj)\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "553_1",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)\\n                   (next_to ?char ?obj)\\n                )\\n  :effect (and\\n                   (holds_rh ?char ?obj)\\n                )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\"}"
    },
    {
        "identifier": "601_2",
        "llm_output": "{\n\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)  ; The object must be grabbable\\n                   (next_to ?char ?obj)  ; The character must be next to the object\\n                 )\\n  :effect (and\\n             (holds_rh ?char ?obj)  ; The character now holds the object\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)  ; This is the precondtion for walking towards an object\\n  :effect (and\\n             ; There is no specific effect in this action\\n           )\\n)\"\n}"
    },
    {
        "identifier": "70_1",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)  ; the object must be grabbable\\n                   (next_to ?char ?obj)  ; character must be next to the object\\n                )\\n  :effect (and\\n             (holds_rh ?char ?obj)  ; character is now holding the object\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)  ; character must be next to the object\\n  :effect ()\\n)\\n\"\n}"
    },
    {
        "identifier": "864_2",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (grabbable ?obj)  ; obj must be grabbable\\n                (next_to ?char ?obj)  ; char must be next to the obj\\n            )\\n  :effect (and\\n                (holds_rh ?char ?obj)  ; char is now holding obj\\n            )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)  ; char must be next to the obj\\n  :effect ()\\n)\"}"
    },
    {
        "identifier": "963_2",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (grabbable ?obj)  ; The object must be grabbable\\n                  (next_to ?char ?obj)  ; The character must be next to the object\\n              )\\n  :effect (and\\n                (holds_rh ?char ?obj)  ; The character is holding the object\\n            )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)  ; The character must be next to the object\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "974_1",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (grabbable ?obj)  ; the object must be grabbable\\n                  (next_to ?char ?obj)  ; character is next to the object\\n              )\\n  :effect (holds_rh ?char ?obj)  ; character is now holding the object\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (movable ?obj)  ; the object must be movable\\n                  (next_to ?char ?obj)  ; character is next to the object\\n              )\\n  :effect (next_to ?char ?obj)  ; character is next to the object\\n)\"\n}"
    },
    {
        "identifier": "976_2",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (grabbable ?obj)  ; The object must be grabbable\\n                  (next_to ?char ?obj)  ; The character must be next to the object\\n             )\\n  :effect (and\\n                  (holds_rh ?char ?obj)  ; The character is now holding the object\\n             )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (next_to ?char ?obj)  ; The character must be next to the target\\n              )\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "99_2",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "183_2",
        "llm_output": "{\n    \"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n                      (grabbable ?obj1)\\n                      (obj_next_to ?obj1 ?obj2)\\n                      (next_to ?char ?obj2)\\n                  )\\n  :effect (obj_ontop ?obj1 ?obj2)\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                      (has_switch ?obj)\\n                      (on ?obj)\\n                      (next_to ?char ?obj)\\n                  )\\n  :effect (and\\n              (on ?obj)\\n              (open ?obj)\\n          )\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (grabbable ?obj)\\n  :effect (or\\n           (and\\n                (holds_rh ?char ?obj)\\n                (not (movable ?obj))\\n           )\\n           (and\\n                (holds_lh ?char ?obj)\\n                (not (movable ?obj))\\n           )\\n)\\n\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                      (can_open ?obj)\\n                      (open ?obj)\\n                      (next_to ?char ?obj)\\n                  )\\n  :effect (and\\n              (not (open ?obj))\\n              (closed ?obj)\\n          )\\n)\\n\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                      (can_open ?obj)\\n                      (closed ?obj)\\n                      (next_to ?char ?obj)\\n                  )\\n  :effect (and\\n              (not (closed ?obj))\\n              (open ?obj)\\n          )\\n)\"\n}"
    },
    {
        "identifier": "229_1",
        "llm_output": "{\n    \"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (or\\n                    (and\\n                        (movable ?obj1)  ; object 1 must be movable\\n                        (obj_next_to ?char ?obj2)  ; character must be next to object 2\\n                    )\\n                    (and\\n                        (movable ?obj2)  ; object 2 must be movable\\n                        (obj_next_to ?char ?obj1)  ; character must be next to object 1\\n                    )\\n                )\\n  :effect (and\\n             (not (obj_next_to ?char ?obj1))  ; object 1 is no longer next to character\\n             (not (obj_next_to ?char ?obj2))  ; object 2 is no longer next to character\\n             (or\\n                (obj_ontop ?obj1 ?obj2)  ; object 1 is on top of object 2\\n                (obj_ontop ?obj2 ?obj1)  ; object 2 is on top of object 1\\n             )\\n          )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)  ; character must be next to the object\\n  :effect ()\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_switch ?obj)  ; object must have a switch\\n                    (next_to ?char ?obj)  ; character must be next to the object\\n                )\\n  :effect (on ?obj)  ; the object is now turned on\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (grabbable ?obj)  ; object must be grabbable\\n  :effect (or\\n             (holds_rh ?char ?obj)  ; character is now holding the object with right hand\\n             (holds_lh ?char ?obj)  ; character is now holding the object with left hand\\n          )\\n)\\n\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (can_open ?obj)  ; object must be openable\\n                    (next_to ?char ?obj)  ; character must be next to the object\\n                )\\n  :effect (closed ?obj)  ; the object is now closed\\n)\\n\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (can_open ?obj)  ; object must be openable\\n                    (next_to ?char ?obj)  ; character must be next to the object\\n                )\\n  :effect (open ?obj)  ; the object is now open\\n)\\n\"\n}"
    },
    {
        "identifier": "310_2",
        "llm_output": "{\n    \"output\": \"(:action switch_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect () \\n)\\n(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition ()\\n  :effect () \\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect () \\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect () \\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect () \\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect () \\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect () \\n)\"\n}"
    },
    {
        "identifier": "721_2",
        "llm_output": "{\n    \"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n                   (movable ?obj1)\\n                   (movable ?obj2)\\n                   (next_to ?char ?obj1) ; Character should be next to obj1\\n                   (next_to ?char ?obj2) ; Character should be next to obj2\\n               )\\n  :effect (obj_ontop ?obj1 ?obj2) ; Object obj1 is now on top of obj2\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj) ; Character should be next to obj\\n  :effect ()\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                     (has_switch ?obj) ; obj has switch\\n                     (plugged_in ?obj)  ; obj is plugged in\\n                     (next_to ?char ?obj) ; character is next to obj\\n               )\\n  :effect (on ?obj)\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                     (grabbable ?obj)  ; obj can be grabbed\\n                     (next_to ?char ?obj)  ; Character is next to obj\\n               )\\n  :effect (and\\n              (holds_rh ?char ?obj)  ; Character now holds obj with right hand\\n              (not (next_to ?char ?obj))  ; Character is no longer next to obj\\n          )\\n)\\n\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                     (can_open ?obj)  ; obj can be opened\\n                     (next_to ?char ?obj)  ; character is next to obj\\n               )\\n  :effect (and\\n              (open ?obj)  ; obj is now open\\n              (not (closed ?obj))  ; obj is no longer closed\\n          )\\n)\\n\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                     (can_open ?obj)  ; obj can be opened\\n                     (next_to ?char ?obj)  ; character is next to obj\\n               )\\n  :effect (and\\n              (closed ?obj)  ; obj is now closed\\n              (not (open ?obj))  ; obj is no longer open\\n          )\\n)\\n\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                     (has_plug ?obj) ; obj has plug\\n                     (next_to ?char ?obj) ; character is next to obj\\n                     (not (plugged_in ?obj)) ; obj is not plugged in\\n               )\\n  :effect (and\\n              (plugged_in ?obj) ; obj is now plugged in\\n              (not (plugged_out ?obj)) ; obj is no longer plugged out\\n          )\\n)\"\n}"
    },
    {
        "identifier": "764_2",
        "llm_output": "{\n    \"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n                 (clothes ?obj1)  ; the object must be a piece of clothing\\n                 (hangable ?obj2)  ; the target must be an object suitable for hanging clothes\\n                 (holds_rh ?char ?obj1)  ; character is holding clothes in the right hand\\n                 (next_to ?char ?obj2)  ; character is next to the hanging object\\n               )\\n  :effect (and\\n                 (when (holds_rh ?char ?obj1)(not (holds_rh ?char ?obj1)))  ; if clothes are held in the right hand, they are no longer held\\n                 (when (holds_lh ?char ?obj1) (not (holds_lh ?char ?obj1)))  ; if clothes are held in the right hand, they are no longer held\\n                 (ontop ?obj1 ?obj2)  ; clothes are now hanging on the object\\n               )\\n\\n) (:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (next_to ?char ?obj))\\n\\n) (:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (next_to ?char ?obj))\\n  :effect (and (on ?obj))\\n\\n) (:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (and (holds_lh ?char ?obj) (movable ?obj))\\n\\n) (:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (can_open ?obj) (next_to ?char ?obj))\\n  :effect (and (closed ?obj) (not (can_open ?obj)))\\n\\n) (:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (can_open ?obj) (next_to ?char ?obj))\\n  :effect (and (not (closed ?obj)) (can_open ?obj))\\n\\n)\"\n}"
    },
    {
        "identifier": "419_2",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (grabbable ?obj)\\n  :effect (and\\n             (next_to ?char ?obj)\\n             (holds_rh ?char ?obj)\\n           )\\n)\\n(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n                   (holds_rh ?char ?obj1)\\n                   (obj_next_to ?obj2 ?char)\\n                   (obj_ontop ?obj1 ?obj2)\\n                  )\\n  :effect (and\\n             (not (holds_rh ?char ?obj1))\\n             (not (next_to ?char ?obj1))\\n           )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (sittable ?obj)\\n                   (next_to ?char ?obj)\\n                  )\\n  :effect (next_to ?char ?obj)\\n)\\n\"}"
    },
    {
        "identifier": "446_2",
        "llm_output": "{\"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (can_open ?obj)  ; object can be opened\\n                  (inside_room ?obj ?char)  ; object is in the room with the character\\n                  (closed ?obj)  ; object is currently closed\\n                  (next_to ?char ?obj)  ; character is next to the object\\n              )\\n  :effect (and\\n              (not (closed ?obj))  ; object is now open\\n              (open ?obj)  ; object is in an open state\\n          )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (grabbable ?obj)  ; object is grabbable\\n                  (next_to ?char ?obj)  ; character is next to the object\\n              )\\n  :effect (and\\n              (not (next_to ?char ?obj))  ; character is no longer next to the object\\n              (when (movable ?ob...\"}"
    },
    {
        "identifier": "710_2",
        "llm_output": "{\n    \"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (\\n      (and\\n          (character ?char)\\n          (object ?obj)\\n          (can_open ?obj)\\n          (next_to ?char ?obj)\\n      )\\n  )\\n  :effect (\\n      (open ?obj)\\n  )\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (\\n      (and\\n          (character ?char)\\n          (object ?obj)\\n          (grabbable ?obj)\\n          (next_to ?char ?obj)\\n      )\\n  )\\n  :effect (\\n      (grabbable ?char ?obj)\\n  )\\n)\\n\\n(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (\\n      (and\\n          (character ?char)\\n          (object ?obj1)\\n          (object ?obj2)\\n          (grabbable ?obj1)\\n          (surfaces ?obj2)\\n          (next_to ?char ?obj2)\\n      )\\n  )\\n  :effect (\\n      (not (grabbable ?char ?obj1))\\n      (ontop ?obj1 ?obj2)\\n  )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (\\n      (and\\n          (character ?char)\\n          (object ?obj)\\n          (next_to ?char ?obj)\\n      )\\n  )\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "368_1",
        "llm_output": "{\n    \"output\": \"(:action walk_into\\n  :parameters (?char - character ?room - object)\\n  :precondition (inside ?char home_office)\\n  :effect (and (not (inside ?char home_office)) (inside ?char ?room))\\n) \\n\"\n}"
    },
    {
        "identifier": "729_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and\\n             (next_to ?char ?obj)\\n           )\\n)\"}"
    },
    {
        "identifier": "975_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ())\\n\"\n}"
    }
]
[
    {
        "identifier": "27_2",
        "llm_output": "{\"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n        (clothes ?obj1)  ; the object must be a piece of clothing\\n        (clothes ?obj2)  ; the object must be a piece of clothing\\n        (sittable ?obj2)  ; the destination must be something to sit on\\n        (next_to ?char ?obj2)  ; the character must be next to the destination\\n    )\\n  :effect (and\\n        (not (holds_rh ?char ?obj1))  ; if clothes were held, they are no longer held\\n        (not (holds_lh ?char ?obj1))  ; if clothes were held, they are no longer held\\n        (ontop ?obj1 ?obj2)  ; clothes are now on the object\\n    )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (sittable ?obj)  ; the destination must be something to sit on\\n        (next_to ?char ?obj)  ; the character must be next to the destination\\n    )\\n  :effect (and\\n        (next_to ?char ?obj)  ; the character is now next to the destination\\n    )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (has_switch ?obj)  ; the object must have a switch\\n        (on ?obj)  ; the object should be turned on\\n        (next_to ?char ?obj)  ; the character must be next to the object\\n    )\\n  :effect (and\\n        (on ?obj)  ; the object is now turned on\\n    )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (grabbable ?obj)  ; the object must be grabbable\\n        (next_to ?char ?obj)  ; the character must be next to the object\\n    )\\n  :effect (and\\n        (holds_rh ?char ?obj)  ; the character is now holding the object with the right hand\\n    )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (can_open ?obj)  ; the object can be opened\\n        (next_to ?char ?obj)  ; the character must be next to the object\\n    )\\n  :effect (and\\n        (closed ?obj)  ; the object is now closed\\n    )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (can_open ?obj)  ; the object can be opened\\n        (next_to ?char ?obj)  ; the character must be next to the object\\n        (closed ?obj)  ; the object should be closed\\n    )\\n  :effect (and\\n        (open ?obj)  ; the object is now open\\n    )\\n)\\n\"}"
    },
    {
        "identifier": "417_1",
        "llm_output": "{\"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n                    (obj_inside ?obj1 ?obj2)  ; obj1 must be inside obj2\\n                    (grabbable ?obj1)  ; obj1 must be grabbable\\n                    (sittable ?obj1)  ; obj1 must be sittable\\n                    (not (next_to ?char ?obj2))  ; char must not already be next to obj2\\n                )\\n  :effect (and\\n                (inside ?char ?obj2)  ; char is now inside obj2\\n            )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (movable ?char)  ; char must be movable\\n                    (next_to ?char ?obj)  ; char must start next to obj\\n                )\\n  :effect (and\\n                (next_to ?char ?obj)  ; char is now next to obj\\n            )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_switch ?obj)  ; obj must have a switch\\n                    (plugged_in ?obj)  ; obj must be plugged in\\n                    (closed ?obj)  ; obj must be closed\\n                    (next_to ?char ?obj)  ; char must be next to obj\\n                )\\n  :effect (and\\n                (on ?obj)  ; obj is now turned on\\n            )\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (grabbable ?obj)  ; obj must be grabbable\\n                    (next_to ?char ?obj)  ; char must be next to obj\\n                )\\n  :effect (and\\n                (holds_rh ?char ?obj)  ; char is now holding obj in the right hand\\n            )\\n)\\n\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (can_open ?obj)  ; obj must be openable\\n                    (next_to ?char ?obj)  ; char must be next to obj\\n                    (not (closed ?obj))  ; obj must not already be closed\\n                )\\n  :effect (and\\n                (not (open ?obj))  ; obj is no longer open\\n                (closed ?obj)  ; obj is now closed\\n            )\\n)\\n\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (can_open ?obj)  ; obj must be openable\\n                    (next_to ?char ?obj)  ; char must be next to obj\\n                    (not (open ?obj))  ; obj must not already be open\\n                )\\n  :effect (and\\n                (not (closed ?obj))  ; obj is no longer closed\\n                (open ?obj)  ; obj is now open\\n            )\\n)\\n\"}"
    },
    {
        "identifier": "850_1",
        "llm_output": "{\n  \"output\": \"(:action switch_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect () \\n)\\n\\n(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition ()\\n  :effect () \\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect () \\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect () \\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect () \\n)\\n\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect () \\n)\\n\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect () \\n)\"\n}"
    },
    {
        "identifier": "954_2",
        "llm_output": "{\n    \"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n                (person ?char)  ; character must be a person\\n                (clothes ?obj1)  ; obj1 must be clothes\\n                (eatable ?obj2)  ; obj2 must be eatable\\n                (inside_room ?obj1 bathroom)  ; the clothes must be in the bathroom\\n                (next_to ?char ?obj1)  ; character must be next to obj1\\n                )\\n  :effect (and\\n             (inside ?char ?obj1)  ; obj1 is now inside the character\\n             (not (next_to ?char ?obj1))  ; obj1 is no longer next to the character\\n             (not (eatable ?obj2))  ; obj2 is no longer eatable\\n             )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (person ?char)  ; character must be a person\\n                (movable ?char)  ; character must be movable\\n                (next_to ?char ?obj)  ; character must be next to the object\\n                )\\n  :effect (\\n)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (person ?char)  ; character must be a person\\n                (has_switch ?obj)  ; obj must have a switch\\n                (next_to ?char ?obj)  ; character must be next to the object\\n                (off ?obj)  ; obj must be off\\n                )\\n  :effect (and\\n                (on ?obj)  ; obj is now on\\n                (not (off ?obj))  ; obj is no longer off\\n             )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (person ?char)  ; character must be a person\\n                (grabbable ?obj)  ; obj must be grabbable\\n                (movable ?obj)  ; obj must be movable\\n                (next_to ?char ?obj)  ; character must be next to the object\\n                )\\n  :effect (and\\n                (holds_rh ?char ?obj)  ; character is now holding obj with right hand\\n                (not (next_to ?char ?obj))  ; obj is no longer next to the character\\n             )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (person ?char)  ; character must be a person\\n                (can_open ?obj)  ; obj can be opened\\n                (open ?obj)  ; obj must be open\\n                (next_to ?char ?obj)  ; character must be next to the object\\n                )\\n  :effect (and\\n                (closed ?obj)  ; obj is now closed\\n                (not (open ?obj))  ; obj is no longer open\\n             )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (person ?char)  ; character must be a person\\n                (can_open ?obj)  ; obj can be opened\\n                (closed ?obj)  ; obj must be closed\\n                (next_to ?char ?obj)  ; character must be next to the object\\n                )\\n  :effect (and\\n                (open ?obj)  ; obj is now open\\n                (not (closed ?obj))  ; obj is no longer closed\\n             )\\n)\\n\"\n}"
    },
    {
        "identifier": "11_1",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_plug ?obj)  ; The object must have a plug\\n                   (plugged_out ?obj)  ; The object should be plugged out initially\\n                   (movable ?obj)  ; The object must be movable\\n                   (inside_room ?obj ?room)  ; The object must be inside a room\\n               )\\n  :effect (and\\n             (plugged_in ?obj)  ; The object is now plugged in\\n           )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))  ; The character must be next to the object\\n  :effect (and (next_to ?char ?obj))  ; The character is now next to the object\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj))  ; The object must have a switch\\n  :effect (and (on ?obj))  ; The object is now turned on\\n)\"}"
    },
    {
        "identifier": "120_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (plugged_in ?obj)\\n                (has_switch ?obj)\\n                (obj_next_to ?char ?obj)\\n            )\\n  :effect (and\\n                (next_to ?char ?obj)\\n            )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (plugged_out ?obj)\\n                (has_switch ?obj)\\n                (next_to ?char ?obj)\\n            )\\n  :effect (and\\n                (on ?obj)\\n                (plugged_in ?obj)\\n            )\\n)\"\n}"
    },
    {
        "identifier": "125_2",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_plug ?obj)  ; the object must have a plug\\n                    (at ?char ?obj)  ; character is at the object to be plugged in\\n                    (plugged_out ?obj)  ; object is currently unplugged\\n                )\\n  :effect (and\\n                    (plugged_in ?obj)  ; object is now plugged in\\n                    (not (plugged_out ?obj))  ; object is no longer unplugged\\n                )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)  ; the character must be next to the object to walk towards it\\n  :effect (and\\n                    (at ?char ?obj)  ; character is now at the object\\n                )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (obj_next_to ?char ?obj)  ; character is next to the object\\n                    (has_switch ?obj)  ; the object must have a switch\\n                    (on ?obj)  ; object is currently off\\n                )\\n  :effect (and\\n                    (on ?obj)  ; object is now turned on\\n                    (not (off ?obj))  ; object is no longer off\\n                    (looking_at ?char ?obj)  ; character is now looking at the object\\n                )\\n)\\n\"}"
    },
    {
        "identifier": "150_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (obj_next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (clean ?obj)\\n    (plugged_in ?obj)\\n    (has_switch ?obj)\\n    (off ?obj)\\n    (obj_inside ?obj ?char)\\n  )\\n  :effect (and\\n    (on ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "160_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (person ?char)\\n                (movable ?char)\\n                (obj_next_to ?char ?obj)\\n            )\\n  :effect (and\\n             (next_to ?char ?obj)\\n           )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (person ?char)\\n                  (has_switch ?char)\\n                  (on ?obj)\\n              )\\n  :effect (and\\n             (on ?obj)\\n           )\\n)\\n\"\n}"
    },
    {
        "identifier": "180_2",
        "llm_output": "{\"output\": \"(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n             (has_switch ?obj)  ; the target object must have a switch\\n             (has_plug ?obj)    ; the target object must have a plug\\n             (obj_next_to ?obj ?obj)  ; the object must be next to itself\\n             (inside ?char ?obj)    ; the character must be inside the object\\n             (sitting ?char)    ; the character must be sitting\\n             (clean ?obj)    ; the object must be clean\\n             (off ?obj)    ; the object must be turned off\\n         )\\n  :effect (and\\n             (on ?obj)    ; the object is now turned on\\n             (plugged_in ?obj)  ; the object is now plugged in\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n             (obj_next_to ?char ?obj)  ; the character must be next to the object to walk towards it\\n         )\\n  :effect ()\\n)\\n\\n(:action standup\\n  :parameters (?char - character)\\n  :precondition (and\\n             (sitting ?char)  ; the character must be sitting to stand up\\n         )\\n  :effect ()\\n)\"}\n"
    },
    {
        "identifier": "205_1",
        "llm_output": "{\"output\":\"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (next_to ?char ?obj)\\n             )\\n  :effect (and\\n              (next_to ?char ?obj)  ; The character is now next to the object\\n           )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (has_switch ?obj)\\n                 (next_to ?char ?obj)\\n             )\\n  :effect (and\\n              (on ?obj)  ; The object is now turned on\\n           )\\n)\"}"
    },
    {
        "identifier": "222_1",
        "llm_output": "{\n  \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside ?char ?obj)\\n    (obj_next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_switch ?obj)\\n    (plugged_in ?obj)\\n    (off ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n  )\\n)\"\n}"
    },
    {
        "identifier": "232_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n\\t(next_to ?char ?obj)\\n  )\\n  :effect (and\\n\\t(next_to ?char ?obj)\\n  )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n\\t(can_open ?obj)\\n\\t(has_switch ?obj)\\n\\t(off ?obj)\\n  )\\n  :effect (and\\n\\t(on ?obj)\\n  )\\n)\"\n}"
    },
    {
        "identifier": "310_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside ?char ?obj)  ; Character is inside the object\\n    (obj_next_to ?char ?obj)  ; Character is next to the object\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)  ; Character is now next to the object\\n  )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_switch ?obj)  ; The object has a switch\\n    (obj_next_to ?char ?obj)  ; Character is next to the object\\n  )\\n  :effect (and\\n    (on ?obj)  ; The object is now turned on\\n    (not (off ?obj))  ; The object is no longer off\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "311_1",
        "llm_output": "{\n    \"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (plugged_out ?obj)  ; The object must be unplugged\\n                  (has_switch ?obj)  ; The object must have a switch\\n                  (movable ?obj)  ; The object must be movable\\n                  (clean ?obj)  ; The object must be clean\\n                  (obj_inside ?obj ?office)  ; The object must be inside the home office\\n                  (inside ?char ?bathroom)  ; The character must be inside the bathroom\\n               )\\n  :effect (plugged_in ?obj)  ; The object is now plugged in\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (inside ?char ?obj)  ; The character must be inside the object\\n                  (movable ?obj)  ; The object must be movable\\n               )\\n  :effect (next_to ?char ?obj)  ; The character is now next to the object\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (plugged_in ?obj)  ; The object must be plugged in\\n                  (on ?obj)  ; The object must be turned on\\n                  (has_switch ?obj)  ; The object must have a switch\\n                  (next_to ?char ?obj)  ; The character must be next to the object\\n              )\\n  :effect ()  ; There are no effects mentioned since the goal is already achieved\\n)\"\n}"
    },
    {
        "identifier": "331_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (inside ?char ?obj) \\n  :effect (next_to ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (obj_next_to ?char ?obj))\\n  :effect (and (on ?obj) (not (off ?obj)))\\n)\"\n}"
    },
    {
        "identifier": "345_1",
        "llm_output": "{\n  \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect ((next_to ?char ?obj)))\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (next_to ?char ?obj) (off ?obj))\\n  :effect (and (on ?obj) (not (off ?obj)))\\n)\"\n}"
    },
    {
        "identifier": "392_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (next_to ?char ?obj)\\n            )\\n  :effect (and\\n                (not (next_to ?char ?obj))\\n                (next_to ?char ?obj)\\n            )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_switch ?obj)\\n                    (next_to ?char ?obj)\\n                    (plugged_in ?obj)\\n                    (off ?obj)\\n                )\\n  :effect (and\\n            (on ?obj)\\n            (not (off ?obj))\\n        )\\n)\"}"
    },
    {
        "identifier": "394_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (obj_next_to ?char ?obj)\\n                )\\n  :effect (and\\n                (next_to ?char ?obj)\\n            )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_switch ?obj)\\n                    (obj_next_to ?char ?obj)\\n                    (off ?obj)\\n                )\\n  :effect (and\\n                (on ?obj)\\n            )\\n)\\n\"}"
    },
    {
        "identifier": "432_1",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (plugged_out ?obj)\\n                 (movable ?obj)\\n                 (clean ?obj)\\n                 (obj_inside ?obj ?char)\\n                 (inside ?char ?obj)\\n              )\\n  :effect (and\\n              (plugged_in ?obj)\\n           )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (obj_inside ?obj ?char)\\n              )\\n  :effect ()\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (plugged_in ?obj)\\n                 (on ?obj)\\n              )\\n  :effect (and\\n              (on ?obj)\\n           )\\n)\\n\"}"
    },
    {
        "identifier": "443_2",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (plugged_out ?obj)  ; The object must be unplugged\\n                  (has_plug ?obj)    ; The object must have a plug\\n                  (movable ?obj)      ; The object must be movable\\n                  (inside ?char ?obj)  ; The character must be inside the object's room\\n              )\\n  :effect (and\\n               (plugged_in ?obj)  ; The object is now plugged in\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)  ; The character must be next to the object\\n  :effect ()\\n)\\n\\n(:action switch_on\\n  :precondition (and\\n                     (on ?obj)         ; The object must be turned on\\n                     (has_switch ?obj)  ; The object must have a switch\\n                     (inside_room ?obj ?char)  ; The character must be inside the object's room\\n                 )\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "445_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (inside ?char ?obj)  ; character is inside the object\\n        (obj_next_to ?char ?obj)  ; character is next to the object\\n    )\\n  :effect (and\\n        (next_to ?char ?obj)  ; character is now next to the object\\n    )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (has_switch ?obj)  ; the object has a switch\\n        (off ?obj)  ; the object is turned off\\n        (obj_next_to ?char ?obj)  ; character is next to the object\\n    )\\n  :effect (and\\n        (on ?obj)  ; object is turned on\\n        (not (off ?obj))  ; object is no longer off\\n    )\\n)\"}"
    },
    {
        "identifier": "511_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and\\n             (next_to ?char ?obj)\\n           )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_switch ?obj)\\n                    (has_plug ?obj)\\n                    (plugged_in ?obj)\\n                    (obj_next_to ?char ?obj)\\n                 )\\n  :effect (and\\n                (on ?obj)\\n           )\\n)\"}"
    },
    {
        "identifier": "585_1",
        "llm_output": "{\"output\":\"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (person ?char)\\n      (movable ?char)\\n      (movable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n       (next_to ?char ?obj)\\n  )\\n) \\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (has_switch ?obj)\\n      (has_plug ?obj)\\n      (has_switch ?obj)\\n      (plugged_in ?obj)\\n      (off ?obj)\\n      (obj_next_to ?obj ?char)\\n  )\\n  :effect (and\\n       (on ?obj)\\n       (plugged_in ?obj)\\n  )\\n)\"}"
    },
    {
        "identifier": "604_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (next_to ?char ?obj)\\n                   (movable ?obj)\\n                 )\\n  :effect (and\\n             (not (next_to ?char ?obj))\\n             (next_to ?char ?obj)\\n           )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (plugged_in ?obj)\\n                   (has_switch ?obj)\\n                   (off ?obj)\\n                   (next_to ?char ?obj)\\n                 )\\n  :effect (and\\n            (not (off ?obj))\\n            (on ?obj)\\n          )\\n)\\n\"}"
    },
    {
        "identifier": "616_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (obj_next_to ?char ?obj)\\n              )\\n  :effect (and\\n              (next_to ?char ?obj)\\n          )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (has_switch ?obj)\\n                  (plugged_in ?obj)\\n                  (clean ?obj)\\n                  (off ?obj)\\n                  (obj_next_to ?char ?obj)\\n              )\\n  :effect (and\\n              (on ?obj)\\n          )\\n)\\n\"}"
    },
    {
        "identifier": "705_1",
        "llm_output": "{\n    \"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (plugged_out ?obj)\\n                   (movable ?obj)\\n                   (clean ?obj)\\n                   (obj_inside ?obj ?location)\\n                   (inside ?char ?location)\\n                   (next_to ?char ?obj)\\n                 )\\n  :effect (and\\n             (plugged_in ?obj)\\n           )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (obj_inside ?obj ?location)\\n                   (inside ?char ?location)\\n                 )\\n  :effect (and\\n             (next_to ?char ?obj)\\n           )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_switch ?obj)\\n                   (plugged_in ?obj)\\n                   (next_to ?char ?obj)\\n                 )\\n  :effect (and\\n             (on ?obj)\\n           )\\n)\"\n}"
    },
    {
        "identifier": "708_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (obj_next_to ?char ?obj)  ; Character must be next to the object\\n    (clean ?obj)  ; Object must be clean\\n    (movable ?char)  ; Character must be movable\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)  ; Character is now next to the object\\n  )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_switch ?obj)  ; The object must have a switch\\n    (obj_next_to ?char ?obj)  ; Character must be next to the object\\n    (plugged_in ?obj)  ; The object must be plugged in\\n    (off ?obj)  ; The object must be currently off\\n  )\\n  :effect (and\\n    (on ?obj)  ; The object is now turned on\\n  )\\n)\\n\"\n}"
    },
    {
        "identifier": "715_2",
        "llm_output": "{\n    \"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_plug ?obj)\\n                    (obj_next_to ?char ?obj)\\n                    (plugged_out ?obj)\\n                  )\\n  :effect (and\\n              (plugged_in ?obj)\\n            )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (movable ?obj)\\n                    (next_to ?char ?obj)\\n                  )\\n  :effect (and\\n              (next_to ?char ?obj)\\n            )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_switch ?obj)\\n                    (obj_next_to ?char ?obj)\\n                    (clean ?obj)\\n                    (plugged_in ?obj)\\n                  )\\n  :effect (and\\n              (on ?obj)\\n            )\\n)\"\n}"
    },
    {
        "identifier": "737_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                     (inside ?char ?obj)\\n                     (obj_next_to ?char ?obj)\\n                 )\\n  :effect (and\\n              (next_to ?char ?obj)\\n          )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                     (holds_rh ?char ?obj)\\n                     (has_switch ?obj)\\n                     (off ?obj)\\n                 )\\n  :effect (and\\n              (on ?obj)\\n          )\\n)\"\n}"
    },
    {
        "identifier": "780_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (obj_next_to ?char ?obj)  ; Character is next to the object\\n                    (inside ?char ?obj)       ; Character is inside the object\\n                 )\\n  :effect (and\\n                    (next_to ?char ?obj)       ; Character is now next to the object\\n                 )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_switch ?obj)  ; The object must have a switch\\n                    (on ?char ?obj)     ; Character has to turn on the object\\n                 )\\n  :effect (and\\n                    (on ?obj)         ; The object is turned on\\n                )\\n)\\n\"\n}"
    },
    {
        "identifier": "812_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (movable ?char)\\n                (obj_next_to ?char ?obj))\\n  :effect (and\\n        (next_to ?char ?obj)\\n        )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (has_switch ?obj)\\n                (clean ?obj)\\n                (plugged_in ?obj)\\n                (next_to ?char ?obj))\\n  :effect (and\\n                (on ?obj)\\n        )\\n)\\n\"}"
    },
    {
        "identifier": "835_2",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (has_switch ?obj)\\n                (plugged_out ?obj)\\n                (movable ?obj)\\n                (inside ?char ?obj)\\n             )\\n  :effect (and\\n                (plugged_in ?obj)\\n             )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (on ?obj)\\n                (has_switch ?obj)\\n                (plugged_in ?obj)\\n                (clean ?obj)\\n                (obj_inside ?obj ?obj-room)\\n             )\\n  :effect (and\\n                (on ?obj)\\n             )\\n)\\n\"}"
    },
    {
        "identifier": "85_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (inside ?char ?obj)  ; character is inside the object\\n                    (obj_next_to ?char ?obj)  ; character is next to the object\\n                  )\\n  :effect (and\\n                (next_to ?char ?obj)  ; character moves next to the object\\n              )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_switch ?obj)  ; the object has a switch\\n                    (obj_next_to ?char ?obj)  ; character needs to be next to the object to switch it on\\n                    (plugged_in ?obj)  ; the object must be plugged in to turn it on\\n                    (off ?obj)  ; the object must be currently off\\n                  )\\n  :effect (and\\n                (on ?obj)  ; the object is now turned on\\n              )\\n)\\n\"\n}"
    },
    {
        "identifier": "874_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (inside ?char ?obj)  ; character is inside the object\\n                    (obj_next_to ?char ?obj)  ; character is next to the object\\n                )\\n  :effect (and\\n                    (next_to ?char ?obj)  ; character is now next to the object\\n                )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_switch ?obj)  ; object has a switch\\n                    (obj_next_to ?char ?obj)  ; character is next to the object\\n                    (off ?obj)  ; the object is initially off\\n                )\\n  :effect (and\\n                    (on ?obj)  ; the object is now turned on\\n                )\\n)\\n\"}"
    },
    {
        "identifier": "491_2",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (grabbable ?obj)  ; The object must be grabbable\\n                (next_to ?char ?obj)  ; The character must be next to the object\\n            )\\n  :effect (and\\n                (holds_lh ?char ?obj)  ; The character now holds the object in the left hand\\n            )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)  ; The character must be next to the target object\\n  :effect ()\\n)\\n\"\n}"
    },
    {
        "identifier": "696_1",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (grabbable ?obj)\\n        (next_to ?char ?obj)\\n    )\\n  :effect (and\\n        (holds_lh ?char ?obj)\\n    )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n\"\n}"
    },
    {
        "identifier": "1004_2",
        "llm_output": "{\"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (has_switch ?obj)  ; the object must have a switch\\n                (next_to ?char ?obj)  ; the character must be next to the object\\n                (closed ?obj)  ; the object must be closed\\n            )\\n  :effect (and\\n                (not (closed ?obj))  ; the object is now open\\n            )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj) ; The character must be next to the target\\n  :effect (next_to ?char ?obj) ; The character is now next to the target\\n)\\n\"}"
    },
    {
        "identifier": "152_2",
        "llm_output": "{\"output\":\"(:action put_inside\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n                   (movable ?obj1)\\n                   (containers ?obj2)\\n                   (next_to ?char ?obj1)\\n                )\\n  :effect (and\\n                   (obj_inside ?obj1 ?obj2)\\n                   (not (next_to ?char ?obj1))\\n               )\\n)\\n\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (can_open ?obj)\\n                   (next_to ?char ?obj)\\n                   (closed ?obj)\\n               )\\n  :effect (and\\n                   (open ?obj)\\n               )\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)\\n                   (next_to ?char ?obj)\\n               )\\n  :effect (and\\n                   (holds_rh ?char ?obj)\\n               )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "298_2",
        "llm_output": "{\n    \"output\": \"(:action put_inside\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n                    (containers ?obj2)  ; obj2 is a container\\n                    (inside_room ?obj1 ?obj2)  ; obj1 is in the same room as obj2\\n                    (movable ?obj1)  ; obj1 can be moved\\n                    (grabbable ?obj1)  ; obj1 can be grabbed\\n                    (obj_next_to ?char ?obj1)  ; char is next to obj1\\n                )\\n  :effect (and\\n                    (obj_inside ?obj1 ?obj2)  ; obj1 is inside obj2\\n                    (not (obj_next_to ?char ?obj1))  ; obj1 is no longer next to char\\n                )\\n)\\n\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (can_open ?obj)  ; obj can be opened\\n                    (closed ?obj)  ; obj is closed\\n                    (next_to ?char ?obj)  ; char is next to obj\\n                )\\n  :effect (and\\n                    (open ?obj)  ; obj is now open\\n                    (not (closed ?obj))  ; obj is no longer closed\\n                )\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (grabbable ?obj)  ; obj can be grabbed\\n                    (next_to ?char ?obj)  ; char is next to obj\\n                )\\n  :effect (and\\n                    (held ?char ?obj)  ; char is holding obj\\n                    (not (next_to ?char ?obj))  ; obj is no longer next to char\\n                )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (next_to ?char ?obj)  ; char is next to obj\\n                )\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "609_2",
        "llm_output": "{\n    \"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (has_switch ?obj)\\n                 (closed ?obj)\\n                 (plugged_in ?obj)\\n             )\\n  :effect (and\\n               (not (closed ?obj))\\n               (open ?obj)\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\"\n}"
    },
    {
        "identifier": "703_2",
        "llm_output": "{\n    \"output\": \"(:action put_inside\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n                   (containers ?obj2) \\n                   (movable ?obj1) \\n                   (grabbable ?obj1) \\n                   (next_to ?char ?obj2) \\n                   (inside_room ?obj2 ?room) \\n                   (inside_room ?obj1 ?room) \\n                   ) \\n  :effect (and\\n                  (obj_inside ?obj1 ?obj2) \\n                  (not (next_to ?char ?obj2)) \\n                  ) \\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (can_open ?obj)\\n                   (closed ?obj)\\n                   (next_to ?char ?obj)\\n                   (has_switch ?obj)\\n                   ) \\n  :effect (and\\n                  (open ?obj) \\n                  (not (closed ?obj)) \\n                  ) \\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj) \\n                   (next_to ?char ?obj) \\n                     ) \\n  :effect ()\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (next_to ?char ?obj) \\n                   ) \\n  :effect ()\\n)\\n\"\n}"
    },
    {
        "identifier": "772_1",
        "llm_output": "{\n\"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (containers ?obj)\\n                (can_open ?obj)\\n                (closed ?obj)\\n                (has_switch ?obj)\\n                (next_to ?char ?obj)\\n            )\\n  :effect (and\\n             (not (closed ?obj))\\n             (on ?obj)\\n           )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and\\n             (facing ?char ?obj)\\n           )\\n)\"\n}"
    },
    {
        "identifier": "837_2",
        "llm_output": "{\"output\": \"(:action put_inside\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n    (movable ?obj1) ; obj1 must be movable\\n    (containers ?obj2) ; obj2 must be a container\\n    (next_to ?char ?obj1) ; character must be next to obj1\\n    (obj_next_to ?obj1 ?obj2) ; obj1 must be next to obj2\\n  )\\n  :effect (and\\n    (not (obj_next_to ?obj1 ?obj2)) ; obj1 is no longer next to obj2\\n    (obj_inside ?obj1 ?obj2) ; obj1 is now inside obj2\\n  )\\n)\\n\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (can_open ?obj) ; obj must be openable\\n    (next_to ?char ?obj) ; character must be next to obj\\n    (closed ?obj) ; obj must be closed\\n  )\\n  :effect (and\\n    (not (closed ?obj)) ; obj is now open\\n    (open ?obj) ; obj is now open\\n  )\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (grabbable ?obj) ; obj must be grabbable\\n    (next_to ?char ?obj) ; character must be next to obj\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj)) ; character is no longer next to obj\\n    (holds_rh ?char ?obj) ; character now holds obj in the right hand\\n  )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (movable ?char) ; character must be movable\\n    (next_to ?char ?obj) ; character must be next to obj\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj)) ; character is no longer next to obj\\n    (next_to ?char ?obj) ; character is now next to obj\\n  )\\n)\"}"
    },
    {
        "identifier": "158_1",
        "llm_output": "{\"output\": \"(:action walk_into\\n  :parameters (?char - character ?room - object)\\n  :precondition (and (inside ?char ?room) (next_to ?char ?room))\\n  :effect (and (inside ?char ?room) (not (inside ?char ?room)))\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (facing ?char ?obj))\\n  :effect (and (facing ?char ?obj))\\n)\\n(:action standup\\n  :parameters (?char - character)\\n  :precondition (sitting ?char)\\n  :effect (not (sitting ?char))\\n)\\n\"}"
    },
    {
        "identifier": "323_2",
        "llm_output": "{\n  \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (next_to ?char ?obj)  ; character must be next to the object\\n                  )\\n  :effect (and\\n               (not (next_to ?char ?obj))  ; character is no longer next to the object\\n             )\\n)\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (next_to ?char ?obj)  ; character must be next to the object\\n                   (sittable ?obj)  ; the object is sittable\\n                  )\\n  :effect (and\\n               (inside ?char ?obj)  ; character is now inside the object\\n             )\\n)\"\n}"
    },
    {
        "identifier": "430_2",
        "llm_output": "{\n  \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (obj_next_to ?char ?obj)  ; Character is next to the object\\n  )\\n  :effect (and\\n      (next_to ?char ?obj)  ; Character is now next to the object\\n  )\\n)\\n\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (sittable ?obj)  ; The object must be sittable\\n      (obj_next_to ?char ?obj)  ; Character is next to the object\\n  )\\n  :effect (and\\n      (sitting ?char)  ; Character is now sitting\\n  )\\n)\"\n}"
    },
    {
        "identifier": "478_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (next_to ?char ?obj)  ; The character must be next to the object\\n            )\\n  :effect ()\\n)\\n\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (sittable ?obj)  ; The object must be sittable\\n                (next_to ?char ?obj)  ; The character must be next to the object\\n            )\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "496_1",
        "llm_output": "{\"output\": \"(:action walk_into\\n  :parameters (?char - character ?room - object)\\n  :precondition (and\\n                   (inside_room ?room ?char)\\n                   (sittable ?room)\\n               )\\n   :effect (and\\n                (inside ?char ?room)\\n            )\\n)\\n\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (inside ?char ?room)\\n                   (facing ?char ?obj)\\n               )\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "624_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (next_to ?char ?obj)\\n               )\\n  :effect (and\\n             (next_to ?char ?obj)\\n           )\\n)\\n\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (sittable ?obj)\\n                   (next_to ?char ?obj)\\n               )\\n  :effect (and\\n             (sitting ?char)\\n           )\\n)\\n\"}"
    },
    {
        "identifier": "188_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (movable ?char) (movable ?obj) (sittable ?obj) (inside_room ?obj ?room) (inside ?char ?room))\\n  :effect (and (next_to ?char ?obj) (facing ?char ?obj))\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (and (holds_rh ?char ?obj))\\n)\\n\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (lookable ?obj))\\n  :effect (and (facing ?char ?obj))\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (off ?obj) (next_to ?char ?obj) (holds_rh ?char ?obj))\\n  :effect (and (on ?obj) (not (off ?obj)))\\n)\\n\"}"
    },
    {
        "identifier": "803_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect ((not (next_to ?char ?obj)) (next_to ?char obj))\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (grabbable ?obj))\\n  :effect ((not (grabbable ?obj)) (holds_rh ?char ?obj))\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (body_part ?char))\\n  :effect ((facing ?char ?obj))\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (has_switch ?obj) (off ?obj))\\n  :effect ((not (off ?obj)) (on ?obj))\\n)\"\n}"
    },
    {
        "identifier": "960_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and\\n             (next_to ?char ?obj)\\n           )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                     (grabbable ?obj)\\n                     (obj_next_to ?obj ?char)\\n                     (movable ?obj)\\n                   )\\n  :effect (and\\n             (when (grabbable ?obj)(not (grabbable ?obj)))\\n             (ontop ?obj ?char)\\n           )\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (facing ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_switch ?obj)\\n                    (plugged_in ?obj)\\n                    (off ?obj)\\n                    (holds_rh ?char ?obj)\\n                    (facing ?char ?obj)\\n                  )\\n  :effect (and\\n             (when (off ?obj)(not (off ?obj)))\\n             (on ?obj)\\n           )\\n)\\n\"\n}"
    },
    {
        "identifier": "101_2",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (has_plug ?obj)\\n                (plugged_out ?obj)\\n                (movable ?char)\\n                (obj_next_to ?char ?obj)\\n            )\\n  :effect (and\\n                (not (plugged_out ?obj))\\n                (plugged_in ?obj)\\n            )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (obj_next_to ?char ?obj)\\n            )\\n  :effect (and\\n            )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (has_switch ?obj)\\n                (plugged_in ?obj)\\n                (inside ?char computer)\\n            )\\n  :effect (and\\n               (on ?obj)\\n               (offered ?char ?obj)\\n            )\\n)\\n\"}"
    },
    {
        "identifier": "1068_1",
        "llm_output": "{\n    \"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (has_switch ?obj)\\n        (plugged_out ?obj)\\n        (obj_inside ?obj ?room)\\n        (inside_room ?obj ?room)\\n        (lookable ?obj)\\n        (clean ?obj)\\n        (inside ?char ?room)\\n    )\\n  :effect (and\\n        (plugged_in ?obj)\\n    )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (plugged_in ?obj)\\n        (inside ?char ?room)\\n    )\\n  :effect\\n)\"\n}"
    },
    {
        "identifier": "153_2",
        "llm_output": "{\"output\":\"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (plugged_out ?obj)\\n                    (has_plug ?obj)\\n                    (inside ?char home_office)\\n                    (obj_inside ?obj home_office)\\n                    (obj_next_to ?obj dining_room)\\n                )\\n  :effect (and\\n                    (plugged_in ?obj)\\n                )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (obj_next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_switch ?obj)\\n                    (plugged_in ?obj)\\n                    (inside ?char home_office)\\n                    (lookable ?obj)\\n                    (clean ?obj)\\n                )\\n  :effect (on ?obj)\\n)\"}"
    },
    {
        "identifier": "196_2",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (has_plug ?obj)  ; the object must have a plug\\n                (has_switch ?obj)  ; the object must have a switch\\n                (off ?obj)  ; the object must be turned off\\n                (next_to ?char ?obj)  ; the character must be next to the object\\n            )\\n  :effect (and\\n             (not (plugged_out ?obj))  ; the object is no longer unplugged\\n             (plugged_in ?obj)  ; the object is now plugged in\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)  ; the character must be next to the object\\n  :effect (and\\n              (not (next_to ?char ?obj))  ; the character is no longer next to the object\\n              (next_to ?char ?obj)  ; the character is now next to the object\\n            )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (has_switch ?obj)  ; the object must have a switch\\n                  (on ?obj)  ; the object must be turned on\\n                  (next_to ?char ?obj)  ; the character must be next to the object\\n              )\\n  :effect (and\\n               (not (off ?obj))  ; the object is no longer off\\n               (on ?obj)  ; the object is now on\\n            )\\n)\\n\"}"
    },
    {
        "identifier": "198_1",
        "llm_output": "{\n    \"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                     (grabbable ?obj)\\n                     (has_plug ?obj)\\n                     (next_to ?char ?obj)\\n                     (not (plugged_in ?obj))\\n                 )\\n  :effect (and\\n                 (plugged_in ?obj)\\n             )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                     (person ?char)\\n                     (movable ?char)\\n                     (movable ?obj)\\n                     (next_to ?char ?obj)\\n                 )\\n  :effect (and\\n                (next_to ?char ?obj)\\n            )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                     (has_switch ?obj)\\n                     (next_to ?char ?obj)\\n                     (off ?obj)\\n                 )\\n  :effect (and\\n                     (on ?obj)\\n                )\\n)\\n\"\n}"
    },
    {
        "identifier": "201_2",
        "llm_output": "{\"output\":\"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (plugged_out ?obj)\\n                   (has_plug ?obj)\\n                   (next_to ?char ?obj)\\n               )\\n  :effect (and\\n             (not (plugged_out ?obj))\\n             (plugged_in ?obj)\\n           )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (next_to ?char ?obj)\\n               )\\n  :effect ()\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_switch ?obj)\\n                   (next_to ?char ?obj)\\n                   (plugged_in ?obj)\\n               )\\n  :effect (and\\n             (off ?obj)\\n             (on ?obj)\\n           )\\n)\\n\"}"
    },
    {
        "identifier": "232_1",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (plugged_out ?obj)\\n                    (obj_next_to ?char ?obj)\\n                    (has_switch ?obj)\\n                )\\n  :effect (and\\n                    (not (plugged_out ?obj))\\n                    (plugged_in ?obj)\\n                )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (plugged_in ?obj)\\n                    (has_switch ?obj)\\n                    (next_to ?char ?obj)\\n                )\\n  :effect (on ?obj)\\n)\\n\"}"
    },
    {
        "identifier": "234_1",
        "llm_output": "{\n\t\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_plug ?obj)  ; The object has a plug\\n    (next_to ?char ?obj)  ; The character is next to the object\\n    (plugged_out ?obj)  ; The object is not plugged in\\n  )\\n  :effect (and\\n    (not (plugged_out ?obj))  ; The object is no longer unplugged\\n    (plugged_in ?obj)  ; The object is now plugged in\\n  )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)  ; The character is next to the object\\n  :effect (and\\n    (not (next_to ?char ?obj))  ; The character is no longer next to the object\\n    (next_to ?char ?obj)  ; The character is now next to the object\\n  )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_switch ?obj)  ; The object has a switch\\n    (next_to ?char ?obj)  ; The character is next to the object\\n    (off ?obj)  ; The object is currently off\\n  )\\n  :effect (and\\n    (not (off ?obj))  ; The object is no longer off\\n    (on ?obj)  ; The object is now on\\n  )\\n)\\n\"\n}"
    },
    {
        "identifier": "343_2",
        "llm_output": "{\n    \"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_plug ?obj)\\n                   (plugged_out ?obj)\\n                   (next_to ?char ?obj)\\n               )\\n  :effect (and\\n             (not (plugged_out ?obj))\\n             (plugged_in ?obj)\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and\\n             (not (next_to ?char ?obj))\\n             (next_to ?char ?obj)\\n           )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_switch ?obj)\\n                   (off ?obj)\\n                   (next_to ?char ?obj)\\n               )\\n  :effect (and\\n             (not (off ?obj))\\n             (on ?obj)\\n           )\\n)\"\n}"
    },
    {
        "identifier": "373_1",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_switch ?obj)\\n                    (plugged_out ?obj)\\n                    (inside ?char ?obj)\\n                    (lookable ?obj)\\n                )\\n  :effect (and\\n                    (plugged_in ?obj)\\n                )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (inside ?char ?obj)\\n                )\\n  :effect (and\\n                    (next_to ?char ?obj)\\n                )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (plugged_in ?obj)\\n                    (on ?obj)\\n                )\\n  :effect (and\\n                    (on ?obj)\\n                )\\n)\\n\"}"
    },
    {
        "identifier": "406_2",
        "llm_output": "{\n    \"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_plug ?obj)\\n    (next_to ?char ?obj)\\n    (plugged_out ?obj)\\n  )\\n  :effect (and\\n    (plugged_in ?obj)\\n    (not (plugged_out ?obj))\\n  )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (not (ontop ?char ?obj))\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (ontop ?char ?obj)\\n  )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_switch ?obj)\\n    (next_to ?char ?obj)\\n    (off ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n    (not (off ?obj))\\n  )\\n)\"\n}"
    },
    {
        "identifier": "409_2",
        "llm_output": "{\n    \"output\": \"(:action plug_in\\n:parameters (?char - character ?obj - object)\\n:precondition (and\\n    (has_plug ?obj)\\n    (plugged_out ?obj)\\n    (next_to ?char ?obj)\\n    (movable ?obj)\\n)\\n:effect (and\\n    (not (plugged_out ?obj))\\n    (plugged_in ?obj)\\n)\\n)\\n\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (next_to ?char ?obj)\\n:effect (and\\n    (not (next_to ?char ?obj))\\n)\\n)\\n\\n(:action switch_on\\n:parameters (?char - character ?obj - object)\\n:precondition (and\\n    (has_switch ?obj)\\n    (facing ?char ?obj)\\n    (off ?obj)\\n)\\n:effect (and\\n    (not (off ?obj))\\n    (on ?obj)\\n)\\n)\"\n}"
    },
    {
        "identifier": "419_1",
        "llm_output": "{\n    \"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_plug ?obj)\\n                    (plugged_out ?obj)\\n                    (next_to ?char ?obj)\\n                    (has_plug ?obj)\\n                 )\\n  :effect (and\\n            (not (plugged_out ?obj))\\n            (plugged_in ?obj)\\n          )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (next_to ?char ?obj)\\n                 )\\n  :effect ()\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_switch ?obj)\\n                    (plugged_in ?obj)\\n                    (next_to ?char ?obj)\\n                 )\\n  :effect (and\\n           (on ?obj)\\n           (not (off ?obj))\\n          )\\n)\"\n}"
    },
    {
        "identifier": "433_1",
        "llm_output": "{\n    \"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_plug ?obj)\\n                    (has_switch ?obj)\\n                    (plugged_out ?obj)\\n                    (obj_next_to ?char ?obj)\\n                  )\\n  :effect (and\\n              (plugged_in ?obj)\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (or\\n                    (next_to ?char ?obj)\\n                    (obj_next_to ?char ?obj)\\n                 )\\n  :effect (and\\n              (next_to ?char ?obj)\\n           )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_switch ?obj)\\n                    (plugged_in ?obj)\\n                    (obj_next_to ?char ?obj)\\n                  )\\n  :effect (and\\n              (on ?obj)\\n           )\\n)\"\n}"
    },
    {
        "identifier": "437_2",
        "llm_output": "{\"output\":\"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_plug ?obj)\\n                   (has_plug ?char)\\n                   (next_to ?char ?obj)\\n                   (not (plugged_in ?obj))\\n                 )\\n  :effect (and\\n               (plugged_in ?obj)\\n             )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and\\n              (next_to ?char ?obj)\\n           )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_switch ?obj)\\n                   (next_to ?char ?obj)\\n                   (off ?obj)\\n                 )\\n  :effect (and\\n               (on ?obj)\\n             )\\n)\"}"
    },
    {
        "identifier": "440_1",
        "llm_output": "{\n    \"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n\\t(grabbable ?obj)\\n\\t(plugged_out ?obj)\\n\\t(next_to ?char ?obj)\\n  )\\n  :effect (and\\n\\t(plugged_in ?obj)\\n  )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n\\t(next_to ?char ?obj)\\n  )\\n  :effect ()\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n\\t(has_switch ?obj)\\n\\t(plugged_in ?obj)\\n  )\\n  :effect (and\\n\\t(on ?obj)\\n  )\\n)\"\n}"
    },
    {
        "identifier": "453_2",
        "llm_output": "{\n    \"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (next_to ?char ?obj) ; character must be next to the object to plug in\\n                (has_plug ?obj) ; the object must have a plug\\n                (plugged_out ?obj) ; the object must be plugged out\\n            )\\n  :effect (and\\n             (plugged_in ?obj) ; the object is now plugged in\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj) ; the character must be next to the object\\n  :effect (next_to ?char ?obj) ; the character walks towards the object\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (next_to ?char ?obj) ; the character must be next to the object\\n                (has_switch ?obj) ; the object must have a switch\\n                (off ?obj) ; the object must be turned off\\n            )\\n  :effect (and\\n             (on ?obj) ; the object is now turned on\\n           )\\n)\"\n}"
    },
    {
        "identifier": "46_1",
        "llm_output": "{\n  \"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (plugged_out ?obj)\\n                    (has_plug ?obj)\\n                    (next_to ?char ?obj)\\n                 )\\n  :effect (and\\n                    (plugged_in ?obj)\\n                    (not (plugged_out ?obj))\\n              )\\n)(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (next_to ?char ?obj)\\n                 )\\n  :effect (and\\n                    (facing ?char ?obj)\\n              )\\n)(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (plugged_in ?obj)\\n                    (has_switch ?obj)\\n                    (next_to ?char ?obj)\\n                 )\\n  :effect (on ?obj)\\n)\"\n}"
    },
    {
        "identifier": "475_2",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_plug ?obj)  ; The object must have a plug\\n    (has_switch ?obj)  ; The object must have a switch\\n    (plugged_out ?obj)  ; The object must be plugged out\\n    (next_to ?char ?obj)  ; The character must be next to the object\\n  )\\n  :effect (and\\n    (plugged_in ?obj)  ; The object is now plugged in\\n    (not (plugged_out ?obj))  ; The object is no longer plugged out\\n  )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)  ; The character must be next to the object to walk towards it\\n  :effect ()\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_switch ?obj)  ; The object must have a switch to be switched on\\n    (plugged_in ?obj)  ; The object must be plugged in to be switched on\\n    (next_to ?char ?obj)  ; The character must be next to the object to switch it on\\n  )\\n  :effect (and\\n    (on ?obj)  ; The object is now turned on\\n    (off ?obj)  ; The object is no longer off\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "503_1",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (has_plug ?obj)  ; The object must have a plug\\n                  (obj_next_to ?char ?obj)  ; The character must be next to the object\\n              )\\n  :effect (and\\n              (plugged_in ?obj)  ; The object is now plugged in\\n          )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (obj_next_to ?char ?obj)  ; The character must be next to the object\\n  :effect ()  ; No effect\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (has_switch ?obj)  ; The object must have a switch\\n                  (on ?obj)  ; The object must be turned on\\n                  (obj_next_to ?char ?obj)  ; The character must be next to the object\\n              )\\n  :effect (and\\n              (on ?obj)  ; The object is now turned on\\n          )\\n)\\n\"}"
    },
    {
        "identifier": "670_2",
        "llm_output": "{\n    \"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_plug ?obj)\\n    (has_switch ?obj)\\n    (next_to ?char ?obj)\\n    (plugged_out ?obj)\\n  )\\n  :effect (and\\n    (not (plugged_out ?obj))\\n    (plugged_in ?obj)\\n  )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and\\n    (not (next_to ?char ?obj))\\n    (next_to ?char ?obj)\\n  )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_switch ?obj)\\n    (next_to ?char ?obj)\\n    (plugged_in ?obj)\\n    (off ?obj)\\n  )\\n  :effect (and\\n    (off ?obj)\\n    (on ?obj)\\n  )\\n)\"\n}"
    },
    {
        "identifier": "719_2",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_plug ?obj)\\n    (plugged_out ?obj)\\n    (movable ?obj)\\n    (obj_next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (not (plugged_out ?obj))\\n    (plugged_in ?obj)\\n  )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_switch ?obj)\\n    (plugged_in ?obj)\\n    (facing ?char ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n    (not (off ?obj))\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "757_2",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_plug ?obj)\\n                    (next_to ?char ?obj)\\n                    (plugged_out ?obj)\\n                    (grabbable ?obj)\\n                )\\n  :effect (and\\n                (plugged_in ?obj)\\n            )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and\\n                (next_to ?char ?obj)\\n            )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_switch ?obj)\\n                    (on ?obj)\\n                    (next_to ?char ?obj)\\n                    (plugged_in ?obj)\\n                )\\n  :effect (and\\n                (on ?obj)\\n            )\\n)\\n\"}"
    },
    {
        "identifier": "787_2",
        "llm_output": "{\n  \"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_plug ?obj)\\n                   (plugged_out ?obj)\\n                   (next_to ?char ?obj)\\n                 )\\n  :effect (and\\n             (not (plugged_out ?obj))\\n             (plugged_in ?obj)\\n           )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_switch ?obj)\\n                   (on ?obj)\\n                   (facing ?char ?obj)\\n                   (clean ?obj)\\n                   (lookable ?obj)\\n                 )\\n  :effect (and\\n             (not (off ?obj))\\n             (on ?obj)\\n           )\\n)\\n\"\n}"
    },
    {
        "identifier": "795_1",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_plug ?obj)\\n                    (next_to ?char ?obj)\\n                    (plugged_out ?obj)\\n                )\\n  :effect (and\\n                (not (plugged_out ?obj))\\n                (plugged_in ?obj)\\n            )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (has_switch ?obj)\\n                  (next_to ?char ?obj)\\n                  (off ?obj)\\n                )\\n  :effect (and\\n                  (not (off ?obj))\\n                  (on ?obj)\\n              )\\n)\\n\"}"
    },
    {
        "identifier": "819_1",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_plug ?obj)\\n                   (plugged_out ?obj)\\n                   (next_to ?char ?obj)\\n               )\\n  :effect (and\\n               (not (plugged_out ?obj))\\n               (plugged_in ?obj)\\n           )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_switch ?obj)\\n                   (plugged_in ?obj)\\n                   (next_to ?char ?obj)\\n               )\\n  :effect (and\\n               (off ?obj)\\n               (on ?obj)\\n           )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "874_1",
        "llm_output": "{\n    \"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (plugged_out ?obj)\\n                   (obj_next_to ?char ?obj)\\n               )\\n  :effect (and\\n               (not (plugged_out ?obj))\\n               (plugged_in ?obj)\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (obj_next_to ?char ?obj)\\n                   (movable ?char)\\n               )\\n  :effect (and\\n               (next_to ?char ?obj)\\n           )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_switch ?obj)\\n                   (facing ?char ?obj)\\n               )\\n  :effect (and\\n               (on ?obj)\\n               (not (off ?obj))\\n           )\\n)\\n\"\n}"
    },
    {
        "identifier": "910_1",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (plugged_out ?obj)\\n                  (next_to ?char ?obj)\\n              )\\n  :effect (and\\n             (plugged_in ?obj)\\n          )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (has_switch ?obj)\\n                  (facing ?char ?obj)\\n                  (clean ?obj)\\n              )\\n  :effect (on ?obj)\\n)\\n\"}"
    },
    {
        "identifier": "91_2",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_plug ?obj)\\n                   (has_switch ?obj)\\n                   (plugged_out ?obj)\\n                   (obj_next_to ?char ?obj)\\n               )\\n  :effect (and\\n             (plugged_in ?obj)\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (movable ?char)\\n                   (movable ?obj)\\n                   (next_to ?char ?obj)\\n               )\\n  :effect ()\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_switch ?obj)\\n                   (plugged_in ?obj)\\n                   (facing ?char ?obj)\\n               )\\n  :effect (and\\n             (on ?obj)\\n           )\\n)\\n\"}"
    },
    {
        "identifier": "93_2",
        "llm_output": "{\n    \"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n               (has_plug ?obj)\\n               (has_switch ?obj)\\n               (grabbable ?obj)\\n               (next_to ?char ?obj)\\n               (wearing ?char ?clothes)\\n           )\\n  :effect (and\\n            (plugged_in ?obj)\\n          )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (or\\n               (next_to ?char ?obj)\\n               (and\\n                 (obj_next_to ?obj1 ?obj)\\n                 (next_to ?char ?obj1)\\n               )\\n             )\\n  :effect (and\\n            (next_to ?char ?obj)\\n            (not (next_to ?char ?obj1))\\n          )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (has_switch ?obj)\\n                 (plugged_in ?obj)\\n                 (next_to ?char ?obj)\\n               )\\n  :effect (and\\n              (on ?obj)\\n              (off computer)\\n            )\\n)\"\n}"
    },
    {
        "identifier": "962_1",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (next_to ?char ?obj)  ; character must be next to the object to plug in\\n                (obj_next_to ?obj ?char)  ; the object must be next to the character to be plugged into\\n                (plugged_out ?obj)  ; object must be unplugged to plug in\\n                (has_plug ?obj)  ; object must have a plug\\n            )\\n  :effect (and\\n                (not (plugged_out ?obj))  ; object is no longer unplugged\\n                (plugged_in ?obj)  ; object is now plugged in\\n            )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (or\\n                (obj_next_to ?char ?obj)  ; character is next to the object\\n                (next_to ?char ?obj)  ; character is next to the object\\n            )\\n  :effect (and\\n                (not (next_to ?char ?obj))  ; character is no longer next to the object\\n                (next_to ?char ?obj)  ; character is walking towards the object\\n            )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (next_to ?char ?obj)  ; character must be next to the object to switch on\\n                (has_switch ?obj)  ; the object must have a switch\\n                (on ?obj)  ; the object is turned on\\n            )\\n  :effect (and\\n                (not (off ?obj))  ; object is not off\\n                (on ?obj)  ; object is now turned on\\n            )\\n)\\n\"}"
    },
    {
        "identifier": "190_1",
        "llm_output": "{\n    \"output\": \"(:action switch_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "201_1",
        "llm_output": "{\"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n                    (movable ?obj1)\\n                    (movable ?obj2)\\n                    (next_to ?char ?obj2)\\n                    (not (obj_ontop ?obj1 ?obj2))\\n                )\\n  :effect (and\\n                    (obj_ontop ?obj1 ?obj2)\\n                    (not (next_to ?char ?obj2))\\n                )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_switch ?obj)\\n                    (not (on ?obj))\\n                    (next_to ?char ?obj)\\n                )\\n  :effect (and\\n                    (on ?obj)\\n                    (not (off ?obj))\\n                )\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (grabbable ?obj)\\n                    (next_to ?char ?obj)\\n                )\\n  :effect (and\\n                    (holding ?obj ?char)\\n                )\\n)\\n\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (can_open ?obj)\\n                    (not (closed ?obj))\\n                    (next_to ?char ?obj)\\n                )\\n  :effect (and\\n                    (not (closed ?obj))\\n                    (on ?obj)\\n                )\\n)\\n\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (can_open ?obj)\\n                    (on ?obj)\\n                    (next_to ?char ?obj)\\n                )\\n  :effect (and\\n                    (closed ?obj)\\n                    (not (on ?obj))\\n                )\\n)\\n\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_plug ?obj)\\n                    (not (plugged_in ?obj))\\n                    (next_to ?char ?obj)\\n                )\\n  :effect (plugged_in ?obj)\\n)\"}"
    },
    {
        "identifier": "223_2",
        "llm_output": "{\n    \"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n    (surfaces ?obj2)  ; The destination must be a surface\\n    (ontop ?char ?obj1)  ; The character must be on top of the object to perform the action\\n    (next_to ?char ?obj2)  ; The character must be next to the destination object\\n  )\\n  :effect (and\\n    (ontop ?char ?obj2)  ; The character is now on top of the destination object\\n    (not (ontop ?char ?obj1))  ; The character is no longer on top of the original object\\n  )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)  ; The character must be next to the target object\\n  :effect ()\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_switch ?obj)  ; The object must have a switch\\n    (plugged_in ?obj)  ; The object must be plugged in\\n    (off ?obj)  ; The object must be turned off\\n    (next_to ?char ?obj)  ; The character must be next to the object\\n  )\\n  :effect (and\\n    (on ?obj)  ; The object is turned on\\n    (not (off ?obj))  ; The object is no longer turned off\\n  )\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (grabbable ?obj)  ; The object must be grabbable\\n    (next_to ?char ?obj)  ; The character must be next to the object\\n  )\\n  :effect (and\\n    (ontop ?char ?obj)  ; The character is now on top of the object\\n  )\\n)\\n\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (can_open ?obj)  ; The object must be openable\\n    (closed ?obj)  ; The object must be closed\\n    (next_to ?char ?obj)  ; The character must be next to the object\\n  )\\n  :effect (and\\n    (not (closed ?obj))  ; The object is now open\\n  )\\n)\\n\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (can_open ?obj)  ; The object must be closeable\\n    (not (closed ?obj))  ; The object must not be closed\\n    (next_to ?char ?obj)  ; The character must be next to the object\\n  )\\n  :effect (and\\n    (closed ?obj)  ; The object is now closed\\n  )\\n)\\n\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_plug ?obj)  ; The object must have a plug\\n    (next_to ?char ?obj)  ; The character must be next to the object\\n    (plugged_out ?obj)  ; The object must be unplugged\\n  )\\n  :effect (and\\n    (plugged_in ?obj)  ; The object is now plugged in\\n    (not (plugged_out ?obj))  ; The object is no longer unplugged\\n  )\\n)\"\n}"
    },
    {
        "identifier": "327_2",
        "llm_output": "{\n    \"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n                (grabbable ?obj1)  ; obj1 must be grabbable\\n                (sittable ?obj2)  ; obj2 must be sittable\\n                (on ?char)  ; character is turned on\\n                (obj_next_to ?char ?obj2)  ; character is next to obj2\\n            )\\n  :effect (and\\n              (ontop ?char ?obj2)  ; obj2 is now on top of the character\\n              (not (next_to ?char ?obj2))  ; the character is no longer next to obj2\\n          )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (next_to ?char ?obj)  ; character is next to the object\\n                 (can_open ?obj)  ; obj can be opened\\n             )\\n  :effect (and\\n              (next_to ?char ?obj)  ; character is now next to the object\\n          )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (has_switch ?obj)  ; obj has a switch\\n                 (not (on ?obj))  ; obj is currently off\\n                 (next_to ?char ?obj)  ; character is next to obj\\n             )\\n  :effect (and\\n              (on ?obj)  ; obj is now turned on\\n          )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (grabbable ?obj)  ; obj can be grabbed\\n                 (next_to ?char ?obj)  ; character is next to obj\\n             )\\n  :effect (and\\n              (holds_rh ?char ?obj)  ; character is now holding the object in the right hand\\n          )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (can_open ?obj)  ; obj can be opened\\n                 (next_to ?char ?obj)  ; character is next to obj\\n             )\\n  :effect (and\\n              (open ?obj)  ; obj is now open\\n          )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (can_open ?obj)  ; obj can be opened\\n                 (next_to ?char ?obj)  ; character is next to obj\\n                 (open ?obj)  ; obj is currently open\\n             )\\n  :effect (and\\n              (closed ?obj)  ; obj is now closed\\n          )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (has_plug ?obj)  ; obj has a plug\\n                 (plugged_out ?obj)  ; obj is currently unplugged\\n                 (next_to ?char ?obj)  ; character is next to obj\\n             )\\n  :effect (and\\n              (plugged_in ?obj)  ; obj is now plugged in\\n          )\\n)\\n\"\n}"
    },
    {
        "identifier": "383_1",
        "llm_output": "{\"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n    (sittable ?obj1)  ; obj1 must be sittable\\n    (sittable ?obj2)  ; obj2 must be sittable\\n    (sitting ?char)  ; char must be sitting\\n    (next_to ?char ?obj1)  ; char must be next to obj1\\n    (next_to ?char ?obj2)  ; char must be next to obj2\\n  )\\n  :effect (and\\n    (ontop ?char ?obj1)  ; obj1 is on top of char\\n    (ontop ?char ?obj2)  ; obj2 is on top of char\\n  )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)  ; char must be next to obj\\n  :effect (next_to ?char ?obj)  ; char is now next to obj\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (plugged_in ?obj) (off ?obj))  ; obj must have a switch, be plugged in, and be off\\n  :effect (and (on ?obj) (not (off ?obj)))  ; obj is now on and no longer off\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))  ; obj must be grabbable and char must be next to obj\\n  :effect (and (holds_rh ?char ?obj) (not (next_to ?char ?obj)))  ; char is now holding obj in right hand and no longer next to obj\\n)\\n\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (can_open ?obj) (next_to ?char ?obj) (closed ?obj))  ; obj must be openable, char must be next to obj, and obj must be closed\\n  :effect (and (not (closed ?obj)) (not (can_open ?obj)) (open ?obj))  ; obj is now open, no longer closed or openable\\n)\\n\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (can_open ?obj) (next_to ?char ?obj) (open ?obj))  ; obj must be openable, char must be next to obj, and obj must be open\\n  :effect (and (closed ?obj) (can_open ?obj) (not (open ?obj)))  ; obj is now closed, openable and no longer open\\n)\\n\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_plug ?obj) (next_to ?char ?obj) (plugged_out ?obj))  ; obj must have a plug, char must be next to obj, and obj must be plugged out\\n  :effect (and (plugged_in ?obj) (not (plugged_out ?obj)))  ; obj is now plugged in and no longer plugged out\\n)\"}\n"
    },
    {
        "identifier": "417_2",
        "llm_output": "{\"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n                (movable ?obj2)  ; obj2 must be movable\\n                (surfaces ?obj1)  ; obj1 must have a surface\\n                (next_to ?char ?obj1)  ; the character must be next to obj1\\n            )\\n  :effect (and\\n                (when\\n                    (next_to ?char ?obj2)  ; character is now next to obj2\\n                    (not (next_to ?char ?obj1))  ; character is not next to obj1 anymore\\n                )\\n            )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)  ; The character is currently next to the object\\n  :effect ()  ; No effect\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_switch ?obj)  ; obj must have a switch\\n                    (next_to ?char ?obj)  ; the character must be next to the object\\n                    (off ?obj)  ; the object must be currently off\\n                )\\n  :effect (on ?obj)  ; The object is now on\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (grabbable ?obj)  ; object must be grabbable\\n                    (next_to ?char ?obj)  ; character must be next to the object\\n                )\\n  :effect (and\\n                    (when (next_to ?char ?obj)(not (next_to ?char ?obj)))  ; if next to the object, not next to it anymore\\n                    (when (grabbable ?obj)(not (grabbable ?obj)))  ; obj is no longer grabbable\\n                    (ontop ?obj ?char)  ; obj is now on top of the char\\n                )\\n)\\n\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (can_open ?obj)  ; the object can be opened\\n                    (next_to ?char ?obj)  ; the character is next to the object\\n                    (closed ?obj)  ; the object is currently closed\\n                )\\n  :effect (not (closed ?obj))  ; The object is now open\\n)\\n\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (can_open ?obj)  ; the object can be opened\\n                    (next_to ?char ?obj)  ; the character is next to the object\\n                    (not (closed ?obj))  ; the object is currently open\\n                )\\n  :effect (closed ?obj)  ; The object is now closed\\n)\\n\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_plug ?obj)  ; the object must have a plug\\n                    (next_to ?char ?obj)  ; the character must be next to the object\\n                    (plugged_out ?obj)  ; the object must be unplugged\\n                )\\n  :effect (plugged_in ?obj)  ; The object is now plugged in\\n)\\n\\n\"}"
    },
    {
        "identifier": "487_1",
        "llm_output": "{\"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n                   (ontop ?char ?obj1)\\n                   (next_to ?char ?obj2)\\n               )\\n  :effect (and\\n             (ontop ?obj1 ?obj2)\\n             (not (ontop ?char ?obj1))\\n          )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_switch ?obj)\\n                   (can_open ?obj)\\n                   (plugged_in ?obj)\\n                   (off ?obj)\\n                   (next_to ?char ?obj)\\n               )\\n  :effect (and\\n             (on ?obj)\\n             (not (off ?obj))\\n          )\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)\\n                   (next_to ?char ?obj)\\n               )\\n  :effect (and\\n             (holds_rh ?char ?obj)\\n             (not (next_to ?char ?obj))\\n          )\\n)\\n\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (can_open ?obj)\\n                   (next_to ?char ?obj)\\n                   (closed ?obj)\\n               )\\n  :effect (and\\n             (not (closed ?obj))\\n             (not (can_open ?obj))\\n          )\\n)\\n\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (can_open ?obj)\\n                   (next_to ?char ?obj)\\n                   (not (closed ?obj))\\n               )\\n  :effect (and\\n             (closed ?obj)\\n             (can_open ?obj)\\n          )\\n)\\n\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_plug ?obj)\\n                   (next_to ?char ?obj)\\n                   (not (plugged_in ?obj))\\n               )\\n  :effect (plugged_in ?obj)\\n)\\n\"}"
    },
    {
        "identifier": "650_2",
        "llm_output": "{\n    \"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n    (movable ?obj1)            ; obj1 must be movable\\n    (movable ?obj2)            ; obj2 must be movable\\n    (next_to ?char ?obj1)      ; character is next to obj1\\n    (not (obj_ontop ?obj1 ?obj2))  ; obj1 is not already on top of obj2\\n  )\\n  :effect (and\\n    (obj_ontop ?obj1 ?obj2)  ; obj1 is on top of obj2\\n    (not (next_to ?char ?obj1)) ; character is no longer next to obj1\\n  )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect (and\\n    (next_to ?char ?obj)  ; character is next to obj\\n  )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_switch ?obj)  ; obj has a switch\\n    (off ?obj)         ; obj is turned off\\n    (next_to ?char ?obj)  ; character is next to obj\\n  )\\n  :effect (and\\n    (on ?obj)  ; obj is turned on\\n  )\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (grabbable ?obj)  ; obj can be grabbed\\n    (next_to ?char ?obj)  ; character is next to obj\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj)  ; character is holding obj with right hand\\n  )\\n)\\n\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (can_open ?obj)  ; obj can be opened\\n    (next_to ?char ?obj)  ; character is next to obj\\n    (closed ?obj)        ; obj is closed\\n  )\\n  :effect (and\\n    (not (closed ?obj))  ; obj is now open\\n    (on ?obj)            ; obj is turned on\\n  )\\n)\\n\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (can_open ?obj)  ; obj can be opened\\n    (next_to ?char ?obj)  ; character is next to obj\\n    (on ?obj)         ; obj is turned on\\n  )\\n  :effect (and\\n    (closed ?obj)  ; obj is now closed\\n    (off ?obj)     ; obj is turned off\\n  )\\n)\\n\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_plug ?obj)  ; obj has a plug\\n    (next_to ?char ?obj)  ; character is next to obj\\n    (plugged_out ?obj)    ; obj is unplugged\\n  )\\n  :effect (and\\n    (plugged_in ?obj)  ; obj is now plugged in\\n  )\\n)\"\n}"
    },
    {
        "identifier": "783_1",
        "llm_output": "{\n    \"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n                   (movable ?obj1) \\n                   (surfaces ?obj2) \\n                   (next_to ?char ?obj1) \\n                   (not (obj_ontop ?obj1 ?obj2)) \\n                )\\n  :effect (and\\n              (obj_ontop ?obj1 ?obj2) \\n              (not (next_to ?char ?obj1)) \\n            )\\n)(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (movable ?obj) \\n                   (next_to ?char ?obj) \\n                )\\n  :effect (and\\n              (next_to ?char ?obj) \\n            )\\n)(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_switch ?obj) \\n                   (can_open ?obj) \\n                   (plugged_in ?obj) \\n                   (closed ?obj) \\n                   (next_to ?char ?obj) \\n                )\\n  :effect (and\\n              (on ?obj) \\n              (not (off ?obj)) \\n            )\\n)(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj) \\n                   (next_to ?char ?obj) \\n                )\\n  :effect ()\\n)(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (can_open ?obj) \\n                   (next_to ?char ?obj) \\n                   (closed ?obj) \\n                )\\n  :effect (and\\n              (not (closed ?obj)) \\n              (on ?obj) \\n            )\\n)(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (can_open ?obj) \\n                   (next_to ?char ?obj) \\n                   (on ?obj) \\n                )\\n  :effect (and\\n              (closed ?obj) \\n              (not (on ?obj)) \\n            )\\n)(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_switch ?obj) \\n                   (has_plug ?obj) \\n                   (next_to ?char ?obj) \\n                   (not (plugged_in ?obj)) \\n                )\\n  :effect (and\\n              (plugged_in ?obj) \\n              (not (plugged_out ?obj)) \\n            )\"\n}"
    },
    {
        "identifier": "815_2",
        "llm_output": "{\n    \"output\": \"(:action switch_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "826_1",
        "llm_output": "{\"output\":\"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n    (sittable ?obj1)\\n    (sittable ?obj2)\\n    (next_to ?char ?obj1)\\n  )\\n  :effect (and\\n    (ontop ?char ?obj2)\\n    (not (ontop ?char ?obj1))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_switch ?obj)\\n    (on ?obj)\\n  )\\n  :effect (on ?obj)\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (grabbable ?obj)\\n  )\\n  :effect\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (can_open ?obj)\\n    (closed ?obj)\\n  )\\n  :effect (not (closed ?obj))\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (can_open ?obj)\\n    (not (closed ?obj))\\n  )\\n  :effect (closed ?obj)\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_plug ?obj)\\n    (has_switch ?obj)\\n    (not (plugged_in ?obj))\\n  )\\n  :effect (plugged_in ?obj)\\n)\\n\"}"
    },
    {
        "identifier": "856_1",
        "llm_output": "{\n    \"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n                  (sittable ?obj1)\\n                  (next_to ?char ?obj1)\\n                  (ontop ?char ?obj2)\\n              )\\n  :effect (and\\n              (ontop ?obj1 ?obj2)\\n              (not (ontop ?char ?obj2))\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (movable ?obj)\\n                  (next_to ?char ?obj)\\n              )\\n  :effect (and\\n              (next_to ?char ?obj)\\n           )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (has_switch ?obj)\\n                  (plugged_in ?obj)\\n                  (next_to ?char ?obj)\\n                  (off ?obj)\\n              )\\n  :effect (and\\n              (on ?obj)\\n           )\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (grabbable ?obj)\\n                  (next_to ?char ?obj)\\n              )\\n  :effect (and\\n              (ontop ?char ?obj)\\n           )\\n)\\n\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (can_open ?obj)\\n                  (next_to ?char ?obj)\\n                  (closed ?obj)\\n              )\\n  :effect (and\\n              (not (closed ?obj))\\n           )\\n)\\n\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (can_open ?obj)\\n                  (next_to ?char ?obj)\\n                  (not (closed ?obj))\\n              )\\n  :effect (and\\n              (closed ?obj)\\n           )\\n)\\n\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (has_plug ?obj)\\n                  (next_to ?char ?obj)\\n                  (not (plugged_in ?obj))\\n              )\\n  :effect (and\\n              (plugged_in ?obj)\\n           )\\n)\\n\"\n}"
    },
    {
        "identifier": "911_1",
        "llm_output": "{\"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n                   (containers ?obj2)  ; obj2 must be a container\\n                   (movable ?obj1)  ; obj1 must be movable\\n                   (movable ?obj2)  ; obj2 must be movable\\n                   (obj_inside ?obj1 ?obj2)  ; obj1 is inside obj2\\n               )\\n  :effect (and\\n               (when (obj_inside ?obj1 ?obj2)(not (obj_inside ?obj1 ?obj2)))  ; obj1 is no longer inside obj2\\n               (when (next_to ?char ?obj1)(not (next_to ?char ?obj1)))  ; character is not next to obj1\\n               (next_to ?char ?obj2)  ; character is next to obj2\\n           )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)  ; The character must be next to the object\\n  :effect ()\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_switch ?obj)  ; The object must have a switch\\n                   (off ?obj)  ; The object must be turned off\\n                   (clean ?obj)  ; The obj must be clean\\n                 )\\n  :effect (and\\n               (on ?obj)  ; The object is now turned on\\n               (lookable ?obj)  ; The object can be looked at\\n           )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)  ; The object must be grabbable\\n                   (next_to ?char ?obj)  ; The character must be next to the object\\n                 )\\n  :effect (when (grabbable ?obj)(not (grabbable ?obj)))  ; The object is no longer grabbable\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (can_open ?obj)  ; The object can be opened\\n                   (closed ?obj)  ; The object is closed\\n                   (next_to ?char ?obj)  ; The character must be next to the object\\n                 )\\n  :effect (and\\n               (when (closed ?obj)(not (closed ?obj)))  ; The object is no longer closed\\n               (on ?obj)         \\n           )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (can_open ?obj)  ; The object can be opened\\n                   (not (closed ?obj))  ; The object is open\\n                   (next_to ?char ?obj)  ; The character must be next to the object\\n                 )\\n  :effect (and\\n               (closed ?obj)        ; The object is now closed\\n               (lookable ?obj)      \\n           )\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_plug ?obj)  ; The object must have a plug\\n                   (has_switch ?obj)  ; The object must have a switch\\n                   (not (plugged_in ?obj))  ; The object is not currently plugged in\\n                   (next_to ?char ?obj)  ; The character must be next to the object\\n                 )\\n  :effect (and\\n               (plugged_in ?obj)  ; The object is now plugged in\\n               (lookable ?obj)  ; The object can be looked at\\n           )\\n)\"}\n"
    },
    {
        "identifier": "1027_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (inside ?char ?obj)\\n        (sittable ?obj)\\n    )\\n  :effect (and\\n        (next_to ?char ?obj)\\n    )\\n)\\n\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (lying ?char)\\n        (ontop ?char ?obj)\\n    )\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "181_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards :parameters (?char - character ?obj - object) :precondition () :effect ())\\n(:action lie :parameters (?char - character ?obj - object) :precondition () :effect ())\"\n}"
    },
    {
        "identifier": "244_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (next_to ?char ?obj))\\n)\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (inside_room ?obj ?char))\\n  :effect (and (lying ?char) (ontop ?char ?obj))\\n)\\n\"}"
    },
    {
        "identifier": "269_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\"}"
    },
    {
        "identifier": "509_2",
        "llm_output": "{\n\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (next_to ?char ?obj)\\n            )\\n  :effect (and\\n            (next_to ?char ?obj)\\n          )\\n)\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (sittable ?obj)\\n                (on_char ?obj ?char)\\n            )\\n  :effect (and\\n            (not (sittable ?obj))\\n            (not (on_char ?obj ?char))\\n            (lying ?char)\\n            (ontop ?char ?obj)\\n          )\\n)\"\n}"
    },
    {
        "identifier": "875_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (next_to ?char ?obj)\\n    )\\n  :effect (and\\n        (not (next_to ?char ?obj))\\n    )\\n)\\n\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (sittable ?obj)\\n        (next_to ?char ?obj)\\n    )\\n  :effect (and\\n        (not (sittable ?obj))\\n        (lying ?char)\\n        (ontop ?char ?obj)\\n    )\\n)\\n\"\n}"
    },
    {
        "identifier": "1035_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (next_to ?char ?obj)\\n    )\\n  :effect ()\\n)\"}"
    },
    {
        "identifier": "113_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (movable ?obj) \\n                   (grabbable ?obj) \\n                   (next_to ?char ?obj)\\n                )\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "12_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n    :parameters (?char - character ?obj - object)\\n    :precondition (and\\n        (obj_inside ?obj ?dest)\\n        (movable ?obj)\\n        (next_to ?char ?obj)\\n    )\\n    :effect (and\\n        (next_to ?char ?obj)\\n    )\\n)\"\n}"
    },
    {
        "identifier": "137_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect ()\\n)\"}"
    },
    {
        "identifier": "203_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (next_to ?char ?obj)\\n            )\\n  :effect\\n)\\n\"}"
    },
    {
        "identifier": "220_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (person ?char)  ; character must be a person\\n                   (containers ?obj)  ; object must be a container\\n                   (movable ?char)  ; person must be movable\\n                   (obj_inside ?obj ?char)  ; the character is inside the object\\n               )\\n  :effect (and\\n             (next_to ?char ?obj)  ; character is now next to the object\\n           )\\n)\"}"
    },
    {
        "identifier": "242_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (movable ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "279_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (movable ?obj)\\n                    (next_to ?char ?obj)\\n                )\\n  :effect (and\\n                    (next_to ?char ?obj)\\n                )\\n)\"}"
    },
    {
        "identifier": "287_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (movable ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect ()\\n)\"}"
    },
    {
        "identifier": "292_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                     (person ?char)\\n                     (obj_next_to ?char ?obj)\\n                 )\\n  :effect (and\\n             (next_to ?char ?obj)\\n          )\\n)\"}"
    },
    {
        "identifier": "297_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                        (obj_next_to ?char ?obj)  ; The character must be next to the object\\n                    )\n\n  :effect ()\n)\"}"
    },
    {
        "identifier": "381_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (movable ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\"}"
    },
    {
        "identifier": "388_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (movable ?obj)\\n                   (next_to ?char ?obj)\\n               )\\n  :effect (and\\n             (next_to ?char ?obj)\\n           )\\n)\"}\n"
    },
    {
        "identifier": "38_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (movable ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "429_1",
        "llm_output": "{\"output\":\"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and\\n             (next_to ?char ?obj)\\n     )\\n)\"}"
    },
    {
        "identifier": "437_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (movable ?char)\\n                 (next_to ?char ?obj)\\n             )\\n  :effect (and\\n                 (next_to ?char ?obj)\\n             )\\n)\"}"
    },
    {
        "identifier": "451_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ())\\n\"}"
    },
    {
        "identifier": "469_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and\\n             (next_to character obj)\\n           )\\n)\"}"
    },
    {
        "identifier": "479_2",
        "llm_output": "{\n  \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n              (movable ?obj)          ; The object must be movable\\n              (obj_next_to ?char ?obj)   ; The character must be next to the object\\n            )\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "502_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                     (movable ?obj)\\n                     (next_to ?char ?obj)\\n                 )\\n  :effect (and\\n                 (next_to ?char ?obj)\\n             )\\n)\"}"
    },
    {
        "identifier": "612_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (movable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (\\n      (next_to ?char ?obj)\\n  )\\n)\"}"
    },
    {
        "identifier": "856_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (obj_next_to ?char ?obj)  ; The character should be next to the target object\\n               )\\n  :effect (next_to ?char ?obj)  ; Moving towards the object results in the character being next to it\\n)\\n\"}"
    },
    {
        "identifier": "384_1",
        "llm_output": "{\n  \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (not (next_to ?char ?obj)) (next_to ?char ?obj))\\n)\\n(:action walk_into\\n  :parameters (?char - character ?room - object)\\n  :precondition (and (obj_inside ?room home_office) (next_to ?char ?room))\\n  :effect (not (next_to ?char ?room))\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (next_to ?char ?obj) (off ?obj))\\n  :effect (and (not (off ?obj)) (on ?obj))\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (and (not (next_to ?char ?obj)) (holds_rh ?char ?obj))\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (facing ?char ?obj))\\n  :effect ()\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_plug ?obj) (has_plug ?obj) (has_switch ?obj) (next_to ?char ?obj) (plugged_out ?obj))\\n  :effect (and (not (plugged_out ?obj)) (plugged_in ?obj) (on ?obj))\\n)\\n\"\n}"
    },
    {
        "identifier": "540_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (movable ?obj) (inside ?char ?obj))\\n  :effect (and (next_to ?char ?obj))\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (and (holds_rh ?char ?obj))\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (facing ?char ?obj))\\n  :effect ()\\n)\"}"
    },
    {
        "identifier": "60_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (obj_next_to ?obj ?char) ; Character is next to the object\\n                   (movable ?char) ; Character is movable\\n               )\\n  :effect (and\\n              (next_to ?char ?obj) ; Character is now next to the object\\n          )\\n)\\n\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (obj_next_to ?obj ?char) ; Character is next to the object\\n                   (lookable ?obj) ; Object can be looked at\\n                   (facing ?char ?obj) ; Character is facing the object\\n               )\\n  :effect ()\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_switch ?obj) ; Object has a switch\\n                   (lonely ?char ?obj) ; Character is close to or next to object\\n               )\\n  :effect (and\\n               (on ?obj) ; Object is switched on\\n           )\\n)\\n\"}"
    },
    {
        "identifier": "71_2",
        "llm_output": "{\n\t\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (next_to ?char ?obj)  ; The character must be next to the object to walk towards it\\n              )\\n  :effect (and\\n              (next_to ?char ?obj)  ; The character is now next to the object\\n          )\\n)\\n\\n(:action walk_into\\n  :parameters (?char - character ?room - object)\\n  :precondition (and\\n                   (inside_room ?room ?char)  ; The character must be inside the room to walk into it\\n               )\\n  :effect (and\\n               (inside_room ?room ?char)  ; The character is now inside the room\\n           )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_switch ?obj)  ; The object must have a switch to be switched on\\n                   (next_to ?char ?obj)  ; The character must be next to the object to switch it on\\n                   (off ?obj)  ; The object must be off to switch it on\\n               )\\n  :effect (and\\n               (on ?obj)  ; The object is now switched on\\n           )\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)  ; The object must be grabbable\\n                   (next_to ?char ?obj)  ; The character must be next to the object to grab it\\n               )\\n  :effect (and\\n               (holds_rh ?char ?obj)  ; The character is now holding the object in the right hand\\n           )\\n)\\n\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (lookable ?obj)  ; The object must be lookable (able to be faced towards)\\n                   (next_to ?char ?obj)  ; The character must be next to the object to turn towards it\\n               )\\n  :effect (and\\n               (facing ?char ?obj)  ; The character is now facing towards the object\\n           )\\n)\\n\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_plug ?obj)  ; The object must have a plug\\n                   (plugged_out ?obj)  ; The object must be plugged out to plug it in\\n                   (next_to ?char ?obj)  ; The character must be next to the object to plug it in\\n               )\\n  :effect (and\\n               (plugged_in ?obj)  ; The object is now plugged in\\n           )\\n)\"\n}"
    },
    {
        "identifier": "7_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action walk_into\\n  :parameters (?char - character ?room - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\" }"
    },
    {
        "identifier": "1070_1",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (grabbable ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect\\n    (and\\n      (holds_rh ?char ?obj)\\n    )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect\\n)\\n\"\n}"
    },
    {
        "identifier": "313_2",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (grabbable ?obj)\\n                (next_to ?char ?obj))\\n  :effect (and\\n            (holds_lh ?char ?obj))\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (next_to ?char ?obj))\\n  :effect\\n)\" }"
    },
    {
        "identifier": "689_1",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (grabbable ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (holds_lh ?char ?obj)\\n  )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "718_1",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (grabbable ?obj)\\n                  (next_to ?char ?obj)\\n                  (not (ontop ?char ?obj)))\\n  :effect (and\\n              (holds_lh ?char ?obj)\\n            )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (next_to ?char ?obj)\\n                  (movable ?obj)\\n                  (inside_room ?obj ?room)\\n              )\\n  :effect (and\\n              (next_to ?char ?obj)\\n            )\\n)\"\n}"
    },
    {
        "identifier": "1049_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (surfaces ?obj)\\n        (next_to ?char ?obj)\\n  )\\n  :effect (\\n        (next_to ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (has_switch ?obj)\\n        (next_to ?char ?obj)\\n  )\\n  :effect (\\n        (on ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "113_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (movable ?obj)\\n                    (next_to ?char ?obj))\\n  :effect (and\\n              (next_to ?char ?obj))\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_switch ?obj)\\n                    (next_to ?char ?obj)\\n                    (plugged_in ?obj)\\n                    (closed ?obj)\\n                    (off ?obj))\\n  :effect (and\\n              (on ?obj))\\n)\"\n}"
    },
    {
        "identifier": "161_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (\\n    (next_to ?char ?obj)\\n    (movable ?obj)\\n  )\\n  :effect (\\n    (next_to ?char ?obj)\\n  )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (\\n    (next_to ?char ?obj)\\n    (has_switch ?obj)\\n    (plugged_in ?obj)\\n    (off ?obj)\\n  )\\n  :effect (\\n    (on ?obj)\\n    (not (off ?obj))\\n  )\\n)\"\n}"
    },
    {
        "identifier": "173_1",
        "llm_output": "{\"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (has_plug ?obj)\\n        (not (plugged_in ?obj))\\n        (movable ?obj)\\n        (next_to ?char ?obj)\\n  )\\n  :effect (and\\n        (plugged_in ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (has_switch ?obj)\\n        (plugged_in ?obj)\\n        (closed ?obj)\\n        (obj_next_to ?obj headset)\\n        (obj_next_to headset ?obj)\\n        (next_to ?char ?obj)\\n  )\\n  :effect (and\\n        (on ?obj)\\n        (not (off ?obj))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (movable ?obj)\\n        (next_to ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action standup\\n  :parameters (?char - character)\\n  :precondition (sitting ?char)\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "23_1",
        "llm_output": "{\n  \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (movable ?obj) \\n                  (sitting ?char) \\n                  (obj_inside ?obj bathroom))\\n  :effect (and\\n              (not (sitting ?char)) \\n              (not (inside ?char bathroom)) \\n              (next_to ?char ?obj))\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (has_switch ?obj) \\n                  (plugged_in ?obj) \\n                  (surfaces ?obj) \\n                  (not (on ?obj)) \\n                  (movable ?obj) \\n                  (clean ?obj) \\n                  (can_open ?obj) \\n                  (closed ?obj))\\n  :effect (and\\n              (on ?obj) \\n              (not (off ?obj)))\\n\"\n}"
    },
    {
        "identifier": "263_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (movable ?obj)  ; The object must be movable\\n    (surfaces ?obj)  ; The object has surfaces\\n    (clean ?obj)  ; The object is clean\\n    (inside ?char ?obj)  ; The character is inside the object\\n  )\\n  :effect\\n    (and\\n      (next_to ?char ?obj)  ; The character is now next to the object\\n    )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_switch ?obj)  ; The object has a switch\\n    (plugged_in ?obj)  ; The object is plugged in\\n    (next_to ?char ?obj)  ; The character is next to the object\\n    (closed ?obj)  ; The object is closed\\n  )\\n  :effect\\n    (and\\n      (on ?obj)  ; The object is now turned on\\n    )\\n)\"\n}"
    },
    {
        "identifier": "305_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (or\\n                (and\\n                    (inside ?char ?obj)  ; character is inside obj\\n                    (movable ?char)     ; character is movable\\n                )\\n                (and\\n                    (next_to ?char ?obj)  ; character is next to obj\\n                    (movable ?char)       ; character is movable\\n                )\\n            )\\n  :effect (and\\n             (not (next_to ?char ?obj))  ; character is no longer next to obj\\n             (next_to ?char ?obj)         ; character is now next to obj\\n           )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (has_switch ?obj)                    ; obj has a switch\\n                  (next_to ?char ?obj)                   ; char is next to obj\\n                  (plugged_in ?obj)                     ; obj is plugged in\\n                  (closed ?obj)                         ; obj is closed\\n              )\\n  :effect (and\\n               (not (closed ?obj))                 ; obj is now open\\n               (on ?obj)                           ; obj is turned on\\n           )\\n)\"\n}"
    },
    {
        "identifier": "363_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and\\n             (not (next_to ?char ?obj))\\n             (next_to ?char ?obj)\\n           )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (has_switch ?obj)\\n                (obj_inside ?obj home_office)\\n                (next_to ?char ?obj)\\n              )\\n  :effect (and\\n             (not (off ?obj))\\n             (on ?obj)\\n             (plugged_in ?obj)\\n           )\\n)\\n\"}"
    },
    {
        "identifier": "385_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (movable ?obj)\\n                  (next_to ?char ?obj)\\n                )\\n  :effect ((next_to ?char ?obj))\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (has_switch ?obj)\\n                  (next_to ?char ?obj)\\n                  (not (on ?obj))\\n                  (closed ?obj)\\n                )\\n  :effect (and\\n                (on ?obj)\\n                (not (off ?obj))\\n            )\\n)\"\n}"
    },
    {
        "identifier": "403_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (inside ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (plugged_in ?obj) (clean ?obj) (movable ?obj) (closed ?obj) (next_to ?char ?obj))\\n  :effect (and (on ?obj) (off ?obj) (not (closed ?obj)))\\n)\" }"
    },
    {
        "identifier": "415_1",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (grabbable ?obj)  ; The object must be grabbable\\n                    (next_to ?char ?obj)  ; The character must be next to the object\\n                )\\n  :effect (and\\n                (ontop ?obj ?char)  ; The object is now on the character\\n            )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)  ; The character must be next to the target object\\n  :effect (and\\n             (next_to ?char ?obj)   ; The character is now next to the target object\\n         )\\n)\\n\\n(:action put_on_character\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (clothes ?obj)  ; The object must be clothes\\n                    (movable ?obj)  ; The object is movable\\n                    (grabbable ?obj)  ; The object is grabbable\\n                    (next_to ?char ?obj)  ; The character must be next to the object\\n                )\\n  :effect (and\\n               (ontop ?obj ?char)  ; The object is now on the character\\n           )\\n)\\n\"}"
    },
    {
        "identifier": "462_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (inside ?char ?obj)\\n                    (obj_next_to ?obj ?char)\\n                )\\n  :effect (and\\n                    (next_to ?char ?obj)\\n                )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_switch ?obj)\\n                    (off ?obj)\\n                    (inside ?char ?obj)\\n                    (plugged_in ?obj)\\n                )\\n  :effect (and\\n                    (on ?obj)\\n                    (not (off ?obj))\\n                )\\n)\"\n}"
    },
    {
        "identifier": "463_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (inside ?char ?obj) (movable ?obj))\\n  :effect (and (next_to ?char ?obj))\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (inside ?char ?obj) (has_switch ?obj) (plugged_in ?obj) (closed ?obj))\\n  :effect (and (on ?obj))\\n)\"\n}"
    },
    {
        "identifier": "503_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and\\n             (not (next_to ?char ?obj))\\n             (facing ?char ?obj)\\n           )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_switch ?obj)\\n                   (next_to ?char ?obj)\\n                 )\\n  :effect (and\\n             (on ?obj)\\n             (not (off ?obj))\\n           )\\n)\\n\"}"
    },
    {
        "identifier": "59_1",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)\\n                   (next_to ?char ?obj)\\n                 )\\n  :effect (and\\n              (not (next_to ?char ?obj))\\n              (held ?char ?obj)\\n            )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (movable ?char)\\n                   (obj_next_to ?char ?obj)\\n                 )\\n  :effect (and\\n              (not (next_to ?char ?obj))\\n              (next_to ?char ?obj)\\n            )\\n)\\n\\n(:action put_on_character\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (clothes ?obj)\\n                   (movable ?obj)\\n                   (held ?char ?obj)\\n                 )\\n  :effect (and\\n              (on_char ?obj ?char)\\n              (not (held ?char ?obj))\\n            )\\n)\\n\"}"
    },
    {
        "identifier": "737_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (movable ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_switch ?obj)\\n    (plugged_in ?obj)\\n    (closed ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n    (not (off ?obj))\\n  )\\n)\"}"
    },
    {
        "identifier": "773_1",
        "llm_output": "{\n  \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (movable ?obj)\\n                   (accessible ?char ?obj)\\n                 )\\n  :effect (and\\n             (next_to ?char ?obj)\\n           )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_switch ?obj)\\n                   (next_to ?char ?obj)\\n                   (plugged_in ?obj)\\n                   (off ?obj)\\n                 )\\n  :effect (and\\n             (on ?obj)\\n           )\\n)\\n\"\n}"
    },
    {
        "identifier": "910_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (inside ?char ?obj)\\n                 (movable ?obj)            \\n              )\\n  :effect (and\\n              (next_to ?char ?obj)            \\n           )\\n)(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (has_switch ?obj)\\n                 (has_plug ?obj)\\n                 (next_to ?char ?obj)\\n              )\\n  :effect (and\\n              (on ?obj)\\n           )\\n)\"\n}"
    },
    {
        "identifier": "953_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (closed ?obj)\\n    (has_switch ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n    (not (off ?obj))\\n  )\\n)\"\n}"
    },
    {
        "identifier": "1057_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (facing ?char ?obj))\\n)(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (facing ?char ?obj)\\n)(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)    \\n  :effect (and (has_switch ?obj) (not (off ?obj)) (on ?obj))\\n)\"}"
    },
    {
        "identifier": "117_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (next_to ?char ?obj) ; The character must be next to the object\\n              )\\n  :effect (and\\n              (next_to ?char ?obj) ; The character is now next to the object\\n          )\\n)\\n\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (next_to ?char ?obj) ; The character must be next to the target to perform the turn\\n              )\\n  :effect (\\n          )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (has_switch ?obj) ; The object must have a switch\\n                  (next_to ?char ?obj) ; The character must be next to the object\\n                  (off ?obj) ; The object must be off\\n              )\\n  :effect (and\\n              (on ?obj) ; The object is now on\\n          )\\n)\\n\"\n}"
    },
    {
        "identifier": "134_1",
        "llm_output": "{\n    \"output\": \"(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_plug ?obj)\\n                   (next_to ?char ?obj)\\n                   (plugged_out ?obj)\\n                 )\\n  :effect (and\\n               (plugged_in ?obj)\\n             )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (facing ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_switch ?obj)\\n                   (next_to ?char ?obj)\\n                   (off ?obj)\\n                 )\\n  :effect (on ?obj)\\n)\\n\"\n}"
    },
    {
        "identifier": "170_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (next_to ?char ?obj))\\n  :effect (and\\n              (next_to ?char ?obj))\\n\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (next_to ?char ?obj))\\n  :effect (and\\n              (facing ?char ?obj))\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (has_switch ?obj)\\n                  (plugged_in ?obj)\\n                  (clean ?obj)\\n                  (next_to ?char ?obj)\\n                  (facing ?char ?obj)\\n                  (off ?obj))\\n  :effect (and\\n              (on ?obj))\"}"
    },
    {
        "identifier": "197_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (person ?char)\\n                    (clothes ?obj)\\n                )  ; The character must be a person and the destination object must be clothes\\n  :effect (and\\n                    (next_to ?char ?obj)  ; The character is now next to the destination object\\n                )\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (person ?char)\\n                    (obj_next_to ?char ?obj)  ; The char must be next to the object\\n                )\\n  :effect (and\\n                    (facing ?char ?obj)  ; The character is now facing the object\\n                )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (person ?char)\\n                    (has_switch ?obj)  ; The object must have a switch\\n                    (obj_next_to ?char ?obj)  ; The character must be next to the object\\n                    (off ?obj)  ; The object needs to be off\\n                )\\n  :effect (and\\n                    (on ?obj)  ; The object is now turned on\\n                )\\n)\\n\"}"
    },
    {
        "identifier": "21_2",
        "llm_output": "{\n  \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (facing ?char ?obj)\\n  )\\n  :effect ()\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_switch ?obj)\\n    (next_to ?char ?obj)\\n    (off ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n    (not (off ?obj))\\n  )\\n)\"\n}"
    },
    {
        "identifier": "225_2",
        "llm_output": "\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (obj_next_to ?char ?obj)  ; The character must be next to the object\\n            )\\n  :effect (and\\n                (next_to ?char ?obj)  ; The character is now next to the object\\n            )\\n)\\n\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (next_to ?char ?obj)  ; The character must be already next to the object\\n            )\\n  :effect (and\\n            )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (has_switch ?obj)  ; The object must have a switch\\n                (off ?obj)  ; The object must be off\\n                (facing ?char ?obj)  ; The character must be facing the object\\n            )\\n  :effect (and\\n                (on ?obj)  ; The object is now turned on\\n            )\\n)\""
    },
    {
        "identifier": "259_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (next_to ?char ?obj)\\n                 (sittable ?obj)\\n             )\\n  :effect (and\\n              (next_to ?char ?obj)\\n          )\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (next_to ?char ?obj)\\n             )\\n  :effect (and\\n              (facing ?char ?obj)\\n          )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (has_switch ?obj)\\n                 (off ?obj)\\n             )\\n  :effect (and\\n              (on ?obj)\\n          )\\n)\"\n}"
    },
    {
        "identifier": "307_2",
        "llm_output": "{\n   \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect ((not (next_to ?char ?obj)) (next_to ?char ?obj))\\n)\\n\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect ((not (facing ?char ?obj)) (facing ?char ?obj))\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (next_to ?char ?obj) (off ?obj))\\n  :effect ((not (off ?obj)) (on ?obj))\\n)\"\n}"
    },
    {
        "identifier": "329_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (sittable ?obj)\\n                    (next_to ?char ?obj)\\n                )\\n  :effect\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (sittable ?obj)\\n                    (next_to ?char ?obj)\\n                )\\n  :effect\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_switch ?obj)\\n                    (off ?obj)\\n                    (next_to ?char ?obj)\\n                )\\n  :effect\\n)\\n\"}"
    },
    {
        "identifier": "342_2",
        "llm_output": "{\"output\":\"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (sittable ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj))\\n    (next_to ?char ?obj)\\n  )\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (inside_room ?obj)\\n    (next_to ?char ?obj)\\n    (facing ?char ?obj)\\n  )\\n  :effect (and\\n    (not (facing ?char ?obj))\\n    (facing ?char ?obj)\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_switch ?obj)\\n    (on ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (not (off ?obj))\\n    (on ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "377_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (movable ?char)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n    (lookable ?obj)\\n  )\\n  :effect (and\\n    (facing ?char ?obj)\\n  )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (on ?obj)\\n    (has_switch ?obj)\\n    (plugged_in ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (on ?obj)\\n    (open ?obj)\\n  )\\n)\"}"
    },
    {
        "identifier": "383_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (obj_next_to ?char ?obj) ; The character must be next to the object\\n                   (not (next_to ?char ?obj)) ; Ensure the character is not already on the object\\n                 )\\n  :effect (and\\n             (next_to ?char ?obj) ; The character is now next to the object\\n           )\\n)\\n\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj) ; The character must be next to the object to turn towards\\n  :effect (facing ?char ?obj) ; The character is now facing the object\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_switch ?obj) ; The object must have a switch\\n                   (off ?obj) ; The object must be off to switch it on\\n                   (next_to ?char ?obj) ; The character must be next to the object\\n                 )\\n  :effect (and\\n             (on ?obj) ; The object is now turned on\\n           )\\n)\\n\"}"
    },
    {
        "identifier": "411_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (next_to ?char ?obj)\\n               )\\n  :effect (\\n                   (next_to ?char ?obj)\\n              )\\n)\\n\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (next_to ?char ?obj)\\n                   (obj_next_to ?obj ?char)\\n               )\\n  :effect (\\n                   (facing ?char ?obj)\\n              )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_switch ?obj)\\n                   (object_inside ?obj home_office)\\n                   (next_to ?char ?obj)\\n                   (off ?obj)\\n               )\\n  :effect (\\n                   (on ?obj)\\n                   (facing ?char ?obj)\\n              )\\n)\"\n}"
    },
    {
        "identifier": "454_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (sittable ?obj)  ; The object must be sittable\\n                    (next_to ?char ?obj)  ; The character must be next to the object\\n                    (obj_inside ?obj ?room)  ; The object must be inside a room\\n                )\\n  :effect (and\\n                (next_to ?char ?obj)  ; The character is now next to the object\\n            )\\n)\\n\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (facing ?char ?obj)  ; The character must be facing the object\\n                    (next_to ?char ?obj)  ; The character must be next to the object\\n                )\\n  :effect (and\\n                (facing ?char ?obj)  ; The character is now facing the object\\n            )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_switch ?obj)  ; The object must have a switch\\n                    (next_to ?char ?obj)  ; The character must be next to the object\\n                    (off ?obj)  ; The object must be off\\n                )\\n  :effect (and\\n                (on ?obj)  ; The object is now turned on\\n            )\\n)\\n\"}"
    },
    {
        "identifier": "459_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (facing ?char ?obj) (not (next_to ?char ?obj)))\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (facing ?char ?obj)\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_switch ?obj) (next_to ?char ?obj) (off ?obj))\\n  :effect (and (on ?obj) (not (off ?obj)))\\n)\\n\"}"
    },
    {
        "identifier": "548_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (movable ?char)(movable ?obj))\\n  :effect (and (next_to ?char ?obj))\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (movable ?char)(lookable ?obj))\\n  :effect (and (facing ?char ?obj))\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (has_plug ?obj)(has_switch ?obj)(plugged_in ?obj)(facing ?char ?obj))\\n  :effect (and (on ?obj))\\n)\\n\"}"
    },
    {
        "identifier": "595_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (next_to ?char ?obj)\\n                   (movable ?char)\\n                 )\\n  :effect (and\\n              (next_to ?char ?obj)\\n            )\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (next_to ?char ?obj)\\n                 )\\n  :effect (and\\n              (facing ?char ?obj)\\n            )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_switch ?obj)\\n                   (next_to ?char ?obj)\\n                 )\\n  :effect (and\\n              (on ?obj)\\n            )\\n)\\n\"}"
    },
    {
        "identifier": "684_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)  ; The character must be next to the object\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)  ; The character is now next to the object\\n  )\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)  ; The character must be next to the object\\n  )\\n  :effect (and\\n    (facing ?char ?obj)  ; The character is now facing the object\\n  )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (has_switch ?obj)  ; The object must have a switch\\n    (on ?obj)  ; The object must be turned on\\n  )\\n  :effect (and\\n    (on ?obj)  ; The object is now turned on\\n  )\\n)\"\n}"
    },
    {
        "identifier": "74_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (movable ?char)\\n                  (obj_next_to ?char ?obj)\\n                  (not (inside ?char ?obj)))\\n  :effect (and\\n             (next_to ?char ?obj)\\n           )\\n)\\n\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (next_to ?char ?obj)\\n                  (facing ?char ?obj))\\n  :effect (and\\n             (facing ?char ?obj)\\n           )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (has_switch ?obj)\\n                  (next_to ?char ?obj)\\n                  (off ?obj))\\n  :effect (and\\n             (not (off ?obj))\\n             (on ?obj)\\n           )\\n)\"\n}"
    },
    {
        "identifier": "806_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n          (next_to ?char ?obj)  ; The character must be next to the object to walk towards it\\n      )\\n  :effect (and\\n          (facing ?char ?obj)  ; The character is now facing the object after walking towards it\\n      )\\n)\\n\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n          (next_to ?char ?obj)  ; The character must be next to the object to turn towards it\\n      )\\n  :effect (and\\n          (facing ?char ?obj)  ; The character is now facing the object\\n      )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n          (has_switch ?obj)  ; The object must have a switch\\n          (next_to ?char ?obj)  ; The character must be next to the object to switch it on\\n          (off ?obj)  ; The object must be off\\n      )\\n  :effect (and\\n          (on ?obj)  ; The object is now turned on\\n      )\\n)\\n\"}"
    },
    {
        "identifier": "98_1",
        "llm_output": "{\"output\":\"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (next_to ?char ?obj)  ; The character must be next to the object\\n               )\\n  :effect (and\\n               (facing ?char ?obj)         ; The character is now facing the object\\n            )\\n)\\n(:action turn_to\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (next_to ?char ?obj)  ; The character must be next to the object\\n               )\\n  :effect (and\\n               (facing ?char ?obj)         ; The character is now facing the object\\n            )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_switch ?obj)  ; The object must have a switch\\n                   (next_to ?char ?obj)  ; The character must be next to the object\\n                   (off ?obj)  ; The object must be turned off\\n               )\\n  :effect (and\\n               (on ?obj)         ; The object is now turned on\\n            )\\n)\"}"
    },
    {
        "identifier": "1064_1",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (movable ?obj)\\n    (grabbable ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj)\\n  )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n\"}"
    },
    {
        "identifier": "156_1",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (grabbable ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj)\\n  )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "171_2",
        "llm_output": "{\n    \"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (can_open ?obj) (obj_next_to ?char ?obj) (closed ?obj))\\n  :effect (and (not (closed ?obj)) (open ?obj))\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (and (not (next_to ?char ?obj)) (holds_rh ?char ?obj))\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "175_2",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (grabbable ?obj) \\n                (next_to ?char ?obj)\\n              )\\n  :effect (and\\n            (holds_rh ?char ?obj)\\n          )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and\\n            (next_to ?char ?obj)\\n          )\\n)\\n\"}"
    },
    {
        "identifier": "181_2",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)\\n                   (next_to ?char ?obj)\\n               )\\n  :effect (and\\n                 (holds_rh ?char ?obj) \\n               )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\"}"
    },
    {
        "identifier": "26_1",
        "llm_output": "{\"output\":\"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (grabbable ?obj)\\n        (next_to ?char ?obj)\\n    )\\n  :effect (and\\n        (holds_rh ?char ?obj)\\n    )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect \\n)\\n\"}"
    },
    {
        "identifier": "286_2",
        "llm_output": "{\"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (can_open ?obj) (next_to ?char ?obj) (closed ?obj))\\n  :effect (and (not (closed ?obj)) (open ?obj))\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect ()\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect (and (next_to ?char ?obj))\\n)\\n\"}"
    },
    {
        "identifier": "291_1",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (movable ?obj) ; The object must be movable\\n                    (next_to ?char ?obj) ; The character must be next to the object\\n                    (grabbable ?obj)  ; The object must be grabbable\\n                )\\n  :effect (and\\n                    (holds_rh ?char ?obj)  ; The character now holds the object\\n                    (not (next_to ?char ?obj))  ; The object is no longer next to the character\\n                )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)  ; The character is next to the object\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "317_2",
        "llm_output": "{\n    \"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (can_open ?obj)  ; the object must be openable\\n                (obj_next_to ?char ?obj)  ; character must be next to the object\\n              )\\n  :effect (and\\n                (open ?obj)  ; the object is now open\\n              )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (grabbable ?obj)  ; the object must be grabbable\\n                (next_to ?char ?obj)  ; character must be next to the object\\n              )\\n  :effect (and\\n                (grabbable ?obj)  ; the character is now holding the object\\n              )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (obj_next_to ?char ?obj)  ; character must be next to the object\\n              )\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "488_2",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (grabbable ?obj)\\n                 (next_to ?char ?obj)\\n             )\\n  :effect (and\\n              (holds_rh ?char ?obj)\\n              (not (next_to ?char ?obj))\\n          )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and\\n           (next_to ?char ?obj)\\n      )\\n)\"\n}"
    },
    {
        "identifier": "510_1",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (grabbable ?obj)\\n                    (next_to ?char ?obj)\\n                    (inside ?char ?obj)\\n                  )\\n  :effect (and\\n               (holds_rh ?char ?obj)\\n               (not (next_to ?char ?obj))\\n           )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (next_to ?char ?obj)\\n                  )\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "528_1",
        "llm_output": "{\"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (can_open ?obj)\\n                  (obj_next_to ?char ?obj)\\n                  (closed ?obj)\\n                  (plugged_in ?obj)\\n              )\\n  :effect (and\\n              (not (closed ?obj))\\n          )\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (grabbable ?obj)\\n                  (obj_next_to ?char ?obj)\\n                  (clean ?obj)\\n                  (movable ?obj)\\n              )\\n  :effect (and\\n              (not (obj_next_to ?char ?obj))\\n              (holds_rh ?char ?obj)\\n          )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (obj_next_to ?char ?obj)\\n                  (inside ?char home_office)\\n              )\\n  :effect (and\\n              (inside ?char dining_room)\\n          )\\n)\\n\"}"
    },
    {
        "identifier": "532_1",
        "llm_output": "{\n  \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (grabbable ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj)\\n    (not (next_to ?char ?obj))\\n  )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "589_1",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (grabbable ?obj)\\n                  (next_to ?char ?obj)\\n              )\\n  :effect (and\\n              (when (next_to ?char ?obj) (not (next_to ?char ?obj)))\\n              (holds_rh ?char ?obj)\\n           )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\\n\"}"
    },
    {
        "identifier": "600_1",
        "llm_output": "{\"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (can_open ?obj)\\n    (next_to ?char ?obj)\\n    (closed ?obj)\\n  )\\n  :effect (and\\n    (not (closed ?obj))\\n    (open ?obj)\\n  )\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (grabbable ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj)\\n  )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "662_1",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (grabbable ?obj)  ; The object must be grabbable\\n                    (next_to ?char ?obj)  ; The character must be next to the object\\n)\\n  :effect (and\\n                    (holds_rh ?char ?obj)  ; The character is now holding the object\\n)\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)  ; The character must be next to the target\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "688_1",
        "llm_output": "{\n\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (grabbable ?obj) \\n                    (next_to ?char ?obj) \\n                )\\n  :effect (and\\n                    (holds_rh ?char ?obj) \\n                    (holds_lh ?char ?obj) \\n                )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "787_1",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (grabbable ?obj)\\n        (next_to ?char ?obj)\\n    )\\n  :effect (and\\n        (holds_rh ?char ?obj)  ; character now holds the object\\n     )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (next_to ?char ?obj)  ; character is next to the object\\n    )\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "788_1",
        "llm_output": "{\n  \"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (can_open ?obj)  ; The object must be openable\\n                (next_to ?char ?obj)  ; The character must be next to the object to open it\\n            )\\n  :effect (and\\n                (open ?obj)  ; The object is now open\\n                (not (closed ?obj))  ; The object is no longer closed\\n            )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (grabbable ?obj)  ; The object must be grabbable\\n  :effect (and\\n                (holds_rh ?char ?obj)  ; The character now holds the object in the right hand\\n            )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)  ; The character must be next to the destination object\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "814_1",
        "llm_output": "{\"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (can_open ?obj)\\n                   (next_to ?char ?obj)\\n                   (closed ?obj)\\n               )\\n  :effect (and\\n               (not (closed ?obj))\\n               (open ?obj)\\n           )\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)\\n                   (next_to ?char ?obj)\\n               )\\n  :effect (and\\n               (not (grabbable ?obj))\\n               (holds_rh ?char ?obj)\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (inside_room ?char ?obj)\\n                   (obj_next_to ?char ?obj)\\n               )\\n  :effect (and\\n               (not (next_to ?char ?obj))\\n               (inside_room ?char ?obj)\\n           )\\n)\"}"
    },
    {
        "identifier": "850_2",
        "llm_output": "{\n    \"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (can_open ?obj)  ; The object must be openable\\n                    (next_to ?char ?obj)   ; The character must be next to the object\\n                    (closed ?obj)  ; The object must be closed\\n                )\\n  :effect (and\\n               (not (closed ?obj))  ; The object is now open\\n               (not (next_to ?char ?obj))  ; The character is no longer next to the object\\n           )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (grabbable ?obj)  ; The object must be grabbable\\n                    (next_to ?char ?obj)  ; The character must be next to the object\\n                )\\n  :effect (and\\n               (holds_rh ?char ?obj)  ; The character is now holding the object\\n               (not (next_to ?char ?obj))  ; The character is no longer next to the object\\n           )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (inside_room ?char ?obj)  ; The character must be inside the room containing the object\\n                    (obj_next_to ?obj ?char)  ; The object must be next to the character\\n                )\\n  :effect (and\\n               (next_to ?char ?obj)  ; The character is now next to the object\\n               (not (obj_next_to ?obj ?char))  ; The object is no longer next to the character\\n           )\\n)\"\n}"
    },
    {
        "identifier": "861_2",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (grabbable ?obj)  ; The object must be grabbable\\n                (next_to ?char ?obj)  ; The character must be next to the object\\n            )\\n  :effect (and\\n             (holds_rh ?char ?obj)  ; The character now holds the object\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (next_to ?char ?obj)  ; The character must be next to the target object\\n            )\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "878_2",
        "llm_output": "{\n    \"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (can_open ?obj) (next_to ?char ?obj) (closed ?obj))\\n  :effect (and (not (closed ?obj)) (open ?obj))\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj) (grabbable ?obj))\\n  :effect (and (not (next_to ?char ?obj)) (holds_rh ?char ?obj))\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "1073_1",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)\\n                   (next_to ?char ?obj)\\n               )\\n  :effect (and\\n               (holds_rh ?char ?obj)\\n               (not (next_to ?char ?obj))\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (next_to ?char ?obj)\\n               )\\n  :effect (and\\n               (next_to ?char ?obj)\\n           )\\n)\\n\"}"
    },
    {
        "identifier": "1088_1",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (grabbable ?obj)\\n                (movable ?obj)\\n                (next_to ?char ?obj)\\n             )\\n  :effect (and\\n                (holds_rh ?char ?obj)\\n                (not (next_to ?char ?obj)\\n            )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and\\n                (next_to ?char ?obj)\\n            )\\n)\\n\"}"
    },
    {
        "identifier": "15_2",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (movable ?obj) (next_to ?char ?obj))\\n  :effect (and (when (and (grabbable ?obj) (movable ?obj) (next_to ?char ?obj)) (holds_rh ?char ?obj)))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (next_to ?char ?obj))\\n)\\n\"}"
    },
    {
        "identifier": "163_1",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (grabbable ?obj)\\n                (next_to ?char ?obj)\\n            )\\n  :effect (and\\n                (holds_rh ?char ?obj)\\n                (not (grabbable ?obj))\\n            )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect\\n)\\n\"}"
    },
    {
        "identifier": "16_2",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (can_open ?obj)\\n                (grabbable ?obj)\\n                (grabbable ?char)\\n                (lookable ?obj)\\n                (lookable ?char)\\n                (obj_next_to ?obj ?char)\\n            )\\n  :effect (and\\n                (holds_rh ?char ?obj)\\n            )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (movable ?char)\\n                (movable ?obj)\\n                (next_to ?char ?obj)\\n                (inside ?char ?obj)\\n            )\\n  :effect (and\\n            )\\n)\\n\"}"
    },
    {
        "identifier": "192_1",
        "llm_output": "{\"output\":\"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (grabbable ?obj)\\n                    (next_to ?char ?obj)\\n                 )\\n  :effect (and\\n                (holds_rh ?char ?obj)\\n                (not (next_to ?char ?obj))\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and\\n                (next_to ?char ?obj)\\n           )\\n)\\n\"}"
    },
    {
        "identifier": "208_2",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (grabbable ?obj)  ; The object must be grabbable\\n                  (next_to ?char ?obj)  ; The character must be next to the object\\n              )\\n  :effect (and\\n              (holds_rh ?char ?obj)  ; Character is now holding the object\\n          )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (\\n                  (next_to ?char ?obj)  ; The character must be next to the object to walk towards it\\n              )\\n  :effect ()\\n)\\n\"\n}"
    },
    {
        "identifier": "221_2",
        "llm_output": "{\"output\":\"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (grabbable ?obj)\\n                 (next_to ?char ?obj)\\n             )\\n  :effect (and\\n                 (holds_rh ?char ?obj)\\n             )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and\\n                 (next_to ?char ?obj)\\n             )\\n)\"}"
    },
    {
        "identifier": "241_2",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (movable ?obj)\\n                    (grabbable ?obj)\\n                    (next_to ?char ?obj)\\n                )\\n  :effect (and\\n                    (holds_rh ?char ?obj)\\n                )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (movable ?obj)\\n                    (not (next_to ?char ?obj))\\n                )\\n  :effect (and\\n                    (next_to ?char ?obj)\\n                )\\n)\\n\\n(:action standup\\n  :parameters (?char - character)\\n  :precondition (sitting ?char)\\n  :effect (not (sitting ?char))\\n)\"\n}"
    },
    {
        "identifier": "341_1",
        "llm_output": "{\n    \"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (can_open ?obj)\\n                (next_to ?char ?obj)\\n            )\\n  :effect (and\\n                (open ?obj)\\n            )\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (grabbable ?obj)\\n                (next_to ?char ?obj)\\n            )\\n  :effect (and\\n                (when (grabbable ?obj) (not (grabbable ?obj)))\\n                (ontop ?obj ?char)\\n            )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "484_1",
        "llm_output": "{\n    \"output\": \"(:action grab\\n:parameters (?char - character ?obj - object)\\n:precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n:effect (and (holds_rh ?char ?obj))\\n)\\n\\n(:action walk_towards\\n:parameters (?char - character ?obj - object)\\n:precondition (next_to ?char ?obj)\\n:effect (and (next_to ?char ?obj))\\n)\\n\"\n}"
    },
    {
        "identifier": "504_2",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (grabbable ?obj)\\n                  (movable ?obj)\\n                  (next_to ?char ?obj))\\n  :effect (and\\n              (holds_rh ?char ?obj))\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (movable ?obj)\\n                  (next_to ?char ?obj))\\n  :effect (and\\n               (next_to ?char ?obj))\\n)\\n\"\n}"
    },
    {
        "identifier": "508_2",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)\\n                   (next_to ?char ?obj)\\n                 )\\n  :effect (and\\n             (holds_rh ?char ?obj)\\n             (not (next_to ?char ?obj))\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (next_to ?char ?obj))\\n)\\n\"}"
    },
    {
        "identifier": "544_1",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (grabbable ?obj)\\n                  (next_to ?char ?obj)\\n                  )\\n  :effect (and\\n              (when (next_to ?char ?obj) (not (next_to ?char ?obj)))\\n              (holds_rh ?char ?obj)\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect \\n)\")}"
    },
    {
        "identifier": "57_1",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                     (grabbable ?obj)\\n                     (next_to ?char ?obj)\\n                  )\\n  :effect (and\\n               (holds_rh ?char ?obj)\\n            )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "617_2",
        "llm_output": "{\"output\":\"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (can_open ?obj)\\n    (next_to ?char ?obj)\\n    (not (open ?obj))\\n  )\\n  :effect (and\\n    (open ?obj)\\n  )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (grabbable ?obj)\\n    (next_to ?char ?obj)\\n    (not (ontop ?char ?obj))\\n  )\\n  :effect (and\\n    (ontop ?char ?obj)\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "628_1",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (grabbable ?obj)\\n                (movable ?obj)\\n                (next_to ?char ?obj)\\n                (not (obj_inside ?obj ?_))\\n                (not (ontop ?char ?obj))\\n            )\\n  :effect (and\\n                (ontop ?obj ?char)\\n                (not (next_to ?char ?obj))\\n                (not (holds_lh ?char ?obj))\\n                (not (holds_rh ?char ?obj))\\n            )\\n)(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (movable ?char)\\n                (movable ?obj)\\n                (obj_next_to ?char ?obj)\\n            )\\n  :effect (and\\n                (next_to ?char ?obj)\\n                (not (next_to ?char ?_))\\n            )\\n)\"\n}"
    },
    {
        "identifier": "688_2",
        "llm_output": "{\"output\":\"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (grabbable ?obj)\\n                (next_to ?char ?obj)\\n            )\\n  :effect (and\\n                (holds_rh ?char ?obj)\\n            )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "693_2",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (grabbable ?obj)        ; The object must be grabbable\\n        (obj_next_to ?char ?obj)    ; The character must be next to the object\\n  )\\n  :effect (and\\n        (holds_rh ?char ?obj)        ; The character is now holding the object\\n  )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (obj_next_to ?char ?obj)    ; The character must be next to the destination\\n  :effect (next_to ?char ?obj)        ; The character is now next to the destination\\n)\\n\"}"
    },
    {
        "identifier": "821_1",
        "llm_output": "{\n\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (grabbable ?obj)        ; The object must be grabbable\\n    (next_to ?char ?obj)    ; The character must be next to the object\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj)        ; The character is now holding the object\\n  )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)  ; The character must be next to the target\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "86_1",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (grabbable ?obj)\\n  :effect (and (when (next_to ?char ?obj)(not (next_to ?char ?obj))) (when (grabbable ?obj)(not (grabbable ?obj))) (when (obj_next_to ?obj ?char)(not (obj_next_to ?obj ?char))) (when (holds_rh ?char ?obj)(not (holds_rh ?char ?obj))))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition\\n  :effect (next_to ?char ?obj)\\n)\\n\"\n}"
    },
    {
        "identifier": "896_2",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (grabbable ?obj)\\n      (next_to ?char ?obj)\\n  )\\n  :effect (and\\n      (holds_lh ?char ?obj)\\n  )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and)\\n)\\n\"}"
    },
    {
        "identifier": "897_2",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (grabbable ?obj)\\n                (next_to ?char ?obj)\\n              )\\n  :effect (and\\n                (holds_rh ?char ?obj)\\n              )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (next_to ?char ?obj)\\n              )\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "1083_2",
        "llm_output": "{\"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n                    (sitting ?char)\\n                    (next_to ?char ?obj2)\\n                    (clothes ?obj1)\\n                    (sittable ?obj2)\\n                )\\n  :effect (and\\n                 (not (next_to ?char ?obj2))\\n                 (ontop ?obj1 ?obj2)\\n             )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                     (movable ?char)\\n                     (next_to ?char ?obj)\\n                 )\\n  :effect (and\\n                 (not (next_to ?char ?obj))\\n             )\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_switch ?obj)\\n                   (next_to ?char ?obj)\\n                 )\\n  :effect (and\\n               (on ?obj)\\n               (not (off ?obj))\\n             )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (next_to ?char ?obj)\\n                    (grabbable ?obj)\\n                )\\n  :effect (and\\n                 (next_to ?char ?obj)\\n                 (holds_rh ?char ?obj)\\n             )\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                     (can_open ?obj)\\n                     (next_to ?char ?obj)\\n                 )\\n  :effect (and\\n                 (not (open ?obj))\\n                 (closed ?obj)\\n             )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (can_open ?obj)\\n                    (next_to ?char ?obj)\\n                 )\\n  :effect (and\\n                 (not (closed ?obj))\\n                 (open ?obj)\\n             )\\n)\\n\"}"
    },
    {
        "identifier": "392_2",
        "llm_output": "{\"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n                  (movable ?obj1)\\n                  (next_to ?char ?obj2)\\n              )\\n  :effect (and\\n              (not (obj_next_to ?obj1 ?obj2))\\n              (obj_ontop ?obj1 ?obj2)\\n          )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (has_switch ?obj)\\n                  (plugged_in ?obj)\\n                  (closed ?obj)\\n                  (facing ?char ?obj)\\n              )\\n  :effect (and\\n              (on ?obj)\\n          )\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (grabbable ?obj)\\n                  (next_to ?char ?obj)\\n              )\\n  :effect (and\\n              (next_to ?char ?obj)\\n          )\\n)\\n\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (can_open ?obj)\\n                  (next_to ?char ?obj)\\n              )\\n  :effect (and\\n              (not (open ?obj))\\n              (closed ?obj)\\n          )\\n)\\n\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (can_open ?obj)\\n                  (next_to ?char ?obj)\\n              )\\n  :effect (and\\n              (not (closed ?obj))\\n              (open ?obj)\\n          )\\n)\\n\"}"
    },
    {
        "identifier": "755_2",
        "llm_output": "{\n    \"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n                   (sittable ?obj1)\\n                   (surfaces ?obj2)\\n                   (next_to ?obj1 ?obj2))\\n  :effect ((ontop ?char ?obj1))\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (next_to ?char ?obj)\\n                   (movable ?char)\\n                   (movable ?obj))\\n  :effect ((not (next_to ?char ?obj)))\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_switch ?obj)\\n                   (plugged_in ?obj)\\n                   (closed ?obj)\\n                   (next_to ?char ?obj))\\n  :effect ((on ?obj))\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)\\n                   (next_to ?char ?obj))\\n  :effect ((holds_rh ?char ?obj))\\n)\\n\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (can_open ?obj)\\n                   (next_to ?char ?obj)\\n                   (closed ?obj))\\n  :effect ((not (closed ?obj)))\\n)\"\n}"
    },
    {
        "identifier": "124_1",
        "llm_output": "{\"output\":\"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (sittable ?obj)\\n                  (next_to ?char ?obj)\\n              )\\n  :effect (and\\n              (next_to ?char ?obj)\\n          )\\n)\\n\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (sittable ?obj)\\n                  (next_to ?char ?obj)\\n              )\\n  :effect (and\\n              (sitting ?char)\\n              (ontop ?char ?obj)\\n          )\\n)\\n\"}"
    },
    {
        "identifier": "137_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (obj_next_to ?char ?obj)  ; the character must be next to the object\\n                )\\n  :effect (and\\n                    (next_to ?char ?obj)  ; the character is now next to the object\\n                )\\n)\\n\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (sittable ?obj)  ; the object must be sittable\\n                    (next_to ?char ?obj)  ; the character must be next to the object\\n                )\\n  :effect (and\\n                    (sitting ?char)  ; the character is now sitting\\n                    (ontop ?char ?obj)  ; the character is on top of the object\\n                )\\n)\"\n}"
    },
    {
        "identifier": "204_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (next_to ?char ?obj)    ; The character must be next to the object\\n  )\\n  :effect ()\\n)\\n\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n      (sittable ?obj)    ; The object must be sittable\\n      (next_to ?char ?obj)    ; The character must be next to the object\\n  )\\n  :effect (and\\n      (lying ?char)    ; The character is now lying\\n      (ontop ?char ?obj)    ; The character is on top of the object\\n  )\\n)\"}"
    },
    {
        "identifier": "268_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (sittable ?obj)\\n                   (next_to ?char ?obj)\\n               )\\n  :effect (and\\n               (next_to ?char ?obj)\\n           )\\n)\\n\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (sittable ?obj)\\n                   (next_to ?char ?obj)\\n               )\\n  :effect (and\\n               (sitting ?char)\\n               (ontop ?char ?obj)\\n           )\\n)\\n\"\n}"
    },
    {
        "identifier": "297_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (next_to ?char ?obj)  ; character must be next to the object\\n                    (sittable ?obj)  ; object must be sittable\\n                  )\\n  :effect ((next_to ?char ?obj))\\n)\\n\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (next_to ?char ?obj)  ; character must be next to the object\\n                    (lying ?char)  ; character must be lying\\n                    (sittable ?obj)  ; object must be sittable\\n                  )\\n  :effect ((ontop ?char ?obj))\\n)\"\n}"
    },
    {
        "identifier": "299_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (sittable ?obj)        ; The object must be sittable\\n        (next_to ?char ?obj)    ; The character must be next to the object\\n        (not (sitting ?char))    ; Character should not be sitting\\n    )\\n    :effect (and\\n        (not (next_to ?char ?obj))    ; Character is no longer next to the object\\n        (facing ?char ?obj)            ; The character is now facing the object\\n    )\\n)\\n\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (sittable ?obj)        ; The object must be sittable\\n        (next_to ?char ?obj)    ; The character must be next to the sittable object\\n        (not (sitting ?char))    ; Character should not be sitting\\n    )\\n    :effect (and\\n        (sitting ?char)        ; Character is now sitting\\n        (ontop ?char ?obj)      ; Character is on top of the sittable object\\n    )\\n)\"\n}"
    },
    {
        "identifier": "300_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (sittable ?obj)\\n        (next_to ?char ?obj)\\n    )\\n  :effect (\\n        (next_to ?char ?obj)\\n    )\\n)\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (sittable ?obj)\\n        (next_to ?char ?obj)\\n    )\\n  :effect (\\n        (sitting ?char)\\n        (ontop ?char ?obj)\\n    )\\n)\"\n}"
    },
    {
        "identifier": "321_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "332_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (next_to ?char ?obj)  ; The character must be next to the object to walk towards it\\n                )\\n  :effect (and\\n                    (next_to ?char ?obj)  ; The character is now next to the object after walking\\n                )\\n)\\n\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (sittable ?obj)  ; The object must be sittable\\n                    (next_to ?char ?obj)  ; The character must be next to the object to sit on it\\n                )\\n  :effect (and\\n                    (sitting ?char)  ; The character is now in a sitting position\\n                    (ontop ?char ?obj)  ; The character is now sitting on the object\\n                )\\n)\"}"
    },
    {
        "identifier": "379_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ())\\n\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ())\\n\"\n}"
    },
    {
        "identifier": "387_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (sittable ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (sitting ?char)\\n    (ontop ?char ?obj)\\n  )\\n)\"}"
    },
    {
        "identifier": "390_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (next_to ?char ?obj)  ; The character must be next to the target\\n            )\\n  :effect (and\\n                (next_to ?char ?obj)  ; The character is now next to the target\\n            )\\n)\\n\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (sittable ?obj)  ; The object must be sittable\\n                (next_to ?char ?obj)  ; The character must be next to the object\\n            )\\n  :effect (and\\n                (sitting ?char)  ; The character is now sitting\\n                (ontop ?char ?obj)  ; The character is now on top of the object\\n            )\\n)\"\n}"
    },
    {
        "identifier": "3_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (next_to ?char ?obj)  ; The character must be next to the object\\n                )\\n  :effect (and\\n                    (next_to ?char ?obj)  ; The character is now next to the object\\n                )\\n)\\n\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (sittable ?obj)  ; The object must be sittable\\n                    (next_to ?char ?obj)  ; The character must be next to the object\\n                )\\n  :effect (and\\n                    (sitting ?char)  ; The character is now sitting\\n                    (ontop ?char ?obj)  ; The character is now on top of the object\\n                )\\n)\\n\"}"
    },
    {
        "identifier": "416_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (next_to ?char ?obj)  ; The character must be next to the object\\n             )\\n  :effect (\\n             (next_to ?char ?obj)         ; The character is now next to the object\\n           )\\n)\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (lieable ?obj)  ; The object must be lieable\\n                 (sittable ?obj)  ; The object must be sittable\\n                 (next_to ?char ?obj)  ; The character must be next to the object\\n             )\\n  :effect (\\n             (lying ?char)       ; The character is now lying\\n             (ontop ?char ?obj)   ; The character is now on top of the object\\n           )\\n)\\n\"}"
    },
    {
        "identifier": "438_1",
        "llm_output": "{\n\t\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (inside ?char ?obj)\\n        (movable ?obj)\\n  )\\n  :effect (and\\n        (next_to ?char ?obj)\\n  )\\n)\\n\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (inside ?char ?obj)\\n        (lieable ?obj)\\n        (sittable ?obj)\\n  )\\n  :effect (and\\n        (lying ?char)\\n        (ontop ?char ?obj)\\n  )\\n)\\n\"\n}"
    },
    {
        "identifier": "442_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect () \\n)\\n\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (next_to ?char ?obj))\\n  :effect (and (sitting ?char) (ontop ?char ?obj))\\n)\\n\"}"
    },
    {
        "identifier": "447_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (sittable ?obj)  ; The object must be sittable\\n                    (walkable ?char ?obj)  ; The character must be able to walk towards the object\\n                )\\n  :effect (and\\n             (next_to ?char ?obj)  ; The character is next to the object\\n           )\\n)\\n\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (sittable ?obj)  ; The object must be sittable\\n                    (next_to ?char ?obj)  ; The character must be next to the object to sit\\n                )\\n  :effect (and\\n             (sitting ?char)  ; The character is now in a sitting position\\n             (ontop ?char ?obj)  ; The character is now on top of the object\\n           )\\n)\\n\"\n}"
    },
    {
        "identifier": "449_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (next_to ?char ?obj))\\n)\\n\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (sittable ?obj) \\n  :effect (and (sitting ?char) (not (sittable ?obj)))\\n)\\n\"}"
    },
    {
        "identifier": "455_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (not (next_to ?char ?obj)) (next_to ?char ?obj))\\n)\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (next_to ?char ?obj))\\n  :effect (and (not (next_to ?char ?obj)) (sitting ?char) (ontop ?char ?obj))\\n)\"\n}"
    },
    {
        "identifier": "456_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (sittable ?obj)\\n        (next_to ?char ?obj)\\n    )\\n  :effect (and\\n      (next_to ?char ?obj)\\n    )\\n)\\n\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (lieable ?obj)\\n        (next_to ?char ?obj)\\n    )\\n  :effect (and\\n        (lying ?char)\\n        (ontop ?char ?obj)\\n    )\\n)\\n\"\n}"
    },
    {
        "identifier": "473_1",
        "llm_output": "{\"output\":\"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (movable ?char)\\n    (next_to ?char ?obj))\\n  :effect (and\\n    (next_to ?char ?obj))\\n)\\n\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (sittable ?obj)\\n    (next_to ?char ?obj))\\n  :effect (and\\n    (sitting ?char)\\n    (ontop ?char ?obj))\\n)\\n\"}"
    },
    {
        "identifier": "490_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition\\n    (and\\n        (next_to ?char ?obj)  ; The character must be next to the object\\n    )\\n  :effect\\n    ; No effect specified\\n)\\n\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition\\n    (and\\n        (sittable ?obj)  ; The object must be sittable\\n        (next_to ?char ?obj)  ; The character must be next to the object\\n    )\\n  :effect\\n    (and\\n        (sitting ?char)  ; Make the character sit\\n        (ontop ?char ?obj)  ; Character is on top of the object\\n    )\\n)\\n\"}"
    },
    {
        "identifier": "563_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (surfaces ?obj)\\n        (sittable ?obj)\\n        (movable ?obj)\\n    )\\n  :effect (and\\n        (next_to ?char ?obj)\\n    )\\n)\\n\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n        (surfaces ?obj)\\n        (lieable ?obj)\\n        (movable ?obj)\\n        (next_to ?char ?obj)\\n    )\\n  :effect (and\\n        (lying ?char)\\n        (ontop ?char ?obj)\\n    )\\n)\\n\"}"
    },
    {
        "identifier": "567_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and\\n             (not (next_to ?char ?obj))\\n             (next_to ?char ?obj))\\n)\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (sittable ?obj)\\n                 (next_to ?char ?obj))\\n  :effect (and\\n             (not (sitting ?char))\\n             (lying ?char)\\n             (ontop ?char ?obj))\\n)\"}"
    },
    {
        "identifier": "570_1",
        "llm_output": "{\n  \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (not (next_to ?char ?obj))\\n    (next_to ?char ?obj)\\n  )\\n)\\n\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (sittable ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (sitting ?char)\\n    (ontop ?char ?obj)\\n  )\\n)\"\n}"
    },
    {
        "identifier": "674_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (obj_next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\\n\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (lieable ?obj) (sittable ?obj) (inside ?char ?obj))\\n  :effect (and (lying ?char) (ontop ?char ?obj))\\n)\"\n}"
    },
    {
        "identifier": "6_1",
        "llm_output": "{\n  \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (next_to ?char ?obj) (facing ?char ?obj))\\n)\\n\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (next_to ?char ?obj))\\n  :effect (and (sitting ?char) (ontop ?char ?obj))\\n)\\n\"\n}"
    },
    {
        "identifier": "742_1",
        "llm_output": "{\"output\":\"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (next_to ?char ?obj)  ; The character must be next to the object to walk towards\\n                  (surfaces ?obj)         ; The object must be a surface to walk towards\\n              )\\n  :effect (and\\n              (next_to ?char ?obj)  ; The character is now next to the object\\n          )\\n)\\n\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (sittable ?obj)        ; The object must be sittable\\n                  (next_to ?char ?obj)    ; The character must be next to the object to sit\\n              )\\n  :effect (and\\n              (sitting ?char)         ; The character is now sitting\\n              (ontop ?char ?obj)      ; The character is now on top of the object\\n          )\\n)\"}"
    },
    {
        "identifier": "762_2",
        "llm_output": "{\n\t\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (sittable ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\\n\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (lieable ?obj)\\n    (surfaces ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (lying ?char)\\n    (ontop ?char ?obj)\\n  )\\n)\\n\"\n}"
    },
    {
        "identifier": "793_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (next_to ?char ?obj)\\n            )\\n  :effect (and\\n                (next_to ?char ?obj)\\n            )\\n)\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (sittable ?obj)\\n                (next_to ?char ?obj)\\n                (lookable ?char)\\n            )\\n  :effect (and\\n                (lying ?char)\\n                (ontop ?char ?obj)\\n            )\\n)\"\n}"
    },
    {
        "identifier": "798_2",
        "llm_output": "{\n\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (not (next_to ?char ?obj)) (next_to ?char ?obj))\\n)\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (next_to ?char ?obj))\\n  :effect (and (sitting ?char) (ontop ?char ?obj))\\n)\\n\"\n}"
    },
    {
        "identifier": "932_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (person ?char)  ; character must be a person\\n                  (containers ?obj)  ; object must be a container\\n                  (next_to ?char ?obj)  ; character must be next to the object to walk towards it\\n              )\\n  :effect ()\\n)\\n\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (person ?char)  ; character must be a person\\n                  (sittable ?obj)  ; object must be sittable\\n                  (next_to ?char ?obj)  ; character must be next to the object to sit on it\\n              )\\n  :effect (and\\n                  (sitting ?char)  ; character is now sitting\\n                  (ontop ?char ?obj)  ; character is now on top of the object\\n              )\\n)\\n\"}"
    },
    {
        "identifier": "941_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ())\\n\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (next_to ?char ?obj))\\n  :effect (and (sitting ?char) (ontop ?char ?obj)))\\n\"\n}"
    },
    {
        "identifier": "96_1",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ((not (next_to ?char - character ?char ?obj - object)))\\n)\\n(:action sit\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (sittable ?obj) (next_to ?char ?obj))\\n  :effect (and (sitting ?char) (ontop ?char ?obj))\\n)\"\n}"
    },
    {
        "identifier": "976_1",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                     (sittable ?obj)  ; Object must be sittable\\n                     (inside ?char ?obj)  ; Character is inside the object\\n                     (next_to ?char ?obj)  ; Character is next to the object\\n                 )\\n  :effect (and\\n             (next_to ?char ?obj)  ; Character is now next to the object\\n         )\\n)\\n\\n(:action lie\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                     (lieable ?obj)  ; Object must be lieable\\n                     (inside ?char ?obj)  ; Character is inside the object\\n                     (next_to ?char ?obj)  ; Character is next to the object\\n                 )\\n  :effect (and\\n             (lying ?char)  ; Character is now lying\\n             (ontop ?char ?obj)  ; Character is now on top of the object\\n         )\\n)\\n\"}"
    },
    {
        "identifier": "149_1",
        "llm_output": "{\n  \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)\\n                   (next_to ?char ?obj)\\n                 )\\n  :effect (and\\n             (not (grabbable ?obj))\\n             (holds_rh ?char ?obj)\\n           )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and\\n           (not (next_to ?char ?obj))\\n           (next_to ?char ?obj)\\n         )\\n)\\n(:action standup\\n  :parameters (?char - character)\\n  :precondition (sitting ?char)\\n  :effect (not (sitting ?char))\\n)\"\n}"
    },
    {
        "identifier": "154_1",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition\\n    (and\\n        (grabbable ?obj)\\n        (obj_next_to ?char ?obj)\\n        (movable ?obj)\\n    )\\n  :effect\\n    (and\\n        (holds_rh ?char ?obj)\\n    )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition\\n    (and\\n        (next_to ?char ?obj)\\n    )\\n  :effect\\n    \\n)\\n\"}"
    },
    {
        "identifier": "180_1",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (grabbable ?obj)  ; The object must be grabbable\\n                (next_to ?char ?obj)  ; The character must be next to the object\\n            )\\n  :effect (and\\n                (holds_rh ?char ?obj)  ; The character now holds the object\\n            )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (movable ?char)  ; The character must be movable\\n                (obj_next_to ?char ?obj)  ; The character is next to the target object\\n            )\\n  :effect (and\\n                (next_to ?char ?obj)  ; The character is now next to the target object\\n            )\\n)\\n(:action standup\\n  :parameters (?char - character)\\n  :precondition (sitting ?char)  ; The character is sitting\\n  :effect (not (sitting ?char))  ; The character is no longer sitting\\n)\"\n}"
    },
    {
        "identifier": "195_1",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (grabbable ?obj)\\n                (movable ?obj)\\n                (next_to ?char ?obj)\\n            )\\n  :effect (and\\n                (holds_rh ?char ?obj)\\n            )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and (not (next_to ?char ?obj)) (next_to ?char ?obj))\\n)\"\n}"
    },
    {
        "identifier": "211_1",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (grabbable ?obj)\\n                 (next_to ?char ?obj)\\n              )\\n  :effect (and\\n              (holds_rh ?char ?obj)\\n              (not (next_to ?char ?obj))\\n          )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (next_to ?char ?obj)\\n              )\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "241_1",
        "llm_output": "{\n  \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (grabbable ?obj)\\n                (next_to ?char ?obj))\\n  :effect (and\\n                (holds_rh ?char ?obj))\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (next_to ?char ?obj))\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "264_1",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)  ; The object must be grabbable\\n                   (obj_next_to ?char ?obj)  ; The character must be next to the object\\n                )\\n  :effect (and\\n             (holds_rh ?char ?obj)  ; The character is now holding the object\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)  ; The character must be next to the target\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "265_2",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (grabbable ?obj)\\n                  (next_to ?char ?obj)\\n              )\\n  :effect (and\\n              (when (grabbable ?obj) (holds_rh ?char ?obj))\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "287_2",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (grabbable ?obj)  ; The object must be grabbable\\n                  (next_to ?char ?obj)  ; The character must be next to the object\\n                )\\n  :effect (and\\n              (holds_rh ?char ?obj)  ; The character is now holding the object\\n              (not (next_to ?char ?obj))  ; The character is no longer next to the object\\n            )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (next_to ?char ?obj)  ; The character must be next to the target object\\n                )\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "352_1",
        "llm_output": "{\n  \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (grabbable ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj)\\n    (not (next_to ?char ?obj))\\n  )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and\\n    (next_to ?char ?obj)\\n    (not (next_to ?char ?obj))\\n  )\\n)\"\n}"
    },
    {
        "identifier": "360_1",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (grabbable ?obj)\\n                  (next_to ?char ?obj)\\n              )\\n  :effect (and\\n                  (when (and (next_to ?char ?obj)(grababble ?obj)))\\n              )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\\n\"}"
    },
    {
        "identifier": "388_1",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)\\n                   (next_to ?char ?obj)\\n                 )\\n  :effect (and\\n             (holds_rh ?char ?obj)\\n           )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and\\n          (next_to ?char ?obj)\\n         )\\n)\"\n}"
    },
    {
        "identifier": "431_1",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (grabbable ?obj)\\n                    (movable ?obj)\\n                    (next_to ?char ?obj))\\n  :effect (and\\n                    (holds_rh ?char ?obj))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (next_to ?char ?obj)\\n                    (movable ?obj))\\n  :effect (and\\n                    (next_to ?char ?obj))\\n)\\n\"}"
    },
    {
        "identifier": "436_1",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (grabbable ?obj) (next_to ?char ?obj) (movable ?obj)\\n                )\\n  :effect ((when(and (not (holds_rh ?char ?obj))) (holds_rh ?char ?obj)))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (next_to ?char ?obj)\\n                )\\n  :effect ((next_to ?char ?obj))\\n)\\n\"}"
    },
    {
        "identifier": "442_2",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (grabbable ?obj) ; The object must be grabbable\\n                (next_to ?char ?obj) ; The character must be next to the object\\n            )\\n  :effect (and\\n                (holds_rh ?char ?obj) ; The character now holds the object\\n            )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n :precondition (next_to ?char ?obj)  ; The character must be next to the object\\n  :effect ()\\n)\"}"
    },
    {
        "identifier": "474_2",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (and (holds_rh ?char ?obj))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "482_2",
        "llm_output": "{\n  \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (grabbable ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (when (grabbable ?obj) (not (grabbable ?obj)))\\n    (ontop ?obj ?char)\\n  )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and\\n    (next_to ?char ?obj)\\n  )\\n)\"\n}"
    },
    {
        "identifier": "497_1",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                     (grabbable ?obj) \\n                     (next_to ?char ?obj))\\n  :effect\\n                     (and\\n                       (holds_rh ?char ?obj) \\n                     )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect\\n                     ()\\n)\"\n}"
    },
    {
        "identifier": "553_1",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (grabbable ?obj)\\n                (next_to ?char ?obj)\\n            )\\n  :effect (and\\n                (holds_rh ?char ?obj)\\n            )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (movable ?obj)\\n                (next_to ?char ?obj)\\n            )\\n  :effect (and\\n                (next_to ?char ?obj)\\n            )\\n)\\n\"}"
    },
    {
        "identifier": "601_2",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (grabbable ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (holds_rh ?char ?obj)\\n    (not (next_to ?char ?obj))\\n  )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "70_1",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (grabbable ?obj)\\n                    (obj_next_to ?char ?obj)\\n                )\\n  :effect (and\\n                    (holds_rh ?char ?obj)\\n                    (not (obj_next_to ?char ?obj))\\n                )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n\"}"
    },
    {
        "identifier": "864_2",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)\\n                   (movable ?obj)\\n                   (next_to ?char ?obj)\\n                 )\\n  :effect (and\\n             (holds_rh ?char ?obj)\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "963_2",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)\\n                   (inside ?char ?obj)\\n                   (next_to ?char ?obj)\\n                 )\\n  :effect (and\\n             (when (movable ?obj)\\n               (and\\n                 (not (inside ?char ?obj))\\n                 (holds_rh ?char ?obj)\\n               )\\n             )\\n           )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n)\\n\"}"
    },
    {
        "identifier": "974_1",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)\\n                   (inside ?char ?obj)\\n                   (movable ?obj)\\n                   (next_to ?char ?obj)\\n               )\\n  :effect (and\\n               (holds_rh ?char ?obj)\\n               (not (inside ?char ?obj))\\n           )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (and\\n               (next_to ?char ?obj)\\n           )\\n)\\n\"}"
    },
    {
        "identifier": "976_2",
        "llm_output": "{\n    \"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (grabbable ?obj) \\n                  (next_to ?char ?obj)\\n                 )\\n  :effect (and\\n              (holds_rh ?char ?obj) \\n             )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "99_2",
        "llm_output": "{\"output\":\"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (grabbable ?obj) (next_to ?char ?obj))\\n  :effect (and (holds_rh ?char ?obj))\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and (next_to ?char ?obj))\\n  :effect ()\\n)\"}"
    },
    {
        "identifier": "183_2",
        "llm_output": "{\n    \"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n                   (sittable ?obj1)\\n                   (sittable ?obj2)\\n                   (sitting ?char)\\n                   (next_to ?char ?obj1)\\n                 )\\n  :effect (and\\n             (not (next_to ?char ?obj1))\\n             (next_to ?char ?obj2)\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (movable ?char)\\n                   (walkable ?obj)\\n                   (next_to ?char ?obj)\\n                 )\\n  :effect (and\\n             (not (next_to ?char ?obj))\\n             (next_to ?char ?obj)\\n           )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_switch ?obj)\\n                   (off ?obj)\\n                   (next_to ?char ?obj)\\n                 )\\n  :effect (and\\n             (not (off ?obj))\\n             (on ?obj)\\n           )\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (grabbable ?obj)\\n                   (next_to ?char ?obj)\\n                 )\\n  :effect (and\\n             (not (next_to ?char ?obj))\\n             (holds_rh ?char ?obj)\\n           )\\n)\\n\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (can_open ?obj)\\n                   (open ?obj)\\n                   (next_to ?char ?obj)\\n                 )\\n  :effect (and\\n             (not (open ?obj))\\n             (closed ?obj)\\n           )\\n)\\n\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (can_open ?obj)\\n                   (closed ?obj)\\n                   (next_to ?char ?obj)\\n                 )\\n  :effect (and\\n             (not (closed ?obj))\\n             (open ?obj)\\n           )\\n)\"\n}"
    },
    {
        "identifier": "229_1",
        "llm_output": "{\n    \"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n                (person ?char)\\n                (eatable ?obj1)\\n                (recipient ?obj2)\\n                (next_to ?char ?obj2)\\n            )\\n  :effect (and\\n            (inside ?obj1 ?obj2)\\n            (not (next_to ?char ?obj2))\\n          )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (person ?char)\\n                (movable ?char)\\n                (movable ?obj)\\n                (next_to ?char ?obj)\\n            )\\n  :effect ()\\n)\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (person ?char)\\n                (has_switch ?obj)\\n                (plugged_in ?obj)\\n                (clean ?obj)\\n                (closed ?obj)\\n                (next_to ?char ?obj)\\n            )\\n  :effect (and\\n            (on ?obj)\\n          )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (person ?char)\\n                (grabbable ?obj)\\n                (next_to ?char ?obj)\\n            )\\n  :effect ()\\n)\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (person ?char)\\n                (can_open ?obj)\\n                (obj_inside ?obj2 ?obj)\\n                (next_to ?char ?obj)\\n            )\\n  :effect (and\\n            (not (open ?obj))\\n            (closed ?obj)\\n          )\\n)\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                (person ?char)\\n                (can_open ?obj)\\n                (closed ?obj)\\n                (next_to ?char ?obj)\\n            )\\n  :effect (and\\n            (not (closed ?obj))\\n            (open ?obj)\\n          )\\n)\\n\"\n}"
    },
    {
        "identifier": "310_2",
        "llm_output": "{\n    \"output\": \"(:action switch_off\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n\\n(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition ()\\n  :effect ()\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\\n\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition ()\\n  :effect ()\\n)\"\n}"
    },
    {
        "identifier": "721_2",
        "llm_output": "{\"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n                   (obj_next_to ?obj1 ?obj2)\\n                   (movable ?obj1)\\n                   (movable ?obj2)\\n               )\\n  :effect (and\\n               (not (obj_next_to ?obj1 ?obj2))\\n               (ontop ?obj1 ?obj2)\\n           )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (has_switch ?obj)\\n                   (plugged_in ?obj)\\n               )\\n  :effect (on ?obj)\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (next_to ?char ?obj)\\n                   (grabbable ?obj)\\n               )\\n  :effect (and\\n               (not (next_to ?char ?obj))\\n               (holds_rh ?char ?obj)\\n           )\\n)\\n\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (can_open ?obj)\\n                    (not (open ?obj))\\n                )\\n  :effect (open ?obj)\\n)\\n\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (can_open ?obj)\\n                    (open ?obj)\\n                )\\n  :effect (closed ?obj)\\n)\\n\\n(:action plug_in\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (has_plug ?obj)\\n                    (not (plugged_in ?obj))\\n                )\\n  :effect (plugged_in ?obj)\\n)\\n\"}"
    },
    {
        "identifier": "764_2",
        "llm_output": "{\n    \"output\": \"(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (\\n    (and\\n        (next_to ?char ?obj1)  ; character must be next to the first object\\n        (next_to ?char ?obj2)  ; character must be next to the second object\\n    )\\n  )\\n  :effect (\\n    (and\\n        (obj_ontop ?obj1 ?obj2)  ; the first object is on top of the second object\\n        (not (next_to ?char ?obj1))  ; character is no longer next to the first object\\n        (not (next_to ?char ?obj2))  ; character is no longer next to the second object\\n    )\\n  )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (\\n    (next_to ?char ?obj)  ; character must be next to the given object to walk towards it\\n  )\\n  :effect (\\n    (and\\n        (next_to ?char ?obj)  ; character is now next to the object\\n    )\\n  )\\n)\\n\\n(:action switch_on\\n  :parameters (?char - character ?obj - object)\\n  :precondition (\\n    (and\\n        (on ?obj)  ; the object must be turned on\\n        (has_switch ?obj)  ; the object must have a switch\\n        (next_to ?char ?obj)  ; character must be next to the object to switch it on\\n    )\\n  )\\n  :effect (\\n    (and\\n        (on ?obj)  ; the object is now turned on\\n    )\\n  )\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (\\n    (grabbable ?obj)  ; the object must be grabbable\\n    (next_to ?char ?obj)  ; character must be next to the object to grab it\\n  )\\n  :effect (\\n    (and\\n        (holds_rh ?char ?obj)  ; character now holds the object in the right hand\\n        (not (next_to ?char ?obj))  ; character is no longer next to the object\\n    )\\n  )\\n)\\n\\n(:action close\\n  :parameters (?char - character ?obj - object)\\n  :precondition (\\n    (can_open ?obj)  ; the object must be able to be opened to be closed\\n    (on ?obj)  ; the object must be on\\n    (next_to ?char ?obj)  ; character must be next to the object to close it\\n  )\\n  :effect (\\n    (and\\n        (closed ?obj)  ; the object is now closed\\n    )\\n  )\\n)\\n\\n(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (\\n    (can_open ?obj)  ; the object must be able to be opened\\n    (closed ?obj)  ; the object must be closed\\n    (next_to ?char ?obj)  ; character must be next to the object to open it\\n  )\\n  :effect (\\n    (and\\n        (not (closed ?obj))  ; the object is no longer closed\\n    )\\n  )\\n)\\n\"\n}"
    },
    {
        "identifier": "419_2",
        "llm_output": "{\"output\": \"(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                 (grabbable ?obj)  ; The object must be grabbable\\n                 (next_to ?char ?obj)  ; The character must be next to the object\\n                )\\n  :effect (and\\n               (when (grabbable ?obj) (not (grabbable ?obj)))  ; The object is no longer grabbable\\n               (next_to ?char ?obj)  ; The character is now next to the object\\n             )\\n)\\n\\n(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n                   (movable ?obj1)  ; The object to be placed must be movable\\n                   (surfaces ?obj2)  ; The target object must have surfaces\\n                   (next_to ?char ?obj2)  ; The character must be next to the target object\\n                 )\\n  :effect (and\\n              (obj_ontop ?obj1 ?obj2)  ; The object is now on top of the target object\\n              (next_to ?char ?obj2)  ; The character is now next to the target object\\n            )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                  (next_to ?char ?obj)  ; The character must be next to the target object to walk towards it\\n                )\\n  :effect (and\\n            ; No effect as walking towards an object does not change the state\\n          )\\n)\\n\"}"
    },
    {
        "identifier": "446_2",
        "llm_output": "{\n    \"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (can_open ?obj)\\n                   (inside ?char ?obj)\\n                )\\n  :effect (and\\n               (not (closed ?obj))\\n               (open ?obj)\\n            )\\n)\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                    (grabbable ?obj)\\n                    (next_to ?char ?obj)\\n                 )\\n  :effect (and\\n               (not (ontop ?char ?obj))\\n               (ontop ?char ?obj)\\n            )\\n)\\n(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n                    (grabbable ?obj1)\\n                    (surfaces ?obj2)\\n                    (ontop ?char ?obj1)\\n                    (next_to ?char ?obj2)\\n                 )\\n  :effect (and\\n               (not (ontop ?char ?obj1))\\n               (ontop ?obj1 ?obj2)\\n            )\\n)\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect (next_to ?char ?obj)\\n) \"\n}"
    },
    {
        "identifier": "710_2",
        "llm_output": "{\n\t\"output\": \"(:action open\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (can_open ?obj)\\n    (closed ?obj)\\n  )\\n  :effect (and\\n    (not (closed ?obj))\\n    (open ?obj)\\n  )\\n)\\n\\n(:action grab\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n    (grabbable ?obj)\\n    (next_to ?char ?obj)\\n  )\\n  :effect (and\\n    (not (grabbable ?obj))\\n    (next_to ?char ?obj)\\n  )\\n)\\n\\n(:action put_on\\n  :parameters (?char - character ?obj1 - object ?obj2 - object)\\n  :precondition (and\\n    (grabbable ?obj1)\\n    (surfaces ?obj2)\\n    (next_to ?char ?obj2)\\n  )\\n  :effect (and\\n    (not (grabbable ?obj1))\\n    (ontop ?obj1 ?obj2)\\n    (next_to ?char ?obj2)\\n  )\\n)\\n\\n(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ()\\n)\\n\"\n}"
    },
    {
        "identifier": "368_1",
        "llm_output": "{\"output\": \"(:action walk_into\\n  :parameters (?char - character ?room - object)\\n  :precondition (and\\n                (inside ?char ?room)  ; character is inside the room\\n            )\\n  :effect ()\\n)\"}"
    },
    {
        "identifier": "729_2",
        "llm_output": "{\"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (and\\n                   (inside ?char ?obj)\\n                   (inside_room shower bathroom)\\n                   )\\n  :effect (and\\n               (next_to ?char ?obj)\\n             )\\n)\\n\"}"
    },
    {
        "identifier": "975_2",
        "llm_output": "{\n    \"output\": \"(:action walk_towards\\n  :parameters (?char - character ?obj - object)\\n  :precondition (next_to ?char ?obj)\\n  :effect ())\"\n}"
    }
]